!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/41fa40d1/
A	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        A = 0,        \/\/\/< The A key$/;"	e	enum:sf::Keyboard::Key
ANGLEINFO_H	dependencies/spriter/spriterengine/objectinfo/angleinfo.h	/^#define ANGLEINFO_H$/;"	d
ANIMATIONINSTANCE_H	dependencies/spriter/spriterengine/animation/animationinstance.h	/^#define ANIMATIONINSTANCE_H$/;"	d
ANIMATION_H	dependencies/spriter/spriterengine/animation/animation.h	/^#define ANIMATION_H$/;"	d
ATLASFILE_H	dependencies/spriter/spriterengine/override/atlasfile.h	/^#define ATLASFILE_H$/;"	d
ATLAS_H	dependencies/spriter/spriterengine/global/atlas.h	/^#define ATLAS_H$/;"	d
Accelerometer	dependencies/sfml/include/SFML/Window/Sensor.hpp	/^        Accelerometer,    \/\/\/< Measures the raw acceleration (m\/s^2)$/;"	e	enum:sf::Sensor::Type
Accepted	dependencies/sfml/include/SFML/Network/Http.hpp	/^            Accepted       = 202, \/\/\/< The request has been accepted, but will be processed l/;"	e	enum:sf::Http::Response::Status
Add	dependencies/sfml/include/SFML/Graphics/BlendMode.hpp	/^        Add,            \/\/\/< Pixel = Src * SrcFactor + Dst * DstFactor$/;"	e	enum:sf::BlendMode::Equation
Add	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Add,          \/\/\/< The + key$/;"	e	enum:sf::Keyboard::Key
AlResource	dependencies/sfml/include/SFML/Audio/AlResource.hpp	/^class SFML_AUDIO_API AlResource$/;"	c	namespace:sf
AllocatorTraits	dependencies/nlohmann/json.hpp	/^        using AllocatorTraits = std::allocator_traits<AllocatorType<T>>;$/;"	t	function:nlohmann::basic_json::create	typeref:typename:std::allocator_traits<AllocatorType<T>>
AllocatorTraits	dependencies/spriter/spriterengine/user_override/json.hpp	/^				using AllocatorTraits = std::allocator_traits<AllocatorType<T>>;$/;"	t	function:nlohmann::basic_json::create	typeref:typename:std::allocator_traits<AllocatorType<T>>
AngleInfo	dependencies/spriter/spriterengine/objectinfo/angleinfo.cpp	/^	AngleInfo::AngleInfo() :$/;"	f	class:SpriterEngine::AngleInfo
AngleInfo	dependencies/spriter/spriterengine/objectinfo/angleinfo.h	/^	class AngleInfo$/;"	c	namespace:SpriterEngine
Animation	dependencies/spriter/spriterengine/animation/animation.cpp	/^	Animation::Animation(std::string initialName, real initialAnimationLength, bool initialLooping)/;"	f	class:SpriterEngine::Animation
Animation	dependencies/spriter/spriterengine/animation/animation.h	/^	class Animation$/;"	c	namespace:SpriterEngine
AnimationInstance	dependencies/spriter/spriterengine/animation/animationinstance.cpp	/^	AnimationInstance::AnimationInstance(EntityInstance *entityInstance, EntityInstanceData *entity/;"	f	class:SpriterEngine::AnimationInstance
AnimationInstance	dependencies/spriter/spriterengine/animation/animationinstance.h	/^	class AnimationInstance$/;"	c	namespace:SpriterEngine
AnimationInstanceIdMap	dependencies/spriter/spriterengine/entity/entityinstancedata.h	/^	typedef std::vector<AnimationInstance*> AnimationInstanceIdMap;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<AnimationInstance * >
AnimationInstanceNameMap	dependencies/spriter/spriterengine/entity/entityinstancedata.h	/^	typedef std::map<std::string, AnimationInstance*> AnimationInstanceNameMap;$/;"	t	namespace:SpriterEngine	typeref:typename:std::map<std::string,AnimationInstance * >
AnimationVector	dependencies/spriter/spriterengine/entity/entity.h	/^	typedef std::vector<Animation*> AnimationVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<Animation * >
Any	dependencies/sfml/include/SFML/Network/IpAddress.hpp	/^    static const IpAddress Any;       \/\/\/< Value representing any address (0.0.0.0)$/;"	m	class:sf::IpAddress	typeref:typename:const IpAddress
AnyPort	dependencies/sfml/include/SFML/Network/Socket.hpp	/^        AnyPort = 0 \/\/\/< Special value that tells the system to pick any available port$/;"	e	enum:sf::Socket::__anon1bf1ffe80103
Ascii	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^        Ascii,  \/\/\/< Text mode using ASCII encoding$/;"	e	enum:sf::Ftp::TransferMode
Asset	include/GameData.h	/^	template<class T> struct Asset : BaseAsset {$/;"	s	class:GameData
Asset	include/GameData.h	/^	template<class T> struct Asset<T*> : BaseAsset{$/;"	s	class:GameData
AtlasFile	dependencies/spriter/spriterengine/override/atlasfile.cpp	/^	AtlasFile::AtlasFile(std::string initialFilePath) :$/;"	f	class:SpriterEngine::AtlasFile
AtlasFile	dependencies/spriter/spriterengine/override/atlasfile.h	/^	class AtlasFile : public File$/;"	c	namespace:SpriterEngine
Attribute	dependencies/sfml/include/SFML/Window/ContextSettings.hpp	/^    enum Attribute$/;"	g	struct:sf::ContextSettings
AttributeVector	dependencies/spriter/spriterengine/override/spriterfileelementwrapper.h	/^	typedef std::vector<SpriterFileAttributeWrapper*> AttributeVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<SpriterFileAttributeWrapper * >
Axis	dependencies/sfml/include/SFML/Window/Joystick.hpp	/^    enum Axis$/;"	g	class:sf::Joystick
AxisCount	dependencies/sfml/include/SFML/Window/Joystick.hpp	/^        AxisCount   = 8   \/\/\/< Maximum number of supported axes$/;"	e	enum:sf::Joystick::__anon4de6f2fd0103
B	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        B,            \/\/\/< The B key$/;"	e	enum:sf::Keyboard::Key
BEZIEREASINGCURVE_H	dependencies/spriter/spriterengine/timeinfo/beziereasingcurve.h	/^#define BEZIEREASINGCURVE_H$/;"	d
BONEINSTANCEINFO_H	dependencies/spriter/spriterengine/objectinfo/boneinstanceinfo.h	/^#define BONEINSTANCEINFO_H$/;"	d
BONEOBJECTINFO_H	dependencies/spriter/spriterengine/objectinfo/boneobjectinfo.h	/^#define BONEOBJECTINFO_H$/;"	d
BONEREFINSTANCE_H	dependencies/spriter/spriterengine/objectref/bonerefinstance.h	/^#define BONEREFINSTANCE_H$/;"	d
BONEREF_H	dependencies/spriter/spriterengine/objectref/boneref.h	/^#define BONEREF_H$/;"	d
BOXINSTANCEINFO_H	dependencies/spriter/spriterengine/objectinfo/boxinstanceinfo.h	/^#define BOXINSTANCEINFO_H$/;"	d
BOXOBJECTINFO_H	dependencies/spriter/spriterengine/objectinfo/boxobjectinfo.h	/^#define BOXOBJECTINFO_H$/;"	d
BackSlash	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        BackSlash,    \/\/\/< The \\ key$/;"	e	enum:sf::Keyboard::Key
BackSpace	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        BackSpace,    \/\/\/< The Backspace key$/;"	e	enum:sf::Keyboard::Key
BadCommandSequence	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            BadCommandSequence      = 503, \/\/\/< Bad sequence of commands$/;"	e	enum:sf::Ftp::Response::Status
BadGateway	dependencies/sfml/include/SFML/Network/Http.hpp	/^            BadGateway          = 502, \/\/\/< The gateway server has received an error from the/;"	e	enum:sf::Http::Response::Status
BadRequest	dependencies/sfml/include/SFML/Network/Http.hpp	/^            BadRequest          = 400, \/\/\/< The server couldn't understand the request (synta/;"	e	enum:sf::Http::Response::Status
BaseAsset	include/GameData.h	/^	struct BaseAsset {$/;"	s	class:GameData
BasicJsonType	dependencies/nlohmann/json.hpp	/^    friend BasicJsonType;$/;"	m	class:nlohmann::detail::iter_impl
BasicJsonType	dependencies/spriter/spriterengine/user_override/json.hpp	/^			friend BasicJsonType;$/;"	m	class:nlohmann::detail::iter_impl
BezierEasingCurve	dependencies/spriter/spriterengine/timeinfo/beziereasingcurve.cpp	/^	BezierEasingCurve::BezierEasingCurve(real initialX1, real initialY1, real initialX2, real initi/;"	f	class:SpriterEngine::BezierEasingCurve
BezierEasingCurve	dependencies/spriter/spriterengine/timeinfo/beziereasingcurve.h	/^	class BezierEasingCurve : public EasingCurveInterface$/;"	c	namespace:SpriterEngine
Binary	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^        Binary, \/\/\/< Binary mode (file is transfered as a sequence of bytes)$/;"	e	enum:sf::Ftp::TransferMode
Black	dependencies/sfml/include/SFML/Graphics/Color.hpp	/^    static const Color Black;       \/\/\/< Black predefined color$/;"	m	class:sf::Color	typeref:typename:const Color
BlendMode	dependencies/sfml/include/SFML/Graphics/BlendMode.hpp	/^struct SFML_GRAPHICS_API BlendMode$/;"	s	namespace:sf
Blue	dependencies/sfml/include/SFML/Graphics/Color.hpp	/^    static const Color Blue;        \/\/\/< Blue predefined color$/;"	m	class:sf::Color	typeref:typename:const Color
Bold	dependencies/sfml/include/SFML/Graphics/Text.hpp	/^        Bold          = 1 << 0, \/\/\/< Bold characters$/;"	e	enum:sf::Text::Style
BoneInstanceInfo	dependencies/spriter/spriterengine/objectinfo/boneinstanceinfo.cpp	/^	BoneInstanceInfo::BoneInstanceInfo(point initialSize) :$/;"	f	class:SpriterEngine::BoneInstanceInfo
BoneInstanceInfo	dependencies/spriter/spriterengine/objectinfo/boneinstanceinfo.h	/^	class BoneInstanceInfo : public UniversalObjectInterface$/;"	c	namespace:SpriterEngine
BoneObjectInfo	dependencies/spriter/spriterengine/objectinfo/boneobjectinfo.cpp	/^	BoneObjectInfo::BoneObjectInfo() :$/;"	f	class:SpriterEngine::BoneObjectInfo
BoneObjectInfo	dependencies/spriter/spriterengine/objectinfo/boneobjectinfo.h	/^	class BoneObjectInfo : public UniversalObjectInterface$/;"	c	namespace:SpriterEngine
BoneRef	dependencies/spriter/spriterengine/objectref/boneref.cpp	/^	BoneRef::BoneRef(int initialObjectId, int initialParentObjectId, TimelineKey *initialKey) :$/;"	f	class:SpriterEngine::BoneRef
BoneRef	dependencies/spriter/spriterengine/objectref/boneref.h	/^	class BoneRef : public ObjectRef$/;"	c	namespace:SpriterEngine
BoneRefInstance	dependencies/spriter/spriterengine/objectref/bonerefinstance.cpp	/^	BoneRefInstance::BoneRefInstance(UniversalObjectInterface *initialResultObject,$/;"	f	class:SpriterEngine::BoneRefInstance
BoneRefInstance	dependencies/spriter/spriterengine/objectref/bonerefinstance.h	/^	class BoneRefInstance : public ObjectRefInstance$/;"	c	namespace:SpriterEngine
BoolType	dependencies/sfml/include/SFML/Network/Packet.hpp	/^    typedef bool (Packet::*BoolType)(std::size_t);$/;"	t	class:sf::Packet	typeref:typename:bool (Packet::*)(std::size_t)
BooleanVector	dependencies/spriter/spriterengine/loading/loadinghelpers.h	/^	typedef std::vector<bool> BooleanVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<bool>
BoxInstanceInfo	dependencies/spriter/spriterengine/objectinfo/boxinstanceinfo.cpp	/^	BoxInstanceInfo::BoxInstanceInfo(point initialSize):$/;"	f	class:SpriterEngine::BoxInstanceInfo
BoxInstanceInfo	dependencies/spriter/spriterengine/objectinfo/boxinstanceinfo.h	/^	class BoxInstanceInfo : public UniversalObjectInterface$/;"	c	namespace:SpriterEngine
BoxObjectInfo	dependencies/spriter/spriterengine/objectinfo/boxobjectinfo.cpp	/^	BoxObjectInfo::BoxObjectInfo():$/;"	f	class:SpriterEngine::BoxObjectInfo
BoxObjectInfo	dependencies/spriter/spriterengine/objectinfo/boxobjectinfo.h	/^	class BoxObjectInfo : public UniversalObjectInterface$/;"	c	namespace:SpriterEngine
Broadcast	dependencies/sfml/include/SFML/Network/IpAddress.hpp	/^    static const IpAddress Broadcast; \/\/\/< The "broadcast" address (for sending UDP messages /;"	m	class:sf::IpAddress	typeref:typename:const IpAddress
BufferCount	dependencies/sfml/include/SFML/Audio/SoundStream.hpp	/^        BufferCount = 3 \/\/\/< Number of audio buffers used by the streaming loop$/;"	e	enum:sf::SoundStream::__anonc1ee2bdc0103
Button	dependencies/sfml/include/SFML/Window/Mouse.hpp	/^    enum Button$/;"	g	class:sf::Mouse
ButtonCount	dependencies/sfml/include/SFML/Window/Joystick.hpp	/^        ButtonCount = 32, \/\/\/< Maximum number of supported buttons$/;"	e	enum:sf::Joystick::__anon4de6f2fd0103
ButtonCount	dependencies/sfml/include/SFML/Window/Mouse.hpp	/^        ButtonCount \/\/\/< Keep last -- the total number of mouse buttons$/;"	e	enum:sf::Mouse::Button
Bvec2	dependencies/sfml/include/SFML/Graphics/Glsl.hpp	/^    typedef Vector2<bool> Bvec2;$/;"	t	namespace:sf::Glsl	typeref:typename:Vector2<bool>
Bvec3	dependencies/sfml/include/SFML/Graphics/Glsl.hpp	/^    typedef Vector3<bool> Bvec3;$/;"	t	namespace:sf::Glsl	typeref:typename:Vector3<bool>
Bvec4	dependencies/sfml/include/SFML/Graphics/Glsl.hpp	/^    typedef implementation-defined Bvec4;$/;"	t	namespace:sf::Glsl	typeref:typename:implementation-defined
Bvec4	dependencies/sfml/include/SFML/Graphics/Glsl.hpp	/^    typedef priv::Vector4<bool> Bvec4;$/;"	t	namespace:sf::Glsl	typeref:typename:priv::Vector4<bool>
C	dependencies/sfml/include/SFML/System/Thread.inl	/^    void(C::*m_function)();$/;"	m	struct:priv::ThreadMemberFunc	typeref:typename:void (::* m_function)()	file:
C	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        C,            \/\/\/< The C key$/;"	e	enum:sf::Keyboard::Key
CHARACTERMAPINSTRUCTION_H	dependencies/spriter/spriterengine/charactermap/charactermapinstruction.h	/^#define CHARACTERMAPINSTRUCTION_H$/;"	d
CHARACTERMAPINTERFACE_H	dependencies/spriter/spriterengine/charactermap/charactermapinterface.h	/^#define CHARACTERMAPINTERFACE_H$/;"	d
CHARACTERMAP_H	dependencies/spriter/spriterengine/charactermap/charactermap.h	/^#define CHARACTERMAP_H$/;"	d
CUBICEASINGCURVE_H	dependencies/spriter/spriterengine/timeinfo/cubiceasingcurve.h	/^#define CUBICEASINGCURVE_H$/;"	d
CURVETYPE_BEZIER	dependencies/spriter/spriterengine/loading/loadinghelpers.h	/^		CURVETYPE_BEZIER$/;"	e	enum:SpriterEngine::CurveType
CURVETYPE_CUBIC	dependencies/spriter/spriterengine/loading/loadinghelpers.h	/^		CURVETYPE_CUBIC,$/;"	e	enum:SpriterEngine::CurveType
CURVETYPE_INSTANT	dependencies/spriter/spriterengine/loading/loadinghelpers.h	/^		CURVETYPE_INSTANT,$/;"	e	enum:SpriterEngine::CurveType
CURVETYPE_LINEAR	dependencies/spriter/spriterengine/loading/loadinghelpers.h	/^		CURVETYPE_LINEAR,$/;"	e	enum:SpriterEngine::CurveType
CURVETYPE_NONE	dependencies/spriter/spriterengine/loading/loadinghelpers.h	/^		CURVETYPE_NONE,$/;"	e	enum:SpriterEngine::CurveType
CURVETYPE_QUADRATIC	dependencies/spriter/spriterengine/loading/loadinghelpers.h	/^		CURVETYPE_QUADRATIC,$/;"	e	enum:SpriterEngine::CurveType
CURVETYPE_QUARTIC	dependencies/spriter/spriterengine/loading/loadinghelpers.h	/^		CURVETYPE_QUARTIC,$/;"	e	enum:SpriterEngine::CurveType
CURVETYPE_QUINTIC	dependencies/spriter/spriterengine/loading/loadinghelpers.h	/^		CURVETYPE_QUINTIC,$/;"	e	enum:SpriterEngine::CurveType
CharacterMap	dependencies/spriter/spriterengine/charactermap/charactermap.cpp	/^	CharacterMap::CharacterMap()$/;"	f	class:SpriterEngine::CharacterMap
CharacterMap	dependencies/spriter/spriterengine/charactermap/charactermap.h	/^	class CharacterMap$/;"	c	namespace:SpriterEngine
CharacterMapInstruction	dependencies/spriter/spriterengine/charactermap/charactermapinstruction.cpp	/^	CharacterMapInstruction::CharacterMapInstruction(int initialFileToReplaceIndex, File *initialRe/;"	f	class:SpriterEngine::CharacterMapInstruction
CharacterMapInstruction	dependencies/spriter/spriterengine/charactermap/charactermapinstruction.h	/^	class CharacterMapInstruction$/;"	c	namespace:SpriterEngine
CharacterMapInstructionVector	dependencies/spriter/spriterengine/charactermap/charactermap.h	/^	typedef std::vector<CharacterMapInstruction> CharacterMapInstructionVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<CharacterMapInstruction>
CharacterMapInterface	dependencies/spriter/spriterengine/charactermap/charactermapinterface.h	/^	class CharacterMapInterface$/;"	c	namespace:SpriterEngine
CharacterMapMap	dependencies/spriter/spriterengine/entity/entity.h	/^	typedef std::map<std::string, CharacterMap> CharacterMapMap;$/;"	t	namespace:SpriterEngine	typeref:typename:std::map<std::string,CharacterMap>
Chunk	dependencies/sfml/include/SFML/Audio/SoundStream.hpp	/^    struct Chunk$/;"	s	class:sf::SoundStream
CircleShape	dependencies/sfml/include/SFML/Graphics/CircleShape.hpp	/^class SFML_GRAPHICS_API CircleShape : public Shape$/;"	c	namespace:sf
Clock	dependencies/sfml/include/SFML/System/Clock.hpp	/^class SFML_SYSTEM_API Clock$/;"	c	namespace:sf
Close	dependencies/sfml/include/SFML/Window/WindowStyle.hpp	/^        Close      = 1 << 2, \/\/\/< Title bar + close button$/;"	e	enum:sf::Style::__anonab3490d60103
Closed	dependencies/sfml/include/SFML/Window/Event.hpp	/^        Closed,                 \/\/\/< The window requested to be closed (no data)$/;"	e	enum:sf::Event::EventType
ClosingConnection	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            ClosingConnection     = 221, \/\/\/< Service closing control connection$/;"	e	enum:sf::Ftp::Response::Status
ClosingDataConnection	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            ClosingDataConnection = 226, \/\/\/< Closing data connection, requested file action /;"	e	enum:sf::Ftp::Response::Status
Color	dependencies/sfml/include/SFML/Graphics/Color.hpp	/^class SFML_GRAPHICS_API Color$/;"	c	namespace:sf
Comma	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Comma,        \/\/\/< The , key$/;"	e	enum:sf::Keyboard::Key
CommandNotImplemented	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            CommandNotImplemented   = 502, \/\/\/< Command not implemented$/;"	e	enum:sf::Ftp::Response::Status
CommandUnknown	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            CommandUnknown          = 500, \/\/\/< Syntax error, command unrecognized$/;"	e	enum:sf::Ftp::Response::Status
CompatibleLimits	dependencies/nlohmann/json.hpp	/^    using CompatibleLimits = std::numeric_limits<CompatibleNumberIntegerType>;$/;"	t	struct:nlohmann::detail::is_compatible_integer_type_impl	typeref:typename:std::numeric_limits<CompatibleNumberIntegerType>
CompatibleLimits	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using CompatibleLimits = std::numeric_limits<CompatibleNumberIntegerType>;$/;"	t	struct:nlohmann::detail::is_compatible_integer_type_impl	typeref:typename:std::numeric_limits<CompatibleNumberIntegerType>
ConnectionClosed	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            ConnectionClosed = 1002, \/\/\/< Not part of the FTP standard, generated by SFML whe/;"	e	enum:sf::Ftp::Response::Status
ConnectionFailed	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            ConnectionFailed = 1001, \/\/\/< Not part of the FTP standard, generated by SFML whe/;"	e	enum:sf::Ftp::Response::Status
ConnectionFailed	dependencies/sfml/include/SFML/Network/Http.hpp	/^            ConnectionFailed = 1001  \/\/\/< Connection with server failed$/;"	e	enum:sf::Http::Response::Status
ConstIterator	dependencies/sfml/include/SFML/System/String.hpp	/^    typedef std::basic_string<Uint32>::const_iterator ConstIterator; \/\/\/< Read-only iterator /;"	t	class:sf::String	typeref:typename:std::basic_string<Uint32>::const_iterator
Context	dependencies/sfml/include/SFML/Window/Context.hpp	/^class SFML_WINDOW_API Context : GlResource, NonCopyable$/;"	c	namespace:sf
ContextSettings	dependencies/sfml/include/SFML/Window/ContextSettings.hpp	/^    explicit ContextSettings(unsigned int depth = 0, unsigned int stencil = 0, unsigned int anti/;"	f	struct:sf::ContextSettings
ContextSettings	dependencies/sfml/include/SFML/Window/ContextSettings.hpp	/^struct ContextSettings$/;"	s	namespace:sf
ControlPointArray	dependencies/spriter/spriterengine/loading/loadinghelpers.h	/^	typedef real ControlPointArray[MAX_CONTROL_POINTS];$/;"	t	namespace:SpriterEngine	typeref:typename:real[MAX_CONTROL_POINTS]
ConvexShape	dependencies/sfml/include/SFML/Graphics/ConvexShape.hpp	/^class SFML_GRAPHICS_API ConvexShape : public Shape$/;"	c	namespace:sf
CoordinateType	dependencies/sfml/include/SFML/Graphics/Texture.hpp	/^    enum CoordinateType$/;"	g	class:sf::Texture
Core	dependencies/sfml/include/SFML/Window/ContextSettings.hpp	/^        Core    = 1 << 0, \/\/\/< Core attribute$/;"	e	enum:sf::ContextSettings::Attribute
Count	dependencies/sfml/include/SFML/Window/Event.hpp	/^        Count                   \/\/\/< Keep last -- the total number of event types$/;"	e	enum:sf::Event::EventType
Count	dependencies/sfml/include/SFML/Window/Joystick.hpp	/^        Count       = 8,  \/\/\/< Maximum number of supported joysticks$/;"	e	enum:sf::Joystick::__anon4de6f2fd0103
Count	dependencies/sfml/include/SFML/Window/Sensor.hpp	/^        Count             \/\/\/< Keep last -- the total number of sensor types$/;"	e	enum:sf::Sensor::Type
Created	dependencies/sfml/include/SFML/Network/Http.hpp	/^            Created        = 201, \/\/\/< The resource has successfully been created$/;"	e	enum:sf::Http::Response::Status
CubicEasingCurve	dependencies/spriter/spriterengine/timeinfo/cubiceasingcurve.cpp	/^	CubicEasingCurve::CubicEasingCurve(SpriterEngine::real initialC0, SpriterEngine::real initialC1/;"	f	class:SpriterEngine::CubicEasingCurve
CubicEasingCurve	dependencies/spriter/spriterengine/timeinfo/cubiceasingcurve.h	/^	class CubicEasingCurve : public EasingCurveInterface$/;"	c	namespace:SpriterEngine
CurrentTexture	dependencies/sfml/include/SFML/Graphics/Shader.hpp	/^    static CurrentTextureType CurrentTexture;$/;"	m	class:sf::Shader	typeref:typename:CurrentTextureType
CurrentTextureType	dependencies/sfml/include/SFML/Graphics/Shader.hpp	/^    struct CurrentTextureType {};$/;"	s	class:sf::Shader
CurveType	dependencies/spriter/spriterengine/loading/loadinghelpers.h	/^	enum CurveType$/;"	g	namespace:SpriterEngine
Cyan	dependencies/sfml/include/SFML/Graphics/Color.hpp	/^    static const Color Cyan;        \/\/\/< Cyan predefined color$/;"	m	class:sf::Color	typeref:typename:const Color
D	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        D,            \/\/\/< The D key$/;"	e	enum:sf::Keyboard::Key
Dash	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Dash,         \/\/\/< The - key$/;"	e	enum:sf::Keyboard::Key
Data	dependencies/sfml/include/SFML/Network/TcpSocket.hpp	/^        std::vector<char> Data;         \/\/\/< Data of the packet$/;"	m	struct:sf::TcpSocket::PendingPacket	typeref:typename:std::vector<char>
DataConnectionAlreadyOpened	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            DataConnectionAlreadyOpened = 125, \/\/\/< Data connection already opened, transfer /;"	e	enum:sf::Ftp::Response::Status
DataConnectionOpened	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            DataConnectionOpened  = 225, \/\/\/< Data connection open, no transfer in progress$/;"	e	enum:sf::Ftp::Response::Status
DataConnectionUnavailable	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            DataConnectionUnavailable = 425, \/\/\/< Can't open data connection$/;"	e	enum:sf::Ftp::Response::Status
Debug	dependencies/sfml/include/SFML/Window/ContextSettings.hpp	/^        Debug   = 1 << 2  \/\/\/< Debug attribute$/;"	e	enum:sf::ContextSettings::Attribute
Default	dependencies/sfml/include/SFML/Graphics/RenderStates.hpp	/^    static const RenderStates Default; \/\/\/< Special instance holding the default render state/;"	m	class:sf::RenderStates	typeref:typename:const RenderStates
Default	dependencies/sfml/include/SFML/Window/ContextSettings.hpp	/^        Default = 0,      \/\/\/< Non-debug, compatibility context (this and the core attribute /;"	e	enum:sf::ContextSettings::Attribute
Default	dependencies/sfml/include/SFML/Window/WindowStyle.hpp	/^        Default = Titlebar | Resize | Close \/\/\/< Default window style$/;"	e	enum:sf::Style::__anonab3490d60103
Delete	dependencies/sfml/include/SFML/Network/Http.hpp	/^            Delete \/\/\/< Request in delete mode, useful for a REST API$/;"	e	enum:sf::Http::Request::Method
Delete	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Delete,       \/\/\/< The Delete key$/;"	e	enum:sf::Keyboard::Key
DirectoryOk	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            DirectoryOk           = 257, \/\/\/< PATHNAME created$/;"	e	enum:sf::Ftp::Response::Status
DirectoryResponse	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^    class SFML_NETWORK_API DirectoryResponse : public Response$/;"	c	class:sf::Ftp
DirectoryStatus	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            DirectoryStatus       = 212, \/\/\/< Directory status$/;"	e	enum:sf::Ftp::Response::Status
Disconnected	dependencies/sfml/include/SFML/Network/Socket.hpp	/^        Disconnected, \/\/\/< The TCP socket has been disconnected$/;"	e	enum:sf::Socket::Status
Divide	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Divide,       \/\/\/< The \/ key$/;"	e	enum:sf::Keyboard::Key
Done	dependencies/sfml/include/SFML/Network/Socket.hpp	/^        Done,         \/\/\/< The socket has sent \/ received the data$/;"	e	enum:sf::Socket::Status
Down	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Down,         \/\/\/< Down arrow$/;"	e	enum:sf::Keyboard::Key
Drawable	dependencies/sfml/include/SFML/Graphics/Drawable.hpp	/^class SFML_GRAPHICS_API Drawable$/;"	c	namespace:sf
DstAlpha	dependencies/sfml/include/SFML/Graphics/BlendMode.hpp	/^        DstAlpha,         \/\/\/< (dst.a, dst.a, dst.a, dst.a)$/;"	e	enum:sf::BlendMode::Factor
DstColor	dependencies/sfml/include/SFML/Graphics/BlendMode.hpp	/^        DstColor,         \/\/\/< (dst.r, dst.g, dst.b, dst.a)$/;"	e	enum:sf::BlendMode::Factor
E	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        E,            \/\/\/< The E key$/;"	e	enum:sf::Keyboard::Key
EASINGCURVEINTERFACE_H	dependencies/spriter/spriterengine/timeinfo/easingcurveinterface.h	/^#define EASINGCURVEINTERFACE_H$/;"	d
ENTITYINSTANCEDATA_H	dependencies/spriter/spriterengine/entity/entityinstancedata.h	/^#define ENTITYINSTANCEDATA_H$/;"	d
ENTITYINSTANCE_H	dependencies/spriter/spriterengine/entity/entityinstance.h	/^#define ENTITYINSTANCE_H$/;"	d
ENTITYOBJECTINFO_H	dependencies/spriter/spriterengine/objectinfo/entityobjectinfo.h	/^#define ENTITYOBJECTINFO_H$/;"	d
ENTITYREFINSTANCE_H	dependencies/spriter/spriterengine/objectref/entityrefinstance.h	/^#define ENTITYREFINSTANCE_H$/;"	d
ENTITYREF_H	dependencies/spriter/spriterengine/objectref/entityref.h	/^#define ENTITYREF_H$/;"	d
ENTITY_H	dependencies/spriter/spriterengine/entity/entity.h	/^#define ENTITY_H$/;"	d
EVENTOBJECTINFO_H	dependencies/spriter/spriterengine/objectinfo/eventobjectinfo.h	/^#define EVENTOBJECTINFO_H$/;"	d
EXAMPLEFILEFACTORY_H	dependencies/spriter/spriterengine/user_override/examplefilefactory.h	/^#define EXAMPLEFILEFACTORY_H$/;"	d
EXAMPLEOBJECTFACTORY_H	dependencies/spriter/spriterengine/user_override/exampleobjectfactory.h	/^#define EXAMPLEOBJECTFACTORY_H$/;"	d
EasingCurveInterface	dependencies/spriter/spriterengine/timeinfo/easingcurveinterface.cpp	/^	EasingCurveInterface::EasingCurveInterface()$/;"	f	class:SpriterEngine::EasingCurveInterface
EasingCurveInterface	dependencies/spriter/spriterengine/timeinfo/easingcurveinterface.h	/^	class EasingCurveInterface$/;"	c	namespace:SpriterEngine
Ebcdic	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^        Ebcdic  \/\/\/< Text mode using EBCDIC encoding$/;"	e	enum:sf::Ftp::TransferMode
ElementVector	dependencies/spriter/spriterengine/override/spriterfiledocumentwrapper.h	/^	typedef std::vector<SpriterFileElementWrapper*> ElementVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<SpriterFileElementWrapper * >
ElementVector	dependencies/spriter/spriterengine/override/spriterfileelementwrapper.h	/^	typedef std::vector<SpriterFileElementWrapper*> ElementVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<SpriterFileElementWrapper * >
End	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        End,          \/\/\/< The End key$/;"	e	enum:sf::Keyboard::Key
EnteringPassiveMode	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            EnteringPassiveMode   = 227, \/\/\/< Entering passive mode$/;"	e	enum:sf::Ftp::Response::Status
Entity	dependencies/spriter/spriterengine/entity/entity.cpp	/^	Entity::Entity(std::string initialName, int initialId, FileVector *initialFileVector) :$/;"	f	class:SpriterEngine::Entity
Entity	dependencies/spriter/spriterengine/entity/entity.h	/^	class Entity : public VariableContainer, private CharacterMapInterface$/;"	c	namespace:SpriterEngine
EntityIdVector	dependencies/spriter/spriterengine/model/spritermodel.h	/^	typedef std::vector<int> EntityIdVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<int>
EntityInstance	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	EntityInstance::EntityInstance() :$/;"	f	class:SpriterEngine::EntityInstance
EntityInstance	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	EntityInstance::EntityInstance(SpriterModel *model, Entity *entity, CharacterMapInterface *init/;"	f	class:SpriterEngine::EntityInstance
EntityInstance	dependencies/spriter/spriterengine/entity/entityinstance.h	/^	class EntityInstance : public UniversalObjectInterface$/;"	c	namespace:SpriterEngine
EntityInstanceData	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	EntityInstanceData::EntityInstanceData(SpriterModel *model, EntityInstance *entityInstance, Ent/;"	f	class:SpriterEngine::EntityInstanceData
EntityInstanceData	dependencies/spriter/spriterengine/entity/entityinstancedata.h	/^	class EntityInstanceData : UniversalObjectInterface$/;"	c	namespace:SpriterEngine
EntityInstanceDataMap	dependencies/spriter/spriterengine/entity/entityinstance.h	/^	typedef std::map<int, EntityInstanceData*> EntityInstanceDataMap;$/;"	t	namespace:SpriterEngine	typeref:typename:std::map<int,EntityInstanceData * >
EntityObjectInfo	dependencies/spriter/spriterengine/objectinfo/entityobjectinfo.cpp	/^	EntityObjectInfo::EntityObjectInfo() :$/;"	f	class:SpriterEngine::EntityObjectInfo
EntityObjectInfo	dependencies/spriter/spriterengine/objectinfo/entityobjectinfo.h	/^	class EntityObjectInfo : public UniversalObjectInterface$/;"	c	namespace:SpriterEngine
EntityRef	dependencies/spriter/spriterengine/objectref/entityref.cpp	/^	EntityRef::EntityRef(int initialObjectId, int initialParentObjectId, TimelineKey *initialKey, i/;"	f	class:SpriterEngine::EntityRef
EntityRef	dependencies/spriter/spriterengine/objectref/entityref.h	/^	class EntityRef : public ObjectRef$/;"	c	namespace:SpriterEngine
EntityRefInstance	dependencies/spriter/spriterengine/objectref/entityrefinstance.cpp	/^	EntityRefInstance::EntityRefInstance(UniversalObjectInterface *initialResultObject,$/;"	f	class:SpriterEngine::EntityRefInstance
EntityRefInstance	dependencies/spriter/spriterengine/objectref/entityrefinstance.h	/^	class EntityRefInstance : public ObjectRefInstance$/;"	c	namespace:SpriterEngine
EntityVector	dependencies/spriter/spriterengine/model/spritermodel.h	/^	typedef std::vector<Entity*> EntityVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<Entity * >
Equal	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Equal,        \/\/\/< The = key$/;"	e	enum:sf::Keyboard::Key
Equation	dependencies/sfml/include/SFML/Graphics/BlendMode.hpp	/^    enum Equation$/;"	g	struct:sf::BlendMode
Error	dependencies/sfml/include/SFML/Network/Socket.hpp	/^        Error         \/\/\/< An unexpected error happened$/;"	e	enum:sf::Socket::Status
ErrorFunctionPointer	dependencies/spriter/spriterengine/global/settings.h	/^	typedef void(*ErrorFunctionPointer)(const std::string &errorMessage);$/;"	t	namespace:SpriterEngine	typeref:typename:void (*)(const std::string & errorMessage)
Escape	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Escape,       \/\/\/< The Escape key$/;"	e	enum:sf::Keyboard::Key
Event	dependencies/sfml/include/SFML/Window/Event.hpp	/^class Event$/;"	c	namespace:sf
EventObjectInfo	dependencies/spriter/spriterengine/objectinfo/eventobjectinfo.cpp	/^	EventObjectInfo::EventObjectInfo()$/;"	f	class:SpriterEngine::EventObjectInfo
EventObjectInfo	dependencies/spriter/spriterengine/objectinfo/eventobjectinfo.h	/^	class EventObjectInfo : public UniversalObjectInterface$/;"	c	namespace:SpriterEngine
EventType	dependencies/sfml/include/SFML/Window/Event.hpp	/^    enum EventType$/;"	g	class:sf::Event
ExampleFileFactory	dependencies/spriter/spriterengine/user_override/examplefilefactory.cpp	/^	ExampleFileFactory::ExampleFileFactory(sf::RenderWindow *validRenderWindow) :$/;"	f	class:SpriterEngine::ExampleFileFactory
ExampleFileFactory	dependencies/spriter/spriterengine/user_override/examplefilefactory.h	/^	class ExampleFileFactory : public FileFactory$/;"	c	namespace:SpriterEngine
ExampleObjectFactory	dependencies/spriter/spriterengine/user_override/exampleobjectfactory.cpp	/^	ExampleObjectFactory::ExampleObjectFactory(sf::RenderWindow *validRenderWindow) :$/;"	f	class:SpriterEngine::ExampleObjectFactory
ExampleObjectFactory	dependencies/spriter/spriterengine/user_override/exampleobjectfactory.h	/^	class ExampleObjectFactory : public ObjectFactory$/;"	c	namespace:SpriterEngine
Exit	include/Screen.h	/^		Exit = -1,$/;"	e	enum:Screen::Type
F	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        F,            \/\/\/< The F key$/;"	e	enum:sf::Keyboard::Key
F1	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        F1,           \/\/\/< The F1 key$/;"	e	enum:sf::Keyboard::Key
F10	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        F10,          \/\/\/< The F10 key$/;"	e	enum:sf::Keyboard::Key
F11	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        F11,          \/\/\/< The F11 key$/;"	e	enum:sf::Keyboard::Key
F12	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        F12,          \/\/\/< The F12 key$/;"	e	enum:sf::Keyboard::Key
F13	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        F13,          \/\/\/< The F13 key$/;"	e	enum:sf::Keyboard::Key
F14	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        F14,          \/\/\/< The F14 key$/;"	e	enum:sf::Keyboard::Key
F15	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        F15,          \/\/\/< The F15 key$/;"	e	enum:sf::Keyboard::Key
F2	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        F2,           \/\/\/< The F2 key$/;"	e	enum:sf::Keyboard::Key
F3	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        F3,           \/\/\/< The F3 key$/;"	e	enum:sf::Keyboard::Key
F4	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        F4,           \/\/\/< The F4 key$/;"	e	enum:sf::Keyboard::Key
F5	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        F5,           \/\/\/< The F5 key$/;"	e	enum:sf::Keyboard::Key
F6	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        F6,           \/\/\/< The F6 key$/;"	e	enum:sf::Keyboard::Key
F7	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        F7,           \/\/\/< The F7 key$/;"	e	enum:sf::Keyboard::Key
F8	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        F8,           \/\/\/< The F8 key$/;"	e	enum:sf::Keyboard::Key
F9	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        F9,           \/\/\/< The F9 key$/;"	e	enum:sf::Keyboard::Key
FILEFACTORY_H	dependencies/spriter/spriterengine/override/filefactory.h	/^#define FILEFACTORY_H$/;"	d
FILEREFERENCE_H	dependencies/spriter/spriterengine/file/filereference.h	/^#define FILEREFERENCE_H$/;"	d
FILE_H	dependencies/spriter/spriterengine/file/file.h	/^#define FILE_H$/;"	d
Factor	dependencies/sfml/include/SFML/Graphics/BlendMode.hpp	/^    enum Factor$/;"	g	struct:sf::BlendMode
FieldTable	dependencies/sfml/include/SFML/Network/Http.hpp	/^        typedef std::map<std::string, std::string> FieldTable;$/;"	t	class:sf::Http::Request	typeref:typename:std::map<std::string,std::string>
FieldTable	dependencies/sfml/include/SFML/Network/Http.hpp	/^        typedef std::map<std::string, std::string> FieldTable;$/;"	t	class:sf::Http::Response	typeref:typename:std::map<std::string,std::string>
File	dependencies/spriter/spriterengine/file/file.cpp	/^	File::File(std::string initialFilePath) :$/;"	f	class:SpriterEngine::File
File	dependencies/spriter/spriterengine/file/file.h	/^	class File$/;"	c	namespace:SpriterEngine
FileActionAborted	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            FileActionAborted         = 450, \/\/\/< Requested file action not taken$/;"	e	enum:sf::Ftp::Response::Status
FileActionOk	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            FileActionOk          = 250, \/\/\/< Requested file action ok$/;"	e	enum:sf::Ftp::Response::Status
FileFactory	dependencies/spriter/spriterengine/override/filefactory.cpp	/^	FileFactory::FileFactory()$/;"	f	class:SpriterEngine::FileFactory
FileFactory	dependencies/spriter/spriterengine/override/filefactory.h	/^	class FileFactory$/;"	c	namespace:SpriterEngine
FileFlattener	dependencies/spriter/spriterengine/loading/loadinghelpers.cpp	/^	FileFlattener::FileFlattener() :$/;"	f	class:SpriterEngine::FileFlattener
FileFlattener	dependencies/spriter/spriterengine/loading/loadinghelpers.h	/^	class FileFlattener$/;"	c	namespace:SpriterEngine
FileInputStream	dependencies/sfml/include/SFML/System/FileInputStream.hpp	/^class SFML_SYSTEM_API FileInputStream : public InputStream, NonCopyable$/;"	c	namespace:sf
FileReference	dependencies/spriter/spriterengine/file/filereference.cpp	/^	FileReference::FileReference(File *initialFile) :$/;"	f	class:SpriterEngine::FileReference
FileReference	dependencies/spriter/spriterengine/file/filereference.h	/^	class FileReference$/;"	c	namespace:SpriterEngine
FileReferenceVector	dependencies/spriter/spriterengine/charactermap/charactermapinstruction.h	/^	typedef std::vector<FileReference*> FileReferenceVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<FileReference * >
FileReferenceVector	dependencies/spriter/spriterengine/charactermap/charactermapinterface.h	/^	typedef std::vector<FileReference*> FileReferenceVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<FileReference * >
FileReferenceVector	dependencies/spriter/spriterengine/entity/entityinstance.h	/^	typedef std::vector<FileReference*> FileReferenceVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<FileReference * >
FileReferenceVector	dependencies/spriter/spriterengine/model/spritermodel.h	/^	typedef std::vector<FileReference*> FileReferenceVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<FileReference * >
FileStatus	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            FileStatus            = 213, \/\/\/< File status$/;"	e	enum:sf::Ftp::Response::Status
FileUnavailable	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            FileUnavailable         = 550, \/\/\/< Requested action not taken, file unavailable$/;"	e	enum:sf::Ftp::Response::Status
FileVector	dependencies/spriter/spriterengine/charactermap/charactermap.h	/^	typedef std::vector<File*> FileVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<File * >
FileVector	dependencies/spriter/spriterengine/model/spritermodel.h	/^	typedef std::vector<File*> FileVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<File * >
FilenameNotAllowed	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            FilenameNotAllowed      = 553, \/\/\/< Requested action not taken, file name not all/;"	e	enum:sf::Ftp::Response::Status
FloatRect	dependencies/sfml/include/SFML/Graphics/Rect.hpp	/^typedef Rect<float> FloatRect;$/;"	t	namespace:sf	typeref:typename:Rect<float>
Font	dependencies/sfml/include/SFML/Graphics/Font.hpp	/^class SFML_GRAPHICS_API Font$/;"	c	namespace:sf
Forbidden	dependencies/sfml/include/SFML/Network/Http.hpp	/^            Forbidden           = 403, \/\/\/< The requested page cannot be accessed at all, eve/;"	e	enum:sf::Http::Response::Status
Fragment	dependencies/sfml/include/SFML/Graphics/Shader.hpp	/^        Fragment  \/\/\/< Fragment (pixel) shader$/;"	e	enum:sf::Shader::Type
Ftp	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^class SFML_NETWORK_API Ftp : NonCopyable$/;"	c	namespace:sf
Fullscreen	dependencies/sfml/include/SFML/Window/WindowStyle.hpp	/^        Fullscreen = 1 << 3, \/\/\/< Fullscreen mode (this flag and all others are mutually excl/;"	e	enum:sf::Style::__anonab3490d60103
G	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        G,            \/\/\/< The G key$/;"	e	enum:sf::Keyboard::Key
GLOBAL_H	dependencies/spriter/spriterengine/global/global.h	/^#define GLOBAL_H$/;"	d
GainedFocus	dependencies/sfml/include/SFML/Window/Event.hpp	/^        GainedFocus,            \/\/\/< The window gained the focus (no data)$/;"	e	enum:sf::Event::EventType
Game	include/Screen.h	/^		Game,$/;"	e	enum:Screen::Type
GameData	include/GameData.h	/^class GameData {$/;"	c
GameData	src/GameData.cpp	/^GameData::GameData() {$/;"	f	class:GameData
GameOver	include/Screen.h	/^		GameOver$/;"	e	enum:Screen::Type
GameOverScene	include/GameOverScene.h	/^class GameOverScene: public Scene {$/;"	c
GameOverScene	include/Scene.h	/^		GameOverScene$/;"	e	enum:Scene::Type
GameOverScene	src/GameOverScene.cpp	/^GameOverScene::GameOverScene(sf::RenderWindow* _window)$/;"	f	class:GameOverScene
GameScene	include/GameScene.h	/^class GameScene : public Scene {$/;"	c
GameScene	include/Scene.h	/^		GameScene,$/;"	e	enum:Scene::Type
GameScene	src/GameScene.cpp	/^GameScene::GameScene(sf::RenderWindow* _window)$/;"	f	class:GameScene
GatewayTimeout	dependencies/sfml/include/SFML/Network/Http.hpp	/^            GatewayTimeout      = 504, \/\/\/< The gateway server couldn't receive a response fr/;"	e	enum:sf::Http::Response::Status
Geometry	dependencies/sfml/include/SFML/Graphics/Shader.hpp	/^        Geometry, \/\/\/< Geometry shader$/;"	e	enum:sf::Shader::Type
Get	dependencies/sfml/include/SFML/Network/Http.hpp	/^            Get,   \/\/\/< Request in get mode, standard method to retrieve a page$/;"	e	enum:sf::Http::Request::Method
GlFunctionPointer	dependencies/sfml/include/SFML/Window/Context.hpp	/^typedef void (*GlFunctionPointer)();$/;"	t	namespace:sf	typeref:typename:void (*)()
GlResource	dependencies/sfml/include/SFML/Window/GlResource.hpp	/^class SFML_WINDOW_API GlResource$/;"	c	namespace:sf
Glsl	dependencies/sfml/include/SFML/Graphics/Glsl.hpp	/^namespace Glsl$/;"	n	namespace:sf
Glyph	dependencies/sfml/include/SFML/Graphics/Glyph.hpp	/^    Glyph() : advance(0) {}$/;"	f	class:sf::Glyph
Glyph	dependencies/sfml/include/SFML/Graphics/Glyph.hpp	/^class SFML_GRAPHICS_API Glyph$/;"	c	namespace:sf
GlyphTable	dependencies/sfml/include/SFML/Graphics/Font.hpp	/^    typedef std::map<Uint64, Glyph> GlyphTable; \/\/\/< Table mapping a codepoint to its glyph$/;"	t	class:sf::Font	typeref:typename:std::map<Uint64,Glyph>
Gravity	dependencies/sfml/include/SFML/Window/Sensor.hpp	/^        Gravity,          \/\/\/< Measures the direction and intensity of gravity, independent o/;"	e	enum:sf::Sensor::Type
Green	dependencies/sfml/include/SFML/Graphics/Color.hpp	/^    static const Color Green;       \/\/\/< Green predefined color$/;"	m	class:sf::Color	typeref:typename:const Color
Gyroscope	dependencies/sfml/include/SFML/Window/Sensor.hpp	/^        Gyroscope,        \/\/\/< Measures the raw rotation rates (degrees\/s)$/;"	e	enum:sf::Sensor::Type
H	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        H,            \/\/\/< The H key$/;"	e	enum:sf::Keyboard::Key
Head	dependencies/sfml/include/SFML/Network/Http.hpp	/^            Head,  \/\/\/< Request a page's header only$/;"	e	enum:sf::Http::Request::Method
HelpMessage	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            HelpMessage           = 214, \/\/\/< Help message$/;"	e	enum:sf::Ftp::Response::Status
Helpers	include/Helpers.h	/^namespace Helpers {$/;"	n
Home	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Home,         \/\/\/< The Home key$/;"	e	enum:sf::Keyboard::Key
HorizontalWheel	dependencies/sfml/include/SFML/Window/Mouse.hpp	/^        HorizontalWheel \/\/\/< The horizontal mouse wheel$/;"	e	enum:sf::Mouse::Wheel
Http	dependencies/sfml/include/SFML/Network/Http.hpp	/^class SFML_NETWORK_API Http : NonCopyable$/;"	c	namespace:sf
I	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        I,            \/\/\/< The I key$/;"	e	enum:sf::Keyboard::Key
IMAGEFILE_H	dependencies/spriter/spriterengine/override/imagefile.h	/^#define IMAGEFILE_H$/;"	d
INSTANTEASINGCURVE_H	dependencies/spriter/spriterengine/timeinfo/instanteasingcurve.h	/^#define INSTANTEASINGCURVE_H$/;"	d
INTVARIABLEINFO_H	dependencies/spriter/spriterengine/objectinfo/intvariableinfo.h	/^#define INTVARIABLEINFO_H$/;"	d
IdVector	dependencies/spriter/spriterengine/entity/object.h	/^	typedef std::vector<int> IdVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<int>
Identification	dependencies/sfml/include/SFML/Window/Joystick.hpp	/^    struct SFML_WINDOW_API Identification$/;"	s	class:sf::Joystick
Identity	dependencies/sfml/include/SFML/Graphics/Transform.hpp	/^    static const Transform Identity; \/\/\/< The identity transform (does nothing)$/;"	m	class:sf::Transform	typeref:typename:const Transform
Image	dependencies/sfml/include/SFML/Graphics/Image.hpp	/^class SFML_GRAPHICS_API Image$/;"	c	namespace:sf
ImageFile	dependencies/spriter/spriterengine/override/imagefile.cpp	/^	ImageFile::ImageFile(std::string initialFilePath, point initialDefaultPivot) :$/;"	f	class:SpriterEngine::ImageFile
ImageFile	dependencies/spriter/spriterengine/override/imagefile.h	/^	class ImageFile : public File$/;"	c	namespace:SpriterEngine
Info	dependencies/sfml/include/SFML/Audio/SoundFileReader.hpp	/^    struct Info$/;"	s	class:sf::SoundFileReader
Info	dependencies/sfml/include/SFML/Graphics/Font.hpp	/^    struct Info$/;"	s	class:sf::Font
InputSoundFile	dependencies/sfml/include/SFML/Audio/InputSoundFile.hpp	/^class SFML_AUDIO_API InputSoundFile : NonCopyable$/;"	c	namespace:sf
InputStream	dependencies/sfml/include/SFML/System/InputStream.hpp	/^class SFML_SYSTEM_API InputStream$/;"	c	namespace:sf
Insert	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Insert,       \/\/\/< The Insert key$/;"	e	enum:sf::Keyboard::Key
InstantEasingCurve	dependencies/spriter/spriterengine/timeinfo/instanteasingcurve.cpp	/^	InstantEasingCurve::InstantEasingCurve()$/;"	f	class:SpriterEngine::InstantEasingCurve
InstantEasingCurve	dependencies/spriter/spriterengine/timeinfo/instanteasingcurve.h	/^	class InstantEasingCurve : public EasingCurveInterface$/;"	c	namespace:SpriterEngine
InsufficientStorageSpace	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            InsufficientStorageSpace  = 452, \/\/\/< Requested action not taken; insufficient st/;"	e	enum:sf::Ftp::Response::Status
Int16	dependencies/sfml/include/SFML/Config.hpp	/^    typedef signed   short Int16;$/;"	t	namespace:sf	typeref:typename:signed short
Int2DVector	dependencies/spriter/spriterengine/loading/loadinghelpers.h	/^	typedef std::vector < IntVector> Int2DVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<IntVector>
Int32	dependencies/sfml/include/SFML/Config.hpp	/^    typedef signed   int Int32;$/;"	t	namespace:sf	typeref:typename:signed int
Int64	dependencies/sfml/include/SFML/Config.hpp	/^        typedef signed   __int64 Int64;$/;"	t	namespace:sf	typeref:typename:signed __int64
Int64	dependencies/sfml/include/SFML/Config.hpp	/^        typedef signed   long long Int64;$/;"	t	namespace:sf	typeref:typename:signed long long
Int8	dependencies/sfml/include/SFML/Config.hpp	/^    typedef signed   char Int8;$/;"	t	namespace:sf	typeref:typename:signed char
IntRect	dependencies/sfml/include/SFML/Graphics/Rect.hpp	/^typedef Rect<int>   IntRect;$/;"	t	namespace:sf	typeref:typename:Rect<int>
IntVariableInfo	dependencies/spriter/spriterengine/objectinfo/intvariableinfo.cpp	/^	IntVariableInfo::IntVariableInfo() :$/;"	f	class:SpriterEngine::IntVariableInfo
IntVariableInfo	dependencies/spriter/spriterengine/objectinfo/intvariableinfo.h	/^	class IntVariableInfo : public UniversalObjectInterface$/;"	c	namespace:SpriterEngine
IntVector	dependencies/spriter/spriterengine/loading/loadinghelpers.h	/^	typedef std::vector<int> IntVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<int>
InternalServerError	dependencies/sfml/include/SFML/Network/Http.hpp	/^            InternalServerError = 500, \/\/\/< The server encountered an unexpected error$/;"	e	enum:sf::Http::Response::Status
InvalidFile	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            InvalidFile      = 1003  \/\/\/< Not part of the FTP standard, generated by SFML whe/;"	e	enum:sf::Ftp::Response::Status
InvalidPos	dependencies/sfml/include/SFML/System/String.hpp	/^    static const std::size_t InvalidPos; \/\/\/< Represents an invalid position in the string$/;"	m	class:sf::String	typeref:typename:const std::size_t
InvalidResponse	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            InvalidResponse  = 1000, \/\/\/< Not part of the FTP standard, generated by SFML whe/;"	e	enum:sf::Ftp::Response::Status
InvalidResponse	dependencies/sfml/include/SFML/Network/Http.hpp	/^            InvalidResponse  = 1000, \/\/\/< Response is not a valid HTTP one$/;"	e	enum:sf::Http::Response::Status
IpAddress	dependencies/sfml/include/SFML/Network/IpAddress.hpp	/^class SFML_NETWORK_API IpAddress$/;"	c	namespace:sf
Italic	dependencies/sfml/include/SFML/Graphics/Text.hpp	/^        Italic        = 1 << 1, \/\/\/< Italic characters$/;"	e	enum:sf::Text::Style
Iterator	dependencies/sfml/include/SFML/System/String.hpp	/^    typedef std::basic_string<Uint32>::iterator       Iterator;      \/\/\/< Iterator type$/;"	t	class:sf::String	typeref:typename:std::basic_string<Uint32>::iterator
Ivec2	dependencies/sfml/include/SFML/Graphics/Glsl.hpp	/^    typedef Vector2<int> Ivec2;$/;"	t	namespace:sf::Glsl	typeref:typename:Vector2<int>
Ivec3	dependencies/sfml/include/SFML/Graphics/Glsl.hpp	/^    typedef Vector3<int> Ivec3;$/;"	t	namespace:sf::Glsl	typeref:typename:Vector3<int>
Ivec4	dependencies/sfml/include/SFML/Graphics/Glsl.hpp	/^    typedef implementation-defined Ivec4;$/;"	t	namespace:sf::Glsl	typeref:typename:implementation-defined
Ivec4	dependencies/sfml/include/SFML/Graphics/Glsl.hpp	/^    typedef priv::Vector4<int> Ivec4;$/;"	t	namespace:sf::Glsl	typeref:typename:priv::Vector4<int>
J	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        J,            \/\/\/< The J key$/;"	e	enum:sf::Keyboard::Key
JSONSPRITERFILEATTRIBUTEWRAPPER_H	dependencies/spriter/spriterengine/user_override/jsonspriterfileattributewrapper.h	/^#define JSONSPRITERFILEATTRIBUTEWRAPPER_H$/;"	d
JSONSPRITERFILEDOCUMENTWRAPPER_H	dependencies/spriter/spriterengine/user_override/jsonspriterfiledocumentwrapper.h	/^#define JSONSPRITERFILEDOCUMENTWRAPPER_H$/;"	d
JSONSPRITERFILEELEMENTWRAPPER_H	dependencies/spriter/spriterengine/user_override/jsonspriterfileelementwrapper.h	/^#define JSONSPRITERFILEELEMENTWRAPPER_H$/;"	d
JSONSpriterFileAttributeWrapper	dependencies/spriter/spriterengine/user_override/jsonspriterfileattributewrapper.cpp	/^	JSONSpriterFileAttributeWrapper::JSONSpriterFileAttributeWrapper(JSONSpriterFileElementWrapper /;"	f	class:SpriterEngine::JSONSpriterFileAttributeWrapper
JSONSpriterFileAttributeWrapper	dependencies/spriter/spriterengine/user_override/jsonspriterfileattributewrapper.h	/^	class JSONSpriterFileAttributeWrapper : public SpriterFileAttributeWrapper$/;"	c	namespace:SpriterEngine
JSONSpriterFileDocumentWrapper	dependencies/spriter/spriterengine/user_override/jsonspriterfiledocumentwrapper.cpp	/^	JSONSpriterFileDocumentWrapper::JSONSpriterFileDocumentWrapper()$/;"	f	class:SpriterEngine::JSONSpriterFileDocumentWrapper
JSONSpriterFileDocumentWrapper	dependencies/spriter/spriterengine/user_override/jsonspriterfiledocumentwrapper.h	/^	class JSONSpriterFileDocumentWrapper : public SpriterFileDocumentWrapper$/;"	c	namespace:SpriterEngine
JSONSpriterFileElementWrapper	dependencies/spriter/spriterengine/user_override/jsonspriterfileelementwrapper.cpp	/^	JSONSpriterFileElementWrapper::JSONSpriterFileElementWrapper(JSONSpriterFileElementWrapper *par/;"	f	class:SpriterEngine::JSONSpriterFileElementWrapper
JSONSpriterFileElementWrapper	dependencies/spriter/spriterengine/user_override/jsonspriterfileelementwrapper.h	/^	class JSONSpriterFileElementWrapper : public SpriterFileElementWrapper$/;"	c	namespace:SpriterEngine
JSON_CATCH	dependencies/nlohmann/json.hpp	/^    #define JSON_CATCH /;"	d
JSON_CATCH	dependencies/nlohmann/json.hpp	/^    #define JSON_CATCH(/;"	d
JSON_CATCH	dependencies/spriter/spriterengine/user_override/json.hpp	/^#define JSON_CATCH /;"	d
JSON_CATCH	dependencies/spriter/spriterengine/user_override/json.hpp	/^#define JSON_CATCH(/;"	d
JSON_DEPRECATED	dependencies/nlohmann/json.hpp	/^    #define JSON_DEPRECATED /;"	d
JSON_DEPRECATED	dependencies/nlohmann/json.hpp	/^    #define JSON_DEPRECATED$/;"	d
JSON_DEPRECATED	dependencies/spriter/spriterengine/user_override/json.hpp	/^#define JSON_DEPRECATED /;"	d
JSON_DEPRECATED	dependencies/spriter/spriterengine/user_override/json.hpp	/^#define JSON_DEPRECATED$/;"	d
JSON_HAS_CPP_14	dependencies/nlohmann/json.hpp	/^    #define JSON_HAS_CPP_14$/;"	d
JSON_HAS_CPP_14	dependencies/spriter/spriterengine/user_override/json.hpp	/^#define JSON_HAS_CPP_14$/;"	d
JSON_HAS_CPP_17	dependencies/nlohmann/json.hpp	/^    #define JSON_HAS_CPP_17$/;"	d
JSON_HAS_CPP_17	dependencies/spriter/spriterengine/user_override/json.hpp	/^#define JSON_HAS_CPP_17$/;"	d
JSON_LIKELY	dependencies/nlohmann/json.hpp	/^    #define JSON_LIKELY(/;"	d
JSON_LIKELY	dependencies/spriter/spriterengine/user_override/json.hpp	/^#define JSON_LIKELY(/;"	d
JSON_THROW	dependencies/nlohmann/json.hpp	/^    #define JSON_THROW /;"	d
JSON_THROW	dependencies/nlohmann/json.hpp	/^    #define JSON_THROW(/;"	d
JSON_THROW	dependencies/spriter/spriterengine/user_override/json.hpp	/^#define JSON_THROW /;"	d
JSON_THROW	dependencies/spriter/spriterengine/user_override/json.hpp	/^#define JSON_THROW(/;"	d
JSON_TRY	dependencies/nlohmann/json.hpp	/^    #define JSON_TRY /;"	d
JSON_TRY	dependencies/spriter/spriterengine/user_override/json.hpp	/^#define JSON_TRY /;"	d
JSON_UNLIKELY	dependencies/nlohmann/json.hpp	/^    #define JSON_UNLIKELY(/;"	d
JSON_UNLIKELY	dependencies/spriter/spriterengine/user_override/json.hpp	/^#define JSON_UNLIKELY(/;"	d
Joystick	dependencies/sfml/include/SFML/Window/Joystick.hpp	/^class SFML_WINDOW_API Joystick$/;"	c	namespace:sf
JoystickButtonEvent	dependencies/sfml/include/SFML/Window/Event.hpp	/^    struct JoystickButtonEvent$/;"	s	class:sf::Event
JoystickButtonPressed	dependencies/sfml/include/SFML/Window/Event.hpp	/^        JoystickButtonPressed,  \/\/\/< A joystick button was pressed (data in event.joystickBut/;"	e	enum:sf::Event::EventType
JoystickButtonReleased	dependencies/sfml/include/SFML/Window/Event.hpp	/^        JoystickButtonReleased, \/\/\/< A joystick button was released (data in event.joystickBu/;"	e	enum:sf::Event::EventType
JoystickConnectEvent	dependencies/sfml/include/SFML/Window/Event.hpp	/^    struct JoystickConnectEvent$/;"	s	class:sf::Event
JoystickConnected	dependencies/sfml/include/SFML/Window/Event.hpp	/^        JoystickConnected,      \/\/\/< A joystick was connected (data in event.joystickConnect)$/;"	e	enum:sf::Event::EventType
JoystickDisconnected	dependencies/sfml/include/SFML/Window/Event.hpp	/^        JoystickDisconnected,   \/\/\/< A joystick was disconnected (data in event.joystickConne/;"	e	enum:sf::Event::EventType
JoystickMoveEvent	dependencies/sfml/include/SFML/Window/Event.hpp	/^    struct JoystickMoveEvent$/;"	s	class:sf::Event
JoystickMoved	dependencies/sfml/include/SFML/Window/Event.hpp	/^        JoystickMoved,          \/\/\/< The joystick moved along an axis (data in event.joystick/;"	e	enum:sf::Event::EventType
K	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        K,            \/\/\/< The K key$/;"	e	enum:sf::Keyboard::Key
Key	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^    enum Key$/;"	g	class:sf::Keyboard
KeyCount	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        KeyCount      \/\/\/< Keep last -- the total number of keyboard keys$/;"	e	enum:sf::Keyboard::Key
KeyEvent	dependencies/sfml/include/SFML/Window/Event.hpp	/^    struct KeyEvent$/;"	s	class:sf::Event
KeyPressed	dependencies/sfml/include/SFML/Window/Event.hpp	/^        KeyPressed,             \/\/\/< A key was pressed (data in event.key)$/;"	e	enum:sf::Event::EventType
KeyReleased	dependencies/sfml/include/SFML/Window/Event.hpp	/^        KeyReleased,            \/\/\/< A key was released (data in event.key)$/;"	e	enum:sf::Event::EventType
Keyboard	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^class SFML_WINDOW_API Keyboard$/;"	c	namespace:sf
L	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        L,            \/\/\/< The L key$/;"	e	enum:sf::Keyboard::Key
LAlt	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        LAlt,         \/\/\/< The left Alt key$/;"	e	enum:sf::Keyboard::Key
LBracket	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        LBracket,     \/\/\/< The [ key$/;"	e	enum:sf::Keyboard::Key
LControl	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        LControl,     \/\/\/< The left Control key$/;"	e	enum:sf::Keyboard::Key
LINEAREASINGCURVE_H	dependencies/spriter/spriterengine/timeinfo/lineareasingcurve.h	/^#define LINEAREASINGCURVE_H$/;"	d
LOADER_H	dependencies/spriter/spriterengine/loading/loader.h	/^#define LOADER_H$/;"	d
LOADINGHELPERS_H	dependencies/spriter/spriterengine/loading/loadinghelpers.h	/^#define LOADINGHELPERS_H$/;"	d
LShift	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        LShift,       \/\/\/< The left Shift key$/;"	e	enum:sf::Keyboard::Key
LSystem	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        LSystem,      \/\/\/< The left OS specific key: window (Windows and Linux), apple (MacOS/;"	e	enum:sf::Keyboard::Key
Left	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Left,         \/\/\/< Left arrow$/;"	e	enum:sf::Keyboard::Key
Left	dependencies/sfml/include/SFML/Window/Mouse.hpp	/^        Left,       \/\/\/< The left mouse button$/;"	e	enum:sf::Mouse::Button
LineStrip	dependencies/sfml/include/SFML/Graphics/PrimitiveType.hpp	/^    LineStrip,     \/\/\/< List of connected lines, a point uses the previous point to form a li/;"	e	enum:sf::PrimitiveType
LinearEasingCurve	dependencies/spriter/spriterengine/timeinfo/lineareasingcurve.cpp	/^	LinearEasingCurve::LinearEasingCurve()$/;"	f	class:SpriterEngine::LinearEasingCurve
LinearEasingCurve	dependencies/spriter/spriterengine/timeinfo/lineareasingcurve.h	/^	class LinearEasingCurve : public EasingCurveInterface$/;"	c	namespace:SpriterEngine
Lines	dependencies/sfml/include/SFML/Graphics/PrimitiveType.hpp	/^    Lines,         \/\/\/< List of individual lines$/;"	e	enum:sf::PrimitiveType
LinesStrip	dependencies/sfml/include/SFML/Graphics/PrimitiveType.hpp	/^    LinesStrip     = LineStrip,     \/\/\/< \\deprecated Use LineStrip instead$/;"	e	enum:sf::PrimitiveType
Listener	dependencies/sfml/include/SFML/Audio/Listener.hpp	/^class SFML_AUDIO_API Listener$/;"	c	namespace:sf
ListingResponse	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^    class SFML_NETWORK_API ListingResponse : public Response$/;"	c	class:sf::Ftp
Loader	dependencies/spriter/spriterengine/loading/loader.cpp	/^	Loader::Loader(FileFactory * newFileFactory) :$/;"	f	class:SpriterEngine::Loader
Loader	dependencies/spriter/spriterengine/loading/loader.h	/^		Loader() {};$/;"	f	class:SpriterEngine::Loader
Loader	dependencies/spriter/spriterengine/loading/loader.h	/^	class Loader$/;"	c	namespace:SpriterEngine
LocalError	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            LocalError                = 451, \/\/\/< Requested action aborted, local error in pr/;"	e	enum:sf::Ftp::Response::Status
LocalHost	dependencies/sfml/include/SFML/Network/IpAddress.hpp	/^    static const IpAddress LocalHost; \/\/\/< The "localhost" address (for connecting a computer/;"	m	class:sf::IpAddress	typeref:typename:const IpAddress
Lock	dependencies/sfml/include/SFML/System/Lock.hpp	/^class SFML_SYSTEM_API Lock : NonCopyable$/;"	c	namespace:sf
LoggedIn	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            LoggedIn              = 230, \/\/\/< User logged in, proceed. Logged out if appropri/;"	e	enum:sf::Ftp::Response::Status
LostFocus	dependencies/sfml/include/SFML/Window/Event.hpp	/^        LostFocus,              \/\/\/< The window lost the focus (no data)$/;"	e	enum:sf::Event::EventType
M	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        M,            \/\/\/< The M key$/;"	e	enum:sf::Keyboard::Key
MAINLINEKEYINSTANCE_H	dependencies/spriter/spriterengine/animation/mainlinekeyinstance.h	/^#define MAINLINEKEYINSTANCE_H$/;"	d
MAINLINEKEY_H	dependencies/spriter/spriterengine/animation/mainlinekey.h	/^#define MAINLINEKEY_H$/;"	d
MAX_CONTROL_POINTS	dependencies/spriter/spriterengine/loading/loadinghelpers.h	/^	const int MAX_CONTROL_POINTS = 4;$/;"	v	namespace:SpriterEngine	typeref:typename:const int
MAX_RADIANS	dependencies/spriter/spriterengine/global/global.h	/^	const real MAX_RADIANS = 6.28318530718;$/;"	v	namespace:SpriterEngine	typeref:typename:const real
Magenta	dependencies/sfml/include/SFML/Graphics/Color.hpp	/^    static const Color Magenta;     \/\/\/< Magenta predefined color$/;"	m	class:sf::Color	typeref:typename:const Color
Magnetometer	dependencies/sfml/include/SFML/Window/Sensor.hpp	/^        Magnetometer,     \/\/\/< Measures the ambient magnetic field (micro-teslas)$/;"	e	enum:sf::Sensor::Type
MainlineKey	dependencies/spriter/spriterengine/animation/mainlinekey.cpp	/^	MainlineKey::MainlineKey(TimeInfo *initialTimeInfo) :$/;"	f	class:SpriterEngine::MainlineKey
MainlineKey	dependencies/spriter/spriterengine/animation/mainlinekey.h	/^	class MainlineKey$/;"	c	namespace:SpriterEngine
MainlineKeyInstance	dependencies/spriter/spriterengine/animation/mainlinekeyinstance.cpp	/^	MainlineKeyInstance::MainlineKeyInstance(EntityInstance *entityInstance, EntityInstanceData *en/;"	f	class:SpriterEngine::MainlineKeyInstance
MainlineKeyInstance	dependencies/spriter/spriterengine/animation/mainlinekeyinstance.h	/^	class MainlineKeyInstance$/;"	c	namespace:SpriterEngine
MainlineKeyInstanceVector	dependencies/spriter/spriterengine/animation/animation.h	/^	typedef std::vector<MainlineKeyInstance*> MainlineKeyInstanceVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<MainlineKeyInstance * >
MainlineKeyInstanceVector	dependencies/spriter/spriterengine/animation/animationinstance.h	/^	typedef std::vector<MainlineKeyInstance*> MainlineKeyInstanceVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<MainlineKeyInstance * >
MainlineKeyInstanceVectorIterator	dependencies/spriter/spriterengine/animation/animationinstance.h	/^	typedef MainlineKeyInstanceVector::iterator MainlineKeyInstanceVectorIterator;$/;"	t	namespace:SpriterEngine	typeref:typename:MainlineKeyInstanceVector::iterator
MainlineKeyVector	dependencies/spriter/spriterengine/animation/animation.h	/^	typedef std::vector<MainlineKey*> MainlineKeyVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<MainlineKey * >
Mat3	dependencies/sfml/include/SFML/Graphics/Glsl.hpp	/^    typedef implementation-defined Mat3;$/;"	t	namespace:sf::Glsl	typeref:typename:implementation-defined
Mat3	dependencies/sfml/include/SFML/Graphics/Glsl.hpp	/^    typedef priv::Matrix<3, 3> Mat3;$/;"	t	namespace:sf::Glsl	typeref:typename:priv::Matrix<3,3>
Mat4	dependencies/sfml/include/SFML/Graphics/Glsl.hpp	/^    typedef implementation-defined Mat4;$/;"	t	namespace:sf::Glsl	typeref:typename:implementation-defined
Mat4	dependencies/sfml/include/SFML/Graphics/Glsl.hpp	/^    typedef priv::Matrix<4, 4> Mat4;$/;"	t	namespace:sf::Glsl	typeref:typename:priv::Matrix<4,4>
Matrix	dependencies/sfml/include/SFML/Graphics/Glsl.inl	/^    Matrix(const Transform& transform)$/;"	f	struct:Matrix	file:
Matrix	dependencies/sfml/include/SFML/Graphics/Glsl.inl	/^    explicit Matrix(const float* pointer)$/;"	f	struct:Matrix	file:
Matrix	dependencies/sfml/include/SFML/Graphics/Glsl.inl	/^struct Matrix$/;"	s	file:
MaxDatagramSize	dependencies/sfml/include/SFML/Network/UdpSocket.hpp	/^        MaxDatagramSize = 65507 \/\/\/< The maximum number of bytes that can be sent in a single/;"	e	enum:sf::UdpSocket::__anon04e9c1710103
MemoryInputStream	dependencies/sfml/include/SFML/System/MemoryInputStream.hpp	/^class SFML_SYSTEM_API MemoryInputStream : public InputStream$/;"	c	namespace:sf
Menu	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Menu,         \/\/\/< The Menu key$/;"	e	enum:sf::Keyboard::Key
Menu	include/Screen.h	/^		Menu,$/;"	e	enum:Screen::Type
MenuScene	include/MenuScene.h	/^class MenuScene : public Scene {$/;"	c
MenuScene	include/Scene.h	/^		MenuScene,$/;"	e	enum:Scene::Type
MenuScene	src/MenuScene.cpp	/^MenuScene::MenuScene(sf::RenderWindow* _window)$/;"	f	class:MenuScene
Method	dependencies/sfml/include/SFML/Network/Http.hpp	/^        enum Method$/;"	g	class:sf::Http::Request
Middle	dependencies/sfml/include/SFML/Window/Mouse.hpp	/^        Middle,     \/\/\/< The middle (wheel) mouse button$/;"	e	enum:sf::Mouse::Button
Mouse	dependencies/sfml/include/SFML/Window/Mouse.hpp	/^class SFML_WINDOW_API Mouse$/;"	c	namespace:sf
MouseButtonEvent	dependencies/sfml/include/SFML/Window/Event.hpp	/^    struct MouseButtonEvent$/;"	s	class:sf::Event
MouseButtonPressed	dependencies/sfml/include/SFML/Window/Event.hpp	/^        MouseButtonPressed,     \/\/\/< A mouse button was pressed (data in event.mouseButton)$/;"	e	enum:sf::Event::EventType
MouseButtonReleased	dependencies/sfml/include/SFML/Window/Event.hpp	/^        MouseButtonReleased,    \/\/\/< A mouse button was released (data in event.mouseButton)$/;"	e	enum:sf::Event::EventType
MouseEntered	dependencies/sfml/include/SFML/Window/Event.hpp	/^        MouseEntered,           \/\/\/< The mouse cursor entered the area of the window (no data/;"	e	enum:sf::Event::EventType
MouseLeft	dependencies/sfml/include/SFML/Window/Event.hpp	/^        MouseLeft,              \/\/\/< The mouse cursor left the area of the window (no data)$/;"	e	enum:sf::Event::EventType
MouseMoveEvent	dependencies/sfml/include/SFML/Window/Event.hpp	/^    struct MouseMoveEvent$/;"	s	class:sf::Event
MouseMoved	dependencies/sfml/include/SFML/Window/Event.hpp	/^        MouseMoved,             \/\/\/< The mouse cursor moved (data in event.mouseMove)$/;"	e	enum:sf::Event::EventType
MouseWheelEvent	dependencies/sfml/include/SFML/Window/Event.hpp	/^    struct MouseWheelEvent$/;"	s	class:sf::Event
MouseWheelMoved	dependencies/sfml/include/SFML/Window/Event.hpp	/^        MouseWheelMoved,        \/\/\/< The mouse wheel was scrolled (data in event.mouseWheel) /;"	e	enum:sf::Event::EventType
MouseWheelScrollEvent	dependencies/sfml/include/SFML/Window/Event.hpp	/^    struct MouseWheelScrollEvent$/;"	s	class:sf::Event
MouseWheelScrolled	dependencies/sfml/include/SFML/Window/Event.hpp	/^        MouseWheelScrolled,     \/\/\/< The mouse wheel was scrolled (data in event.mouseWheelSc/;"	e	enum:sf::Event::EventType
MovedPermanently	dependencies/sfml/include/SFML/Network/Http.hpp	/^            MovedPermanently = 301, \/\/\/< The requested page has permanently moved to a new lo/;"	e	enum:sf::Http::Response::Status
MovedTemporarily	dependencies/sfml/include/SFML/Network/Http.hpp	/^            MovedTemporarily = 302, \/\/\/< The requested page has temporarily moved to a new lo/;"	e	enum:sf::Http::Response::Status
MultipleChoices	dependencies/sfml/include/SFML/Network/Http.hpp	/^            MultipleChoices  = 300, \/\/\/< The requested page can be accessed from several loca/;"	e	enum:sf::Http::Response::Status
Multiply	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Multiply,     \/\/\/< The * key$/;"	e	enum:sf::Keyboard::Key
Music	dependencies/sfml/include/SFML/Audio/Music.hpp	/^class SFML_AUDIO_API Music : public SoundStream$/;"	c	namespace:sf
Mutex	dependencies/sfml/include/SFML/System/Mutex.hpp	/^class SFML_SYSTEM_API Mutex : NonCopyable$/;"	c	namespace:sf
N	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        N,            \/\/\/< The N key$/;"	e	enum:sf::Keyboard::Key
NLOHMANN_BASIC_JSON_TPL	dependencies/nlohmann/json.hpp	/^#define NLOHMANN_BASIC_JSON_TPL /;"	d
NLOHMANN_BASIC_JSON_TPL	dependencies/spriter/spriterengine/user_override/json.hpp	/^#define NLOHMANN_BASIC_JSON_TPL /;"	d
NLOHMANN_BASIC_JSON_TPL_DECLARATION	dependencies/nlohmann/json.hpp	/^#define NLOHMANN_BASIC_JSON_TPL_DECLARATION /;"	d
NLOHMANN_BASIC_JSON_TPL_DECLARATION	dependencies/spriter/spriterengine/user_override/json.hpp	/^#define NLOHMANN_BASIC_JSON_TPL_DECLARATION /;"	d
NLOHMANN_JSON_FWD_HPP	dependencies/nlohmann/json.hpp	/^#define NLOHMANN_JSON_FWD_HPP$/;"	d
NLOHMANN_JSON_FWD_HPP	dependencies/spriter/spriterengine/user_override/json.hpp	/^#define NLOHMANN_JSON_FWD_HPP$/;"	d
NLOHMANN_JSON_HAS_HELPER	dependencies/nlohmann/json.hpp	/^#define NLOHMANN_JSON_HAS_HELPER(/;"	d
NLOHMANN_JSON_HAS_HELPER	dependencies/spriter/spriterengine/user_override/json.hpp	/^#define NLOHMANN_JSON_HAS_HELPER(/;"	d
NLOHMANN_JSON_HPP	dependencies/nlohmann/json.hpp	/^#define NLOHMANN_JSON_HPP$/;"	d
NLOHMANN_JSON_HPP	dependencies/spriter/spriterengine/user_override/json.hpp	/^#define NLOHMANN_JSON_HPP$/;"	d
NLOHMANN_JSON_VERSION_MAJOR	dependencies/nlohmann/json.hpp	/^#define NLOHMANN_JSON_VERSION_MAJOR /;"	d
NLOHMANN_JSON_VERSION_MAJOR	dependencies/spriter/spriterengine/user_override/json.hpp	/^#define NLOHMANN_JSON_VERSION_MAJOR /;"	d
NLOHMANN_JSON_VERSION_MINOR	dependencies/nlohmann/json.hpp	/^#define NLOHMANN_JSON_VERSION_MINOR /;"	d
NLOHMANN_JSON_VERSION_MINOR	dependencies/spriter/spriterengine/user_override/json.hpp	/^#define NLOHMANN_JSON_VERSION_MINOR /;"	d
NLOHMANN_JSON_VERSION_PATCH	dependencies/nlohmann/json.hpp	/^#define NLOHMANN_JSON_VERSION_PATCH /;"	d
NLOHMANN_JSON_VERSION_PATCH	dependencies/spriter/spriterengine/user_override/json.hpp	/^#define NLOHMANN_JSON_VERSION_PATCH /;"	d
NOMINMAX	dependencies/sfml/include/SFML/Config.hpp	/^        #define NOMINMAX$/;"	d
NO_FILE	dependencies/spriter/spriterengine/loading/loadinghelpers.h	/^	static const int NO_FILE = -1;$/;"	v	namespace:SpriterEngine	typeref:typename:const int
NeedAccountToLogIn	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            NeedAccountToLogIn = 332, \/\/\/< Need account for login$/;"	e	enum:sf::Ftp::Response::Status
NeedAccountToStore	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            NeedAccountToStore      = 532, \/\/\/< Need account for storing files$/;"	e	enum:sf::Ftp::Response::Status
NeedInformation	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            NeedInformation    = 350, \/\/\/< Requested file action pending further information$/;"	e	enum:sf::Ftp::Response::Status
NeedPassword	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            NeedPassword       = 331, \/\/\/< User name ok, need password$/;"	e	enum:sf::Ftp::Response::Status
NoContent	dependencies/sfml/include/SFML/Network/Http.hpp	/^            NoContent      = 204, \/\/\/< The server didn't send any data in return$/;"	e	enum:sf::Http::Response::Status
NonCopyable	dependencies/sfml/include/SFML/System/NonCopyable.hpp	/^    NonCopyable() {}$/;"	f	class:sf::NonCopyable
NonCopyable	dependencies/sfml/include/SFML/System/NonCopyable.hpp	/^class SFML_SYSTEM_API NonCopyable$/;"	c	namespace:sf
None	dependencies/sfml/include/SFML/Network/IpAddress.hpp	/^    static const IpAddress None;      \/\/\/< Value representing an empty\/invalid address$/;"	m	class:sf::IpAddress	typeref:typename:const IpAddress
None	dependencies/sfml/include/SFML/Window/WindowStyle.hpp	/^        None       = 0,      \/\/\/< No border \/ title bar (this flag and all others are mutual/;"	e	enum:sf::Style::__anonab3490d60103
Normalized	dependencies/sfml/include/SFML/Graphics/Texture.hpp	/^        Normalized, \/\/\/< Texture coordinates in range [0 .. 1]$/;"	e	enum:sf::Texture::CoordinateType
NotEnoughMemory	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            NotEnoughMemory         = 552, \/\/\/< Requested file action aborted, exceeded stora/;"	e	enum:sf::Ftp::Response::Status
NotFound	dependencies/sfml/include/SFML/Network/Http.hpp	/^            NotFound            = 404, \/\/\/< The requested page doesn't exist$/;"	e	enum:sf::Http::Response::Status
NotImplemented	dependencies/sfml/include/SFML/Network/Http.hpp	/^            NotImplemented      = 501, \/\/\/< The server doesn't implement a requested feature$/;"	e	enum:sf::Http::Response::Status
NotLoggedIn	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            NotLoggedIn             = 530, \/\/\/< Not logged in$/;"	e	enum:sf::Ftp::Response::Status
NotModified	dependencies/sfml/include/SFML/Network/Http.hpp	/^            NotModified      = 304, \/\/\/< For conditional requests, means the requested page h/;"	e	enum:sf::Http::Response::Status
NotReady	dependencies/sfml/include/SFML/Network/Socket.hpp	/^        NotReady,     \/\/\/< The socket is not ready to send \/ receive data yet$/;"	e	enum:sf::Socket::Status
Num0	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Num0,         \/\/\/< The 0 key$/;"	e	enum:sf::Keyboard::Key
Num1	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Num1,         \/\/\/< The 1 key$/;"	e	enum:sf::Keyboard::Key
Num2	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Num2,         \/\/\/< The 2 key$/;"	e	enum:sf::Keyboard::Key
Num3	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Num3,         \/\/\/< The 3 key$/;"	e	enum:sf::Keyboard::Key
Num4	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Num4,         \/\/\/< The 4 key$/;"	e	enum:sf::Keyboard::Key
Num5	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Num5,         \/\/\/< The 5 key$/;"	e	enum:sf::Keyboard::Key
Num6	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Num6,         \/\/\/< The 6 key$/;"	e	enum:sf::Keyboard::Key
Num7	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Num7,         \/\/\/< The 7 key$/;"	e	enum:sf::Keyboard::Key
Num8	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Num8,         \/\/\/< The 8 key$/;"	e	enum:sf::Keyboard::Key
Num9	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Num9,         \/\/\/< The 9 key$/;"	e	enum:sf::Keyboard::Key
Numpad0	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Numpad0,      \/\/\/< The numpad 0 key$/;"	e	enum:sf::Keyboard::Key
Numpad1	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Numpad1,      \/\/\/< The numpad 1 key$/;"	e	enum:sf::Keyboard::Key
Numpad2	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Numpad2,      \/\/\/< The numpad 2 key$/;"	e	enum:sf::Keyboard::Key
Numpad3	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Numpad3,      \/\/\/< The numpad 3 key$/;"	e	enum:sf::Keyboard::Key
Numpad4	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Numpad4,      \/\/\/< The numpad 4 key$/;"	e	enum:sf::Keyboard::Key
Numpad5	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Numpad5,      \/\/\/< The numpad 5 key$/;"	e	enum:sf::Keyboard::Key
Numpad6	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Numpad6,      \/\/\/< The numpad 6 key$/;"	e	enum:sf::Keyboard::Key
Numpad7	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Numpad7,      \/\/\/< The numpad 7 key$/;"	e	enum:sf::Keyboard::Key
Numpad8	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Numpad8,      \/\/\/< The numpad 8 key$/;"	e	enum:sf::Keyboard::Key
Numpad9	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Numpad9,      \/\/\/< The numpad 9 key$/;"	e	enum:sf::Keyboard::Key
O	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        O,            \/\/\/< The O key$/;"	e	enum:sf::Keyboard::Key
OBJECTFACTORY_H	dependencies/spriter/spriterengine/override/objectfactory.h	/^#define OBJECTFACTORY_H$/;"	d
OBJECTREFINSTANCE_H	dependencies/spriter/spriterengine/objectref/objectrefinstance.h	/^#define OBJECTREFINSTANCE_H$/;"	d
OBJECTREF_H	dependencies/spriter/spriterengine/objectref/objectref.h	/^#define OBJECTREF_H$/;"	d
OBJECTTYPE_BONE	dependencies/spriter/spriterengine/entity/object.h	/^			OBJECTTYPE_BONE,$/;"	e	enum:SpriterEngine::Object::ObjectType
OBJECTTYPE_BOX	dependencies/spriter/spriterengine/entity/object.h	/^			OBJECTTYPE_BOX,$/;"	e	enum:SpriterEngine::Object::ObjectType
OBJECTTYPE_ENTITY	dependencies/spriter/spriterengine/entity/object.h	/^			OBJECTTYPE_ENTITY,$/;"	e	enum:SpriterEngine::Object::ObjectType
OBJECTTYPE_NONE	dependencies/spriter/spriterengine/entity/object.h	/^			OBJECTTYPE_NONE,$/;"	e	enum:SpriterEngine::Object::ObjectType
OBJECTTYPE_POINT	dependencies/spriter/spriterengine/entity/object.h	/^			OBJECTTYPE_POINT,$/;"	e	enum:SpriterEngine::Object::ObjectType
OBJECTTYPE_SOUND	dependencies/spriter/spriterengine/entity/object.h	/^			OBJECTTYPE_SOUND,$/;"	e	enum:SpriterEngine::Object::ObjectType
OBJECTTYPE_SPRITE	dependencies/spriter/spriterengine/entity/object.h	/^			OBJECTTYPE_SPRITE,$/;"	e	enum:SpriterEngine::Object::ObjectType
OBJECTTYPE_TRIGGER	dependencies/spriter/spriterengine/entity/object.h	/^			OBJECTTYPE_TRIGGER$/;"	e	enum:SpriterEngine::Object::ObjectType
OBJECT_H	dependencies/spriter/spriterengine/entity/object.h	/^#define OBJECT_H$/;"	d
ONEEIGHTY_OVER_PI	dependencies/spriter/spriterengine/global/global.h	/^	const real ONEEIGHTY_OVER_PI = 57.295779513082320876798154814105;$/;"	v	namespace:SpriterEngine	typeref:typename:const real
OUT_OF_RANGE	dependencies/spriter/spriterengine/global/global.h	/^	const int OUT_OF_RANGE = - 1;$/;"	v	namespace:SpriterEngine	typeref:typename:const int
Object	dependencies/spriter/spriterengine/entity/object.cpp	/^	Object::Object(std::string initialName, int initialId, ObjectType initialObjectType) :$/;"	f	class:SpriterEngine::Object
Object	dependencies/spriter/spriterengine/entity/object.h	/^	class Object : public VariableContainer$/;"	c	namespace:SpriterEngine
ObjectFactory	dependencies/spriter/spriterengine/override/objectfactory.cpp	/^	ObjectFactory::ObjectFactory()$/;"	f	class:SpriterEngine::ObjectFactory
ObjectFactory	dependencies/spriter/spriterengine/override/objectfactory.h	/^	class ObjectFactory$/;"	c	namespace:SpriterEngine
ObjectIdMap	dependencies/spriter/spriterengine/entity/entity.h	/^	typedef std::map<int, Object*> ObjectIdMap;$/;"	t	namespace:SpriterEngine	typeref:typename:std::map<int,Object * >
ObjectInterfaceIdMap	dependencies/spriter/spriterengine/entity/entityinstancedata.h	/^	typedef std::map<int, UniversalObjectInterface*> ObjectInterfaceIdMap;$/;"	t	namespace:SpriterEngine	typeref:typename:std::map<int,UniversalObjectInterface * >
ObjectInterfaceNameMap	dependencies/spriter/spriterengine/entity/entityinstancedata.h	/^	typedef std::map<std::string, UniversalObjectInterface*> ObjectInterfaceNameMap;$/;"	t	namespace:SpriterEngine	typeref:typename:std::map<std::string,UniversalObjectInterface * >
ObjectInterfaceVector	dependencies/spriter/spriterengine/animation/mainlinekey.h	/^	typedef std::vector<UniversalObjectInterface*> ObjectInterfaceVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<UniversalObjectInterface * >
ObjectInterfaceVector	dependencies/spriter/spriterengine/animation/mainlinekeyinstance.h	/^	typedef std::vector<UniversalObjectInterface*> ObjectInterfaceVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<UniversalObjectInterface * >
ObjectInterfaceVector	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.h	/^	typedef std::vector<UniversalObjectInterface*> ObjectInterfaceVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<UniversalObjectInterface * >
ObjectNameMap	dependencies/spriter/spriterengine/entity/entity.h	/^	typedef std::map<std::string, Object> ObjectNameMap;$/;"	t	namespace:SpriterEngine	typeref:typename:std::map<std::string,Object>
ObjectRef	dependencies/spriter/spriterengine/objectref/objectref.cpp	/^	ObjectRef::ObjectRef(int initialObjectId, int initialParentObjectId, TimelineKey *initialKey) :$/;"	f	class:SpriterEngine::ObjectRef
ObjectRef	dependencies/spriter/spriterengine/objectref/objectref.h	/^	class ObjectRef$/;"	c	namespace:SpriterEngine
ObjectRefInstance	dependencies/spriter/spriterengine/objectref/objectrefinstance.cpp	/^	ObjectRefInstance::ObjectRefInstance(UniversalObjectInterface *initialResultObject,$/;"	f	class:SpriterEngine::ObjectRefInstance
ObjectRefInstance	dependencies/spriter/spriterengine/objectref/objectrefinstance.h	/^	class ObjectRefInstance$/;"	c	namespace:SpriterEngine
ObjectType	dependencies/spriter/spriterengine/entity/object.h	/^		enum ObjectType $/;"	g	class:SpriterEngine::Object
Ok	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            Ok                    = 200, \/\/\/< Command ok$/;"	e	enum:sf::Ftp::Response::Status
Ok	dependencies/sfml/include/SFML/Network/Http.hpp	/^            Ok             = 200, \/\/\/< Most common code returned when operation was successfu/;"	e	enum:sf::Http::Response::Status
One	dependencies/sfml/include/SFML/Graphics/BlendMode.hpp	/^        One,              \/\/\/< (1, 1, 1, 1)$/;"	e	enum:sf::BlendMode::Factor
OneMinusDstAlpha	dependencies/sfml/include/SFML/Graphics/BlendMode.hpp	/^        OneMinusDstAlpha  \/\/\/< (1, 1, 1, 1) - (dst.a, dst.a, dst.a, dst.a)$/;"	e	enum:sf::BlendMode::Factor
OneMinusDstColor	dependencies/sfml/include/SFML/Graphics/BlendMode.hpp	/^        OneMinusDstColor, \/\/\/< (1, 1, 1, 1) - (dst.r, dst.g, dst.b, dst.a)$/;"	e	enum:sf::BlendMode::Factor
OneMinusSrcAlpha	dependencies/sfml/include/SFML/Graphics/BlendMode.hpp	/^        OneMinusSrcAlpha, \/\/\/< (1, 1, 1, 1) - (src.a, src.a, src.a, src.a)$/;"	e	enum:sf::BlendMode::Factor
OneMinusSrcColor	dependencies/sfml/include/SFML/Graphics/BlendMode.hpp	/^        OneMinusSrcColor, \/\/\/< (1, 1, 1, 1) - (src.r, src.g, src.b, src.a)$/;"	e	enum:sf::BlendMode::Factor
OpeningDataConnection	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            OpeningDataConnection       = 150, \/\/\/< File status ok, about to open data connec/;"	e	enum:sf::Ftp::Response::Status
Orientation	dependencies/sfml/include/SFML/Window/Sensor.hpp	/^        Orientation,      \/\/\/< Measures the absolute 3D orientation (degrees)$/;"	e	enum:sf::Sensor::Type
OutputSoundFile	dependencies/sfml/include/SFML/Audio/OutputSoundFile.hpp	/^class SFML_AUDIO_API OutputSoundFile : NonCopyable$/;"	c	namespace:sf
P	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        P,            \/\/\/< The P key$/;"	e	enum:sf::Keyboard::Key
POINTINSTANCEINFO_H	dependencies/spriter/spriterengine/objectinfo/pointinstanceinfo.h	/^#define POINTINSTANCEINFO_H$/;"	d
POINTOBJECTINFO_H	dependencies/spriter/spriterengine/objectinfo/pointobjectinfo.h	/^#define POINTOBJECTINFO_H$/;"	d
PROXYTIMELINEKEY_H	dependencies/spriter/spriterengine/timeline/proxytimelinekey.h	/^#define PROXYTIMELINEKEY_H$/;"	d
Packet	dependencies/sfml/include/SFML/Network/Packet.hpp	/^class SFML_NETWORK_API Packet$/;"	c	namespace:sf
Page	dependencies/sfml/include/SFML/Graphics/Font.hpp	/^    struct Page$/;"	s	class:sf::Font
PageDown	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        PageDown,     \/\/\/< The Page down key$/;"	e	enum:sf::Keyboard::Key
PageTable	dependencies/sfml/include/SFML/Graphics/Font.hpp	/^    typedef std::map<unsigned int, Page> PageTable; \/\/\/< Table mapping a character size to it/;"	t	class:sf::Font	typeref:typename:std::map<unsigned int,Page>
PageTypeUnknown	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            PageTypeUnknown         = 551, \/\/\/< Requested action aborted, page type unknown$/;"	e	enum:sf::Ftp::Response::Status
PageUp	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        PageUp,       \/\/\/< The Page up key$/;"	e	enum:sf::Keyboard::Key
ParameterNotImplemented	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            ParameterNotImplemented = 504, \/\/\/< Command not implemented for that parameter$/;"	e	enum:sf::Ftp::Response::Status
ParametersUnknown	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            ParametersUnknown       = 501, \/\/\/< Syntax error in parameters or arguments$/;"	e	enum:sf::Ftp::Response::Status
Partial	dependencies/sfml/include/SFML/Network/Socket.hpp	/^        Partial,      \/\/\/< The socket sent a part of the data$/;"	e	enum:sf::Socket::Status
PartialContent	dependencies/sfml/include/SFML/Network/Http.hpp	/^            PartialContent = 206, \/\/\/< The server has sent a part of the resource, as a respo/;"	e	enum:sf::Http::Response::Status
Pause	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Pause,        \/\/\/< The Pause key$/;"	e	enum:sf::Keyboard::Key
Paused	dependencies/sfml/include/SFML/Audio/SoundSource.hpp	/^        Paused,  \/\/\/< Sound is paused$/;"	e	enum:sf::SoundSource::Status
PendingPacket	dependencies/sfml/include/SFML/Network/TcpSocket.hpp	/^    struct PendingPacket$/;"	s	class:sf::TcpSocket
Period	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Period,       \/\/\/< The . key$/;"	e	enum:sf::Keyboard::Key
Pixels	dependencies/sfml/include/SFML/Graphics/Texture.hpp	/^        Pixels      \/\/\/< Texture coordinates in range [0 .. size]$/;"	e	enum:sf::Texture::CoordinateType
Playing	dependencies/sfml/include/SFML/Audio/SoundSource.hpp	/^        Playing  \/\/\/< Sound is playing$/;"	e	enum:sf::SoundSource::Status
PointInstanceInfo	dependencies/spriter/spriterengine/objectinfo/pointinstanceinfo.cpp	/^	PointInstanceInfo::PointInstanceInfo()$/;"	f	class:SpriterEngine::PointInstanceInfo
PointInstanceInfo	dependencies/spriter/spriterengine/objectinfo/pointinstanceinfo.h	/^	class PointInstanceInfo : public UniversalObjectInterface$/;"	c	namespace:SpriterEngine
PointMap	dependencies/spriter/spriterengine/loading/loadinghelpers.h	/^	typedef std::map<int, point> PointMap;$/;"	t	namespace:SpriterEngine	typeref:typename:std::map<int,point>
PointObjectInfo	dependencies/spriter/spriterengine/objectinfo/pointobjectinfo.cpp	/^	PointObjectInfo::PointObjectInfo()$/;"	f	class:SpriterEngine::PointObjectInfo
PointObjectInfo	dependencies/spriter/spriterengine/objectinfo/pointobjectinfo.h	/^	class PointObjectInfo : public UniversalObjectInterface$/;"	c	namespace:SpriterEngine
PointlessCommand	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            PointlessCommand      = 202, \/\/\/< Command not implemented$/;"	e	enum:sf::Ftp::Response::Status
Points	dependencies/sfml/include/SFML/Graphics/PrimitiveType.hpp	/^    Points,        \/\/\/< List of individual points$/;"	e	enum:sf::PrimitiveType
Post	dependencies/sfml/include/SFML/Network/Http.hpp	/^            Post,  \/\/\/< Request in post mode, usually to send data to a page$/;"	e	enum:sf::Http::Request::Method
PovX	dependencies/sfml/include/SFML/Window/Joystick.hpp	/^        PovX, \/\/\/< The X axis of the point-of-view hat$/;"	e	enum:sf::Joystick::Axis
PovY	dependencies/sfml/include/SFML/Window/Joystick.hpp	/^        PovY  \/\/\/< The Y axis of the point-of-view hat$/;"	e	enum:sf::Joystick::Axis
PrimitiveType	dependencies/sfml/include/SFML/Graphics/PrimitiveType.hpp	/^enum PrimitiveType$/;"	g	namespace:sf
ProxyTimelineKey	dependencies/spriter/spriterengine/timeline/proxytimelinekey.cpp	/^	ProxyTimelineKey::ProxyTimelineKey(TimeInfo * initialTimeInfo, UniversalObjectInterface * initi/;"	f	class:SpriterEngine::ProxyTimelineKey
ProxyTimelineKey	dependencies/spriter/spriterengine/timeline/proxytimelinekey.h	/^	class ProxyTimelineKey : public TimelineKey$/;"	c	namespace:SpriterEngine
Put	dependencies/sfml/include/SFML/Network/Http.hpp	/^            Put,   \/\/\/< Request in put mode, useful for a REST API$/;"	e	enum:sf::Http::Request::Method
Q	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Q,            \/\/\/< The Q key$/;"	e	enum:sf::Keyboard::Key
QUADRATICEASINGCURVE_H	dependencies/spriter/spriterengine/timeinfo/quadraticeasingcurve.h	/^#define QUADRATICEASINGCURVE_H$/;"	d
QUARTICEASINGCURVE_H	dependencies/spriter/spriterengine/timeinfo/quarticeasingcurve.h	/^#define QUARTICEASINGCURVE_H$/;"	d
QUINTICEASINGCURVE_H	dependencies/spriter/spriterengine/timeinfo/quinticeasingcurve.h	/^#define QUINTICEASINGCURVE_H$/;"	d
QuadraticEasingCurve	dependencies/spriter/spriterengine/timeinfo/quadraticeasingcurve.cpp	/^	QuadraticEasingCurve::QuadraticEasingCurve(real initialC0) :$/;"	f	class:SpriterEngine::QuadraticEasingCurve
QuadraticEasingCurve	dependencies/spriter/spriterengine/timeinfo/quadraticeasingcurve.h	/^	class QuadraticEasingCurve : public EasingCurveInterface$/;"	c	namespace:SpriterEngine
Quads	dependencies/sfml/include/SFML/Graphics/PrimitiveType.hpp	/^    Quads,         \/\/\/< List of individual quads (deprecated, don't work with OpenGL ES)$/;"	e	enum:sf::PrimitiveType
QuarticEasingCurve	dependencies/spriter/spriterengine/timeinfo/quarticeasingcurve.cpp	/^	QuarticEasingCurve::QuarticEasingCurve(real initialC0, real initialC1, real initialC2) :$/;"	f	class:SpriterEngine::QuarticEasingCurve
QuarticEasingCurve	dependencies/spriter/spriterengine/timeinfo/quarticeasingcurve.h	/^	class QuarticEasingCurve : public EasingCurveInterface$/;"	c	namespace:SpriterEngine
QuinticEasingCurve	dependencies/spriter/spriterengine/timeinfo/quinticeasingcurve.cpp	/^	QuinticEasingCurve::QuinticEasingCurve(real initialC0, real initialC1, real initialC2, real ini/;"	f	class:SpriterEngine::QuinticEasingCurve
QuinticEasingCurve	dependencies/spriter/spriterengine/timeinfo/quinticeasingcurve.h	/^	class QuinticEasingCurve : public EasingCurveInterface$/;"	c	namespace:SpriterEngine
Quote	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Quote,        \/\/\/< The ' key$/;"	e	enum:sf::Keyboard::Key
R	dependencies/sfml/include/SFML/Window/Joystick.hpp	/^        R,    \/\/\/< The R axis$/;"	e	enum:sf::Joystick::Axis
R	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        R,            \/\/\/< The R key$/;"	e	enum:sf::Keyboard::Key
RAlt	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        RAlt,         \/\/\/< The right Alt key$/;"	e	enum:sf::Keyboard::Key
RBracket	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        RBracket,     \/\/\/< The ] key$/;"	e	enum:sf::Keyboard::Key
RControl	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        RControl,     \/\/\/< The right Control key$/;"	e	enum:sf::Keyboard::Key
REALVARIABLEINFO_H	dependencies/spriter/spriterengine/objectinfo/realvariableinfo.h	/^#define REALVARIABLEINFO_H$/;"	d
RShift	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        RShift,       \/\/\/< The right Shift key$/;"	e	enum:sf::Keyboard::Key
RSystem	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        RSystem,      \/\/\/< The right OS specific key: window (Windows and Linux), apple (MacO/;"	e	enum:sf::Keyboard::Key
RangeNotSatisfiable	dependencies/sfml/include/SFML/Network/Http.hpp	/^            RangeNotSatisfiable = 407, \/\/\/< The server can't satisfy the partial GET request /;"	e	enum:sf::Http::Response::Status
ReaderFactory	dependencies/sfml/include/SFML/Audio/SoundFileFactory.hpp	/^    struct ReaderFactory$/;"	s	class:sf::SoundFileFactory
ReaderFactoryArray	dependencies/sfml/include/SFML/Audio/SoundFileFactory.hpp	/^    typedef std::vector<ReaderFactory> ReaderFactoryArray;$/;"	t	class:sf::SoundFileFactory	typeref:typename:std::vector<ReaderFactory>
RealLimits	dependencies/nlohmann/json.hpp	/^    using RealLimits = std::numeric_limits<RealIntegerType>;$/;"	t	struct:nlohmann::detail::is_compatible_integer_type_impl	typeref:typename:std::numeric_limits<RealIntegerType>
RealLimits	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using RealLimits = std::numeric_limits<RealIntegerType>;$/;"	t	struct:nlohmann::detail::is_compatible_integer_type_impl	typeref:typename:std::numeric_limits<RealIntegerType>
RealVariableInfo	dependencies/spriter/spriterengine/objectinfo/realvariableinfo.cpp	/^	RealVariableInfo::RealVariableInfo() :$/;"	f	class:SpriterEngine::RealVariableInfo
RealVariableInfo	dependencies/spriter/spriterengine/objectinfo/realvariableinfo.h	/^	class RealVariableInfo : public UniversalObjectInterface$/;"	c	namespace:SpriterEngine
Rect	dependencies/sfml/include/SFML/Graphics/Rect.hpp	/^class Rect$/;"	c	namespace:sf
Rect	dependencies/sfml/include/SFML/Graphics/Rect.inl	/^Rect<T>::Rect() :$/;"	f	class:Rect
Rect	dependencies/sfml/include/SFML/Graphics/Rect.inl	/^Rect<T>::Rect(T rectLeft, T rectTop, T rectWidth, T rectHeight) :$/;"	f	class:Rect
Rect	dependencies/sfml/include/SFML/Graphics/Rect.inl	/^Rect<T>::Rect(const Rect<U>& rectangle) :$/;"	f	class:Rect
Rect	dependencies/sfml/include/SFML/Graphics/Rect.inl	/^Rect<T>::Rect(const Vector2<T>& position, const Vector2<T>& size) :$/;"	f	class:Rect
RectangleShape	dependencies/sfml/include/SFML/Graphics/RectangleShape.hpp	/^class SFML_GRAPHICS_API RectangleShape : public Shape$/;"	c	namespace:sf
Red	dependencies/sfml/include/SFML/Graphics/Color.hpp	/^    static const Color Red;         \/\/\/< Red predefined color$/;"	m	class:sf::Color	typeref:typename:const Color
RefInstanceVector	dependencies/spriter/spriterengine/animation/mainlinekey.h	/^	typedef std::vector<ObjectRefInstance*> RefInstanceVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<ObjectRefInstance * >
RefInstanceVector	dependencies/spriter/spriterengine/animation/mainlinekeyinstance.h	/^	typedef std::vector<ObjectRefInstance*> RefInstanceVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<ObjectRefInstance * >
RefVector	dependencies/spriter/spriterengine/animation/mainlinekey.h	/^	typedef std::vector<ObjectRef*> RefVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<ObjectRef * >
Regular	dependencies/sfml/include/SFML/Graphics/Text.hpp	/^        Regular       = 0,      \/\/\/< Regular characters, no style$/;"	e	enum:sf::Text::Style
RenderStates	dependencies/sfml/include/SFML/Graphics/RenderStates.hpp	/^class SFML_GRAPHICS_API RenderStates$/;"	c	namespace:sf
RenderTarget	dependencies/sfml/include/SFML/Graphics/RenderTarget.hpp	/^class SFML_GRAPHICS_API RenderTarget : NonCopyable$/;"	c	namespace:sf
RenderTexture	dependencies/sfml/include/SFML/Graphics/RenderTexture.hpp	/^class SFML_GRAPHICS_API RenderTexture : public RenderTarget$/;"	c	namespace:sf
RenderWindow	dependencies/sfml/include/SFML/Graphics/RenderWindow.hpp	/^class SFML_GRAPHICS_API RenderWindow : public Window, public RenderTarget$/;"	c	namespace:sf
Request	dependencies/sfml/include/SFML/Network/Http.hpp	/^    class SFML_NETWORK_API Request$/;"	c	class:sf::Http
ResetContent	dependencies/sfml/include/SFML/Network/Http.hpp	/^            ResetContent   = 205, \/\/\/< The server informs the client that it should clear the/;"	e	enum:sf::Http::Response::Status
Resize	dependencies/sfml/include/SFML/Window/WindowStyle.hpp	/^        Resize     = 1 << 1, \/\/\/< Title bar + resizable border + maximize button$/;"	e	enum:sf::Style::__anonab3490d60103
Resized	dependencies/sfml/include/SFML/Window/Event.hpp	/^        Resized,                \/\/\/< The window was resized (data in event.size)$/;"	e	enum:sf::Event::EventType
ResourceStream	dependencies/sfml/include/SFML/System/FileInputStream.hpp	/^class SFML_SYSTEM_API ResourceStream;$/;"	v	namespace:sf::priv	typeref:class:SFML_SYSTEM_API
Response	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^    class SFML_NETWORK_API Response$/;"	c	class:sf::Ftp
Response	dependencies/sfml/include/SFML/Network/Http.hpp	/^    class SFML_NETWORK_API Response$/;"	c	class:sf::Http
RestartMarkerReply	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            RestartMarkerReply          = 110, \/\/\/< Restart marker reply$/;"	e	enum:sf::Ftp::Response::Status
Return	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Return,       \/\/\/< The Return key$/;"	e	enum:sf::Keyboard::Key
ReverseSubtract	dependencies/sfml/include/SFML/Graphics/BlendMode.hpp	/^        ReverseSubtract \/\/\/< Pixel = Dst * DstFactor - Src * SrcFactor$/;"	e	enum:sf::BlendMode::Equation
Right	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Right,        \/\/\/< Right arrow$/;"	e	enum:sf::Keyboard::Key
Right	dependencies/sfml/include/SFML/Window/Mouse.hpp	/^        Right,      \/\/\/< The right mouse button$/;"	e	enum:sf::Mouse::Button
Row	dependencies/sfml/include/SFML/Graphics/Font.hpp	/^        Row(unsigned int rowTop, unsigned int rowHeight) : width(0), top(rowTop), height(rowHeig/;"	f	struct:sf::Font::Row
Row	dependencies/sfml/include/SFML/Graphics/Font.hpp	/^    struct Row$/;"	s	class:sf::Font
S	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        S,            \/\/\/< The S key$/;"	e	enum:sf::Keyboard::Key
SCREEN_HEIGHT	include/Constants.h	/^static const unsigned int SCREEN_HEIGHT = 720u;/;"	v	typeref:typename:const unsigned int
SCREEN_WIDTH	include/Constants.h	/^static const unsigned int SCREEN_WIDTH = 1280u;$/;"	v	typeref:typename:const unsigned int
SETTINGS_H	dependencies/spriter/spriterengine/global/settings.h	/^#define SETTINGS_H$/;"	d
SFMLATLASFILE_H	dependencies/spriter/spriterengine/user_override/sfmlatlasfile.h	/^#define SFMLATLASFILE_H$/;"	d
SFMLBONEINSTANCEINFO_H	dependencies/spriter/spriterengine/user_override/sfmlboneinstanceinfo.h	/^#define SFMLBONEINSTANCEINFO_H$/;"	d
SFMLBOXINSTANCEINFO_H	dependencies/spriter/spriterengine/user_override/sfmlboxinstanceinfo.h	/^#define SFMLBOXINSTANCEINFO_H$/;"	d
SFMLIMAGEFILE_H	dependencies/spriter/spriterengine/user_override/sfmlimagefile.h	/^#define SFMLIMAGEFILE_H$/;"	d
SFMLPOINTINSTANCEINFO_H	dependencies/spriter/spriterengine/user_override/sfmlpointinstanceinfo.h	/^#define SFMLPOINTINSTANCEINFO_H$/;"	d
SFMLSOUNDFILE_H	dependencies/spriter/spriterengine/user_override/sfmlsoundfile.h	/^#define SFMLSOUNDFILE_H$/;"	d
SFMLSOUNDOBJECTINFOREFERENCE_H	dependencies/spriter/spriterengine/user_override/sfmlsoundobjectinforeference.h	/^#define SFMLSOUNDOBJECTINFOREFERENCE_H$/;"	d
SFML_ALRESOURCE_HPP	dependencies/sfml/include/SFML/Audio/AlResource.hpp	/^#define SFML_ALRESOURCE_HPP$/;"	d
SFML_API_EXPORT	dependencies/sfml/include/SFML/Config.hpp	/^            #define SFML_API_EXPORT /;"	d
SFML_API_EXPORT	dependencies/sfml/include/SFML/Config.hpp	/^            #define SFML_API_EXPORT$/;"	d
SFML_API_EXPORT	dependencies/sfml/include/SFML/Config.hpp	/^        #define SFML_API_EXPORT /;"	d
SFML_API_EXPORT	dependencies/sfml/include/SFML/Config.hpp	/^    #define SFML_API_EXPORT$/;"	d
SFML_API_IMPORT	dependencies/sfml/include/SFML/Config.hpp	/^            #define SFML_API_IMPORT /;"	d
SFML_API_IMPORT	dependencies/sfml/include/SFML/Config.hpp	/^            #define SFML_API_IMPORT$/;"	d
SFML_API_IMPORT	dependencies/sfml/include/SFML/Config.hpp	/^        #define SFML_API_IMPORT /;"	d
SFML_API_IMPORT	dependencies/sfml/include/SFML/Config.hpp	/^    #define SFML_API_IMPORT$/;"	d
SFML_AUDIO_API	dependencies/sfml/include/SFML/Audio/Export.hpp	/^    #define SFML_AUDIO_API /;"	d
SFML_AUDIO_EXPORT_HPP	dependencies/sfml/include/SFML/Audio/Export.hpp	/^#define SFML_AUDIO_EXPORT_HPP$/;"	d
SFML_AUDIO_HPP	dependencies/sfml/include/SFML/Audio.hpp	/^#define SFML_AUDIO_HPP$/;"	d
SFML_BLENDMODE_HPP	dependencies/sfml/include/SFML/Graphics/BlendMode.hpp	/^#define SFML_BLENDMODE_HPP$/;"	d
SFML_CIRCLESHAPE_HPP	dependencies/sfml/include/SFML/Graphics/CircleShape.hpp	/^#define SFML_CIRCLESHAPE_HPP$/;"	d
SFML_CLOCK_HPP	dependencies/sfml/include/SFML/System/Clock.hpp	/^#define SFML_CLOCK_HPP$/;"	d
SFML_COLOR_HPP	dependencies/sfml/include/SFML/Graphics/Color.hpp	/^#define SFML_COLOR_HPP$/;"	d
SFML_CONFIG_HPP	dependencies/sfml/include/SFML/Config.hpp	/^#define SFML_CONFIG_HPP$/;"	d
SFML_CONTEXTSETTINGS_HPP	dependencies/sfml/include/SFML/Window/ContextSettings.hpp	/^#define SFML_CONTEXTSETTINGS_HPP$/;"	d
SFML_CONTEXT_HPP	dependencies/sfml/include/SFML/Window/Context.hpp	/^#define SFML_CONTEXT_HPP$/;"	d
SFML_CONVEXSHAPE_HPP	dependencies/sfml/include/SFML/Graphics/ConvexShape.hpp	/^#define SFML_CONVEXSHAPE_HPP$/;"	d
SFML_DEBUG	dependencies/sfml/include/SFML/Config.hpp	/^    #define SFML_DEBUG$/;"	d
SFML_DEPRECATED	dependencies/sfml/include/SFML/Config.hpp	/^    #define SFML_DEPRECATED /;"	d
SFML_DEPRECATED	dependencies/sfml/include/SFML/Config.hpp	/^    #define SFML_DEPRECATED$/;"	d
SFML_DRAWABLE_HPP	dependencies/sfml/include/SFML/Graphics/Drawable.hpp	/^#define SFML_DRAWABLE_HPP$/;"	d
SFML_ERR_HPP	dependencies/sfml/include/SFML/System/Err.hpp	/^#define SFML_ERR_HPP$/;"	d
SFML_EVENT_HPP	dependencies/sfml/include/SFML/Window/Event.hpp	/^#define SFML_EVENT_HPP$/;"	d
SFML_FILEINPUTSTREAM_HPP	dependencies/sfml/include/SFML/System/FileInputStream.hpp	/^#define SFML_FILEINPUTSTREAM_HPP$/;"	d
SFML_FONT_HPP	dependencies/sfml/include/SFML/Graphics/Font.hpp	/^#define SFML_FONT_HPP$/;"	d
SFML_FTP_HPP	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^#define SFML_FTP_HPP$/;"	d
SFML_GLRESOURCE_HPP	dependencies/sfml/include/SFML/Window/GlResource.hpp	/^#define SFML_GLRESOURCE_HPP$/;"	d
SFML_GLSL_HPP	dependencies/sfml/include/SFML/Graphics/Glsl.hpp	/^#define SFML_GLSL_HPP$/;"	d
SFML_GLYPH_HPP	dependencies/sfml/include/SFML/Graphics/Glyph.hpp	/^#define SFML_GLYPH_HPP$/;"	d
SFML_GRAPHICS_API	dependencies/sfml/include/SFML/Graphics/Export.hpp	/^    #define SFML_GRAPHICS_API /;"	d
SFML_GRAPHICS_EXPORT_HPP	dependencies/sfml/include/SFML/Graphics/Export.hpp	/^#define SFML_GRAPHICS_EXPORT_HPP$/;"	d
SFML_GRAPHICS_HPP	dependencies/sfml/include/SFML/Graphics.hpp	/^#define SFML_GRAPHICS_HPP$/;"	d
SFML_HTTP_HPP	dependencies/sfml/include/SFML/Network/Http.hpp	/^#define SFML_HTTP_HPP$/;"	d
SFML_IMAGE_HPP	dependencies/sfml/include/SFML/Graphics/Image.hpp	/^#define SFML_IMAGE_HPP$/;"	d
SFML_INPUTSOUNDFILE_HPP	dependencies/sfml/include/SFML/Audio/InputSoundFile.hpp	/^#define SFML_INPUTSOUNDFILE_HPP$/;"	d
SFML_INPUTSTREAM_HPP	dependencies/sfml/include/SFML/System/InputStream.hpp	/^#define SFML_INPUTSTREAM_HPP$/;"	d
SFML_IPADDRESS_HPP	dependencies/sfml/include/SFML/Network/IpAddress.hpp	/^#define SFML_IPADDRESS_HPP$/;"	d
SFML_JOYSTICK_HPP	dependencies/sfml/include/SFML/Window/Joystick.hpp	/^#define SFML_JOYSTICK_HPP$/;"	d
SFML_KEYBOARD_HPP	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^#define SFML_KEYBOARD_HPP$/;"	d
SFML_LISTENER_HPP	dependencies/sfml/include/SFML/Audio/Listener.hpp	/^#define SFML_LISTENER_HPP$/;"	d
SFML_LOCK_HPP	dependencies/sfml/include/SFML/System/Lock.hpp	/^#define SFML_LOCK_HPP$/;"	d
SFML_MAIN_HPP	dependencies/sfml/include/SFML/Main.hpp	/^#define SFML_MAIN_HPP$/;"	d
SFML_MEMORYINPUTSTREAM_HPP	dependencies/sfml/include/SFML/System/MemoryInputStream.hpp	/^#define SFML_MEMORYINPUTSTREAM_HPP$/;"	d
SFML_MOUSE_HPP	dependencies/sfml/include/SFML/Window/Mouse.hpp	/^#define SFML_MOUSE_HPP$/;"	d
SFML_MUSIC_HPP	dependencies/sfml/include/SFML/Audio/Music.hpp	/^#define SFML_MUSIC_HPP$/;"	d
SFML_MUTEX_HPP	dependencies/sfml/include/SFML/System/Mutex.hpp	/^#define SFML_MUTEX_HPP$/;"	d
SFML_NATIVEACTIVITY_HPP	dependencies/sfml/include/SFML/System/NativeActivity.hpp	/^#define SFML_NATIVEACTIVITY_HPP$/;"	d
SFML_NETWORK_API	dependencies/sfml/include/SFML/Network/Export.hpp	/^    #define SFML_NETWORK_API /;"	d
SFML_NETWORK_EXPORT_HPP	dependencies/sfml/include/SFML/Network/Export.hpp	/^#define SFML_NETWORK_EXPORT_HPP$/;"	d
SFML_NETWORK_HPP	dependencies/sfml/include/SFML/Network.hpp	/^#define SFML_NETWORK_HPP$/;"	d
SFML_NONCOPYABLE_HPP	dependencies/sfml/include/SFML/System/NonCopyable.hpp	/^#define SFML_NONCOPYABLE_HPP$/;"	d
SFML_OPENGL_HPP	dependencies/sfml/include/SFML/OpenGL.hpp	/^#define SFML_OPENGL_HPP$/;"	d
SFML_OUTPUTSOUNDFILE_HPP	dependencies/sfml/include/SFML/Audio/OutputSoundFile.hpp	/^#define SFML_OUTPUTSOUNDFILE_HPP$/;"	d
SFML_PACKET_HPP	dependencies/sfml/include/SFML/Network/Packet.hpp	/^#define SFML_PACKET_HPP$/;"	d
SFML_PRIMITIVETYPE_HPP	dependencies/sfml/include/SFML/Graphics/PrimitiveType.hpp	/^#define SFML_PRIMITIVETYPE_HPP$/;"	d
SFML_RECTANGLESHAPE_HPP	dependencies/sfml/include/SFML/Graphics/RectangleShape.hpp	/^#define SFML_RECTANGLESHAPE_HPP$/;"	d
SFML_RECT_HPP	dependencies/sfml/include/SFML/Graphics/Rect.hpp	/^#define SFML_RECT_HPP$/;"	d
SFML_RENDERSTATES_HPP	dependencies/sfml/include/SFML/Graphics/RenderStates.hpp	/^#define SFML_RENDERSTATES_HPP$/;"	d
SFML_RENDERTARGET_HPP	dependencies/sfml/include/SFML/Graphics/RenderTarget.hpp	/^#define SFML_RENDERTARGET_HPP$/;"	d
SFML_RENDERTEXTURE_HPP	dependencies/sfml/include/SFML/Graphics/RenderTexture.hpp	/^#define SFML_RENDERTEXTURE_HPP$/;"	d
SFML_RENDERWINDOW_HPP	dependencies/sfml/include/SFML/Graphics/RenderWindow.hpp	/^#define SFML_RENDERWINDOW_HPP$/;"	d
SFML_SENSOR_HPP	dependencies/sfml/include/SFML/Window/Sensor.hpp	/^#define SFML_SENSOR_HPP$/;"	d
SFML_SFML_WINDOW_HPP	dependencies/sfml/include/SFML/Window.hpp	/^#define SFML_SFML_WINDOW_HPP$/;"	d
SFML_SHADER_HPP	dependencies/sfml/include/SFML/Graphics/Shader.hpp	/^#define SFML_SHADER_HPP$/;"	d
SFML_SHAPE_HPP	dependencies/sfml/include/SFML/Graphics/Shape.hpp	/^#define SFML_SHAPE_HPP$/;"	d
SFML_SLEEP_HPP	dependencies/sfml/include/SFML/System/Sleep.hpp	/^#define SFML_SLEEP_HPP$/;"	d
SFML_SOCKETHANDLE_HPP	dependencies/sfml/include/SFML/Network/SocketHandle.hpp	/^#define SFML_SOCKETHANDLE_HPP$/;"	d
SFML_SOCKETSELECTOR_HPP	dependencies/sfml/include/SFML/Network/SocketSelector.hpp	/^#define SFML_SOCKETSELECTOR_HPP$/;"	d
SFML_SOCKET_HPP	dependencies/sfml/include/SFML/Network/Socket.hpp	/^#define SFML_SOCKET_HPP$/;"	d
SFML_SOUNDBUFFERRECORDER_HPP	dependencies/sfml/include/SFML/Audio/SoundBufferRecorder.hpp	/^#define SFML_SOUNDBUFFERRECORDER_HPP$/;"	d
SFML_SOUNDBUFFER_HPP	dependencies/sfml/include/SFML/Audio/SoundBuffer.hpp	/^#define SFML_SOUNDBUFFER_HPP$/;"	d
SFML_SOUNDFILEFACTORY_HPP	dependencies/sfml/include/SFML/Audio/SoundFileFactory.hpp	/^#define SFML_SOUNDFILEFACTORY_HPP$/;"	d
SFML_SOUNDFILEREADER_HPP	dependencies/sfml/include/SFML/Audio/SoundFileReader.hpp	/^#define SFML_SOUNDFILEREADER_HPP$/;"	d
SFML_SOUNDFILEWRITER_HPP	dependencies/sfml/include/SFML/Audio/SoundFileWriter.hpp	/^#define SFML_SOUNDFILEWRITER_HPP$/;"	d
SFML_SOUNDRECORDER_HPP	dependencies/sfml/include/SFML/Audio/SoundRecorder.hpp	/^#define SFML_SOUNDRECORDER_HPP$/;"	d
SFML_SOUNDSOURCE_HPP	dependencies/sfml/include/SFML/Audio/SoundSource.hpp	/^#define SFML_SOUNDSOURCE_HPP$/;"	d
SFML_SOUNDSTREAM_HPP	dependencies/sfml/include/SFML/Audio/SoundStream.hpp	/^#define SFML_SOUNDSTREAM_HPP$/;"	d
SFML_SOUND_HPP	dependencies/sfml/include/SFML/Audio/Sound.hpp	/^#define SFML_SOUND_HPP$/;"	d
SFML_SPRITE_HPP	dependencies/sfml/include/SFML/Graphics/Sprite.hpp	/^#define SFML_SPRITE_HPP$/;"	d
SFML_STRING_HPP	dependencies/sfml/include/SFML/System/String.hpp	/^#define SFML_STRING_HPP$/;"	d
SFML_SYSTEM_ANDROID	dependencies/sfml/include/SFML/Config.hpp	/^        #define SFML_SYSTEM_ANDROID$/;"	d
SFML_SYSTEM_API	dependencies/sfml/include/SFML/System/Export.hpp	/^    #define SFML_SYSTEM_API /;"	d
SFML_SYSTEM_EXPORT_HPP	dependencies/sfml/include/SFML/System/Export.hpp	/^#define SFML_SYSTEM_EXPORT_HPP$/;"	d
SFML_SYSTEM_FREEBSD	dependencies/sfml/include/SFML/Config.hpp	/^        #define SFML_SYSTEM_FREEBSD$/;"	d
SFML_SYSTEM_HPP	dependencies/sfml/include/SFML/System.hpp	/^#define SFML_SYSTEM_HPP$/;"	d
SFML_SYSTEM_IOS	dependencies/sfml/include/SFML/Config.hpp	/^        #define SFML_SYSTEM_IOS$/;"	d
SFML_SYSTEM_LINUX	dependencies/sfml/include/SFML/Config.hpp	/^        #define SFML_SYSTEM_LINUX$/;"	d
SFML_SYSTEM_MACOS	dependencies/sfml/include/SFML/Config.hpp	/^        #define SFML_SYSTEM_MACOS$/;"	d
SFML_SYSTEM_WINDOWS	dependencies/sfml/include/SFML/Config.hpp	/^    #define SFML_SYSTEM_WINDOWS$/;"	d
SFML_TCPLISTENER_HPP	dependencies/sfml/include/SFML/Network/TcpListener.hpp	/^#define SFML_TCPLISTENER_HPP$/;"	d
SFML_TCPSOCKET_HPP	dependencies/sfml/include/SFML/Network/TcpSocket.hpp	/^#define SFML_TCPSOCKET_HPP$/;"	d
SFML_TEXTURE_HPP	dependencies/sfml/include/SFML/Graphics/Texture.hpp	/^#define SFML_TEXTURE_HPP$/;"	d
SFML_TEXT_HPP	dependencies/sfml/include/SFML/Graphics/Text.hpp	/^#define SFML_TEXT_HPP$/;"	d
SFML_THREADLOCALPTR_HPP	dependencies/sfml/include/SFML/System/ThreadLocalPtr.hpp	/^#define SFML_THREADLOCALPTR_HPP$/;"	d
SFML_THREADLOCAL_HPP	dependencies/sfml/include/SFML/System/ThreadLocal.hpp	/^#define SFML_THREADLOCAL_HPP$/;"	d
SFML_THREAD_HPP	dependencies/sfml/include/SFML/System/Thread.hpp	/^#define SFML_THREAD_HPP$/;"	d
SFML_TIME_HPP	dependencies/sfml/include/SFML/System/Time.hpp	/^#define SFML_TIME_HPP$/;"	d
SFML_TOUCH_HPP	dependencies/sfml/include/SFML/Window/Touch.hpp	/^#define SFML_TOUCH_HPP$/;"	d
SFML_TRANSFORMABLE_HPP	dependencies/sfml/include/SFML/Graphics/Transformable.hpp	/^#define SFML_TRANSFORMABLE_HPP$/;"	d
SFML_TRANSFORM_HPP	dependencies/sfml/include/SFML/Graphics/Transform.hpp	/^#define SFML_TRANSFORM_HPP$/;"	d
SFML_UDPSOCKET_HPP	dependencies/sfml/include/SFML/Network/UdpSocket.hpp	/^#define SFML_UDPSOCKET_HPP$/;"	d
SFML_UTF_HPP	dependencies/sfml/include/SFML/System/Utf.hpp	/^#define SFML_UTF_HPP$/;"	d
SFML_VECTOR2_HPP	dependencies/sfml/include/SFML/System/Vector2.hpp	/^#define SFML_VECTOR2_HPP$/;"	d
SFML_VECTOR3_HPP	dependencies/sfml/include/SFML/System/Vector3.hpp	/^#define SFML_VECTOR3_HPP$/;"	d
SFML_VERSION_MAJOR	dependencies/sfml/include/SFML/Config.hpp	/^#define SFML_VERSION_MAJOR /;"	d
SFML_VERSION_MINOR	dependencies/sfml/include/SFML/Config.hpp	/^#define SFML_VERSION_MINOR /;"	d
SFML_VERSION_PATCH	dependencies/sfml/include/SFML/Config.hpp	/^#define SFML_VERSION_PATCH /;"	d
SFML_VERTEXARRAY_HPP	dependencies/sfml/include/SFML/Graphics/VertexArray.hpp	/^#define SFML_VERTEXARRAY_HPP$/;"	d
SFML_VERTEX_HPP	dependencies/sfml/include/SFML/Graphics/Vertex.hpp	/^#define SFML_VERTEX_HPP$/;"	d
SFML_VIDEOMODE_HPP	dependencies/sfml/include/SFML/Window/VideoMode.hpp	/^#define SFML_VIDEOMODE_HPP$/;"	d
SFML_VIEW_HPP	dependencies/sfml/include/SFML/Graphics/View.hpp	/^#define SFML_VIEW_HPP$/;"	d
SFML_WINDOWHANDLE_HPP	dependencies/sfml/include/SFML/Window/WindowHandle.hpp	/^#define SFML_WINDOWHANDLE_HPP$/;"	d
SFML_WINDOWSTYLE_HPP	dependencies/sfml/include/SFML/Window/WindowStyle.hpp	/^#define SFML_WINDOWSTYLE_HPP$/;"	d
SFML_WINDOW_API	dependencies/sfml/include/SFML/Window/Export.hpp	/^    #define SFML_WINDOW_API /;"	d
SFML_WINDOW_EXPORT_HPP	dependencies/sfml/include/SFML/Window/Export.hpp	/^#define SFML_WINDOW_EXPORT_HPP$/;"	d
SFML_WINDOW_HPP	dependencies/sfml/include/SFML/Window/Window.hpp	/^#define SFML_WINDOW_HPP$/;"	d
SOUNDFILE_H	dependencies/spriter/spriterengine/override/soundfile.h	/^#define SOUNDFILE_H$/;"	d
SOUNDOBJECTINFOREFERENCE_H	dependencies/spriter/spriterengine/override/soundobjectinforeference.h	/^#define SOUNDOBJECTINFOREFERENCE_H$/;"	d
SOUNDOBJECTINFO_H	dependencies/spriter/spriterengine/objectinfo/soundobjectinfo.h	/^#define SOUNDOBJECTINFO_H$/;"	d
SOUNDTIMELINEINSTANCE_H	dependencies/spriter/spriterengine/timeline/soundtimelineinstance.h	/^#define SOUNDTIMELINEINSTANCE_H$/;"	d
SPRITEOBJECTINFO_H	dependencies/spriter/spriterengine/objectinfo/spriteobjectinfo.h	/^#define SPRITEOBJECTINFO_H$/;"	d
SPRITERDOCUMENTLOADER_H	dependencies/spriter/spriterengine/loading/spriterdocumentloader.h	/^#define SPRITERDOCUMENTLOADER_H$/;"	d
SPRITEREFINSTANCE_H	dependencies/spriter/spriterengine/objectref/spriterefinstance.h	/^#define SPRITEREFINSTANCE_H$/;"	d
SPRITEREF_H	dependencies/spriter/spriterengine/objectref/spriteref.h	/^#define SPRITEREF_H$/;"	d
SPRITERENGINE_H	dependencies/spriter/spriterengine/spriterengine.h	/^#define SPRITERENGINE_H$/;"	d
SPRITERFILEATTRIBUTEWRAPPER_H	dependencies/spriter/spriterengine/override/spriterfileattributewrapper.h	/^#define SPRITERFILEATTRIBUTEWRAPPER_H$/;"	d
SPRITERFILEDOCUMENTWRAPPER_H	dependencies/spriter/spriterengine/override/spriterfiledocumentwrapper.h	/^#define SPRITERFILEDOCUMENTWRAPPER_H$/;"	d
SPRITERFILEELEMENTWRAPPER_H	dependencies/spriter/spriterengine/override/spriterfileelementwrapper.h	/^#define SPRITERFILEELEMENTWRAPPER_H$/;"	d
SPRITERFILETYPE_NONE	dependencies/spriter/spriterengine/loading/loader.h	/^			SPRITERFILETYPE_NONE,$/;"	e	enum:SpriterEngine::Loader::SpriterFileType
SPRITERFILETYPE_SCML	dependencies/spriter/spriterengine/loading/loader.h	/^			SPRITERFILETYPE_SCML,$/;"	e	enum:SpriterEngine::Loader::SpriterFileType
SPRITERFILETYPE_SCON	dependencies/spriter/spriterengine/loading/loader.h	/^			SPRITERFILETYPE_SCON$/;"	e	enum:SpriterEngine::Loader::SpriterFileType
SPRITERMODEL_H	dependencies/spriter/spriterengine/model/spritermodel.h	/^#define SPRITERMODEL_H$/;"	d
STRINGVARIABLEINFOREFERENCE_H	dependencies/spriter/spriterengine/objectinfo/stringvariableinforeference.h	/^#define STRINGVARIABLEINFOREFERENCE_H$/;"	d
STRINGVARIABLEINFO_H	dependencies/spriter/spriterengine/objectinfo/stringvariableinfo.h	/^#define STRINGVARIABLEINFO_H$/;"	d
Scene	include/Scene.h	/^	Scene(Type type, sf::RenderWindow* _window) : m_type(type), window(_window){}$/;"	f	class:Scene
Scene	include/Scene.h	/^class Scene {$/;"	c
SceneManager	include/SceneManager.h	/^class SceneManager {$/;"	c
SceneManager	src/SceneManager.cpp	/^SceneManager::SceneManager()$/;"	f	class:SceneManager
Screen	include/Screen.h	/^class Screen {$/;"	c
SemiColon	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        SemiColon,    \/\/\/< The ; key$/;"	e	enum:sf::Keyboard::Key
Sensor	dependencies/sfml/include/SFML/Window/Sensor.hpp	/^class SFML_WINDOW_API Sensor$/;"	c	namespace:sf
SensorChanged	dependencies/sfml/include/SFML/Window/Event.hpp	/^        SensorChanged,          \/\/\/< A sensor value changed (data in event.sensor)$/;"	e	enum:sf::Event::EventType
SensorEvent	dependencies/sfml/include/SFML/Window/Event.hpp	/^    struct SensorEvent$/;"	s	class:sf::Event
ServiceNotAvailable	dependencies/sfml/include/SFML/Network/Http.hpp	/^            ServiceNotAvailable = 503, \/\/\/< The server is temporarily unavailable (overloaded/;"	e	enum:sf::Http::Response::Status
ServiceReady	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            ServiceReady          = 220, \/\/\/< Service ready for new user$/;"	e	enum:sf::Ftp::Response::Status
ServiceReadySoon	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            ServiceReadySoon            = 120, \/\/\/< Service ready in N minutes$/;"	e	enum:sf::Ftp::Response::Status
ServiceUnavailable	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            ServiceUnavailable        = 421, \/\/\/< Service not available, closing control conn/;"	e	enum:sf::Ftp::Response::Status
Settings	dependencies/spriter/spriterengine/global/settings.h	/^	class Settings$/;"	c	namespace:SpriterEngine
SfmlAtlasFile	dependencies/spriter/spriterengine/user_override/sfmlatlasfile.cpp	/^	SfmlAtlasFile::SfmlAtlasFile(std::string initialFilePath) :$/;"	f	class:SpriterEngine::SfmlAtlasFile
SfmlAtlasFile	dependencies/spriter/spriterengine/user_override/sfmlatlasfile.h	/^	class SfmlAtlasFile : public AtlasFile$/;"	c	namespace:SpriterEngine
SfmlBoneInstanceInfo	dependencies/spriter/spriterengine/user_override/sfmlboneinstanceinfo.cpp	/^	SfmlBoneInstanceInfo::SfmlBoneInstanceInfo(point initialSize, sf::RenderWindow *validRenderWind/;"	f	class:SpriterEngine::SfmlBoneInstanceInfo
SfmlBoneInstanceInfo	dependencies/spriter/spriterengine/user_override/sfmlboneinstanceinfo.h	/^	class SfmlBoneInstanceInfo : public BoneInstanceInfo$/;"	c	namespace:SpriterEngine
SfmlBoxInstanceInfo	dependencies/spriter/spriterengine/user_override/sfmlboxinstanceinfo.cpp	/^	SfmlBoxInstanceInfo::SfmlBoxInstanceInfo(point initialSize, sf::RenderWindow *validRenderWindow/;"	f	class:SpriterEngine::SfmlBoxInstanceInfo
SfmlBoxInstanceInfo	dependencies/spriter/spriterengine/user_override/sfmlboxinstanceinfo.h	/^	class SfmlBoxInstanceInfo : public BoxInstanceInfo$/;"	c	namespace:SpriterEngine
SfmlImageFile	dependencies/spriter/spriterengine/user_override/sfmlimagefile.cpp	/^	SfmlImageFile::SfmlImageFile(std::string initialFilePath, point initialDefaultPivot, sf::Render/;"	f	class:SpriterEngine::SfmlImageFile
SfmlImageFile	dependencies/spriter/spriterengine/user_override/sfmlimagefile.h	/^	class SfmlImageFile : public ImageFile$/;"	c	namespace:SpriterEngine
SfmlPointInstanceInfo	dependencies/spriter/spriterengine/user_override/sfmlpointinstanceinfo.cpp	/^	SfmlPointInstanceInfo::SfmlPointInstanceInfo(sf::RenderWindow *validRenderWindow) :$/;"	f	class:SpriterEngine::SfmlPointInstanceInfo
SfmlPointInstanceInfo	dependencies/spriter/spriterengine/user_override/sfmlpointinstanceinfo.h	/^	class SfmlPointInstanceInfo : public PointInstanceInfo$/;"	c	namespace:SpriterEngine
SfmlSoundFile	dependencies/spriter/spriterengine/user_override/sfmlsoundfile.cpp	/^	SfmlSoundFile::SfmlSoundFile(std::string initialFilePath) :$/;"	f	class:SpriterEngine::SfmlSoundFile
SfmlSoundFile	dependencies/spriter/spriterengine/user_override/sfmlsoundfile.h	/^	class SfmlSoundFile : public SoundFile$/;"	c	namespace:SpriterEngine
SfmlSoundObjectInfoReference	dependencies/spriter/spriterengine/user_override/sfmlsoundobjectinforeference.cpp	/^	SfmlSoundObjectInfoReference::SfmlSoundObjectInfoReference(sf::SoundBuffer &buffer)$/;"	f	class:SpriterEngine::SfmlSoundObjectInfoReference
SfmlSoundObjectInfoReference	dependencies/spriter/spriterengine/user_override/sfmlsoundobjectinforeference.h	/^	class SfmlSoundObjectInfoReference : public SoundObjectInfoReference$/;"	c	namespace:SpriterEngine
Shader	dependencies/sfml/include/SFML/Graphics/Shader.hpp	/^class SFML_GRAPHICS_API Shader : GlResource, NonCopyable$/;"	c	namespace:sf
Shape	dependencies/sfml/include/SFML/Graphics/Shape.hpp	/^class SFML_GRAPHICS_API Shape : public Drawable, public Transformable$/;"	c	namespace:sf
Size	dependencies/sfml/include/SFML/Network/TcpSocket.hpp	/^        Uint32            Size;         \/\/\/< Data of packet size$/;"	m	struct:sf::TcpSocket::PendingPacket	typeref:typename:Uint32
SizeEvent	dependencies/sfml/include/SFML/Window/Event.hpp	/^    struct SizeEvent$/;"	s	class:sf::Event
SizeReceived	dependencies/sfml/include/SFML/Network/TcpSocket.hpp	/^        std::size_t       SizeReceived; \/\/\/< Number of size bytes received so far$/;"	m	struct:sf::TcpSocket::PendingPacket	typeref:typename:std::size_t
Slash	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Slash,        \/\/\/< The \/ key$/;"	e	enum:sf::Keyboard::Key
Socket	dependencies/sfml/include/SFML/Network/Socket.hpp	/^class SFML_NETWORK_API Socket : NonCopyable$/;"	c	namespace:sf
SocketHandle	dependencies/sfml/include/SFML/Network/SocketHandle.hpp	/^    typedef UINT_PTR SocketHandle;$/;"	t	namespace:sf	typeref:typename:UINT_PTR
SocketSelector	dependencies/sfml/include/SFML/Network/SocketSelector.hpp	/^class SFML_NETWORK_API SocketSelector$/;"	c	namespace:sf
Sound	dependencies/sfml/include/SFML/Audio/Sound.hpp	/^class SFML_AUDIO_API Sound : public SoundSource$/;"	c	namespace:sf
SoundBuffer	dependencies/sfml/include/SFML/Audio/SoundBuffer.hpp	/^class SFML_AUDIO_API SoundBuffer : AlResource$/;"	c	namespace:sf
SoundBufferRecorder	dependencies/sfml/include/SFML/Audio/SoundBufferRecorder.hpp	/^class SFML_AUDIO_API SoundBufferRecorder : public SoundRecorder$/;"	c	namespace:sf
SoundFile	dependencies/spriter/spriterengine/override/soundfile.cpp	/^	SoundFile::SoundFile(std::string initialFilePath) :$/;"	f	class:SpriterEngine::SoundFile
SoundFile	dependencies/spriter/spriterengine/override/soundfile.h	/^	class SoundFile : public File$/;"	c	namespace:SpriterEngine
SoundFileFactory	dependencies/sfml/include/SFML/Audio/SoundFileFactory.hpp	/^class SFML_AUDIO_API SoundFileFactory$/;"	c	namespace:sf
SoundFileReader	dependencies/sfml/include/SFML/Audio/SoundFileReader.hpp	/^class SFML_AUDIO_API SoundFileReader$/;"	c	namespace:sf
SoundFileWriter	dependencies/sfml/include/SFML/Audio/SoundFileWriter.hpp	/^class SFML_AUDIO_API SoundFileWriter$/;"	c	namespace:sf
SoundIdMap	dependencies/spriter/spriterengine/entity/entityinstancedata.h	/^	typedef std::map<int, SoundObjectInfoReference*> SoundIdMap;$/;"	t	namespace:SpriterEngine	typeref:typename:std::map<int,SoundObjectInfoReference * >
SoundList	dependencies/sfml/include/SFML/Audio/SoundBuffer.hpp	/^    typedef std::set<Sound*> SoundList; \/\/\/< Set of unique sound instances$/;"	t	class:sf::SoundBuffer	typeref:typename:std::set<Sound * >
SoundNameMap	dependencies/spriter/spriterengine/entity/entityinstancedata.h	/^	typedef std::map<std::string, SoundObjectInfoReference*> SoundNameMap;$/;"	t	namespace:SpriterEngine	typeref:typename:std::map<std::string,SoundObjectInfoReference * >
SoundObjectInfo	dependencies/spriter/spriterengine/objectinfo/soundobjectinfo.cpp	/^	SoundObjectInfo::SoundObjectInfo()$/;"	f	class:SpriterEngine::SoundObjectInfo
SoundObjectInfo	dependencies/spriter/spriterengine/objectinfo/soundobjectinfo.h	/^	class SoundObjectInfo : public UniversalObjectInterface$/;"	c	namespace:SpriterEngine
SoundObjectInfoReference	dependencies/spriter/spriterengine/override/soundobjectinforeference.cpp	/^	SoundObjectInfoReference::SoundObjectInfoReference() :$/;"	f	class:SpriterEngine::SoundObjectInfoReference
SoundObjectInfoReference	dependencies/spriter/spriterengine/override/soundobjectinforeference.h	/^	class SoundObjectInfoReference : public UniversalObjectInterface$/;"	c	namespace:SpriterEngine
SoundRecorder	dependencies/sfml/include/SFML/Audio/SoundRecorder.hpp	/^class SFML_AUDIO_API SoundRecorder : AlResource$/;"	c	namespace:sf
SoundSource	dependencies/sfml/include/SFML/Audio/SoundSource.hpp	/^class SFML_AUDIO_API SoundSource : AlResource$/;"	c	namespace:sf
SoundStream	dependencies/sfml/include/SFML/Audio/SoundStream.hpp	/^class SFML_AUDIO_API SoundStream : public SoundSource$/;"	c	namespace:sf
SoundTimelineInstance	dependencies/spriter/spriterengine/timeline/soundtimelineinstance.cpp	/^	SoundTimelineInstance::SoundTimelineInstance(EntityInstanceData *entityInstanceData, Timeline */;"	f	class:SpriterEngine::SoundTimelineInstance
SoundTimelineInstance	dependencies/spriter/spriterengine/timeline/soundtimelineinstance.h	/^	class SoundTimelineInstance : public TriggerTimelineInstance$/;"	c	namespace:SpriterEngine
Space	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Space,        \/\/\/< The Space key$/;"	e	enum:sf::Keyboard::Key
Sprite	dependencies/sfml/include/SFML/Graphics/Sprite.hpp	/^class SFML_GRAPHICS_API Sprite : public Drawable, public Transformable$/;"	c	namespace:sf
SpriteKeyFileInfo	dependencies/spriter/spriterengine/loading/loadinghelpers.h	/^	struct SpriteKeyFileInfo$/;"	s	namespace:SpriterEngine
SpriteKeyFileInfoObjectIdMap	dependencies/spriter/spriterengine/loading/loadinghelpers.h	/^	typedef std::map<int, SpriteKeyFileInfoVector> SpriteKeyFileInfoObjectIdMap;$/;"	t	namespace:SpriterEngine	typeref:typename:std::map<int,SpriteKeyFileInfoVector>
SpriteKeyFileInfoVector	dependencies/spriter/spriterengine/loading/loadinghelpers.h	/^	typedef std::vector<SpriteKeyFileInfo> SpriteKeyFileInfoVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<SpriteKeyFileInfo>
SpriteObjectInfo	dependencies/spriter/spriterengine/objectinfo/spriteobjectinfo.cpp	/^	SpriteObjectInfo::SpriteObjectInfo() :$/;"	f	class:SpriterEngine::SpriteObjectInfo
SpriteObjectInfo	dependencies/spriter/spriterengine/objectinfo/spriteobjectinfo.h	/^	class SpriteObjectInfo : public UniversalObjectInterface$/;"	c	namespace:SpriterEngine
SpriteRef	dependencies/spriter/spriterengine/objectref/spriteref.cpp	/^	SpriteRef::SpriteRef(int initialObjectId, int initialParentObjectId, TimelineKey *initialKey, i/;"	f	class:SpriterEngine::SpriteRef
SpriteRef	dependencies/spriter/spriterengine/objectref/spriteref.h	/^	class SpriteRef : public ObjectRef$/;"	c	namespace:SpriterEngine
SpriteRefInstance	dependencies/spriter/spriterengine/objectref/spriterefinstance.cpp	/^	SpriteRefInstance::SpriteRefInstance(UniversalObjectInterface *initialResultObject,$/;"	f	class:SpriterEngine::SpriteRefInstance
SpriteRefInstance	dependencies/spriter/spriterengine/objectref/spriterefinstance.h	/^	class SpriteRefInstance : public ObjectRefInstance$/;"	c	namespace:SpriterEngine
SpriterDocumentLoader	dependencies/spriter/spriterengine/loading/spriterdocumentloader.h	/^	class SpriterDocumentLoader$/;"	c	namespace:SpriterEngine
SpriterEngine	dependencies/spriter/spriterengine/animation/animation.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/animation/animation.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/animation/animationinstance.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/animation/animationinstance.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/animation/mainlinekey.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/animation/mainlinekey.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/animation/mainlinekeyinstance.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/animation/mainlinekeyinstance.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/charactermap/charactermap.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/charactermap/charactermap.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/charactermap/charactermapinstruction.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/charactermap/charactermapinstruction.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/charactermap/charactermapinterface.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/entity/entity.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/entity/entity.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/entity/entityinstance.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/entity/entityinstancedata.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/entity/object.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/entity/object.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/file/file.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/file/file.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/file/filereference.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/file/filereference.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/global/atlas.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/global/global.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/global/settings.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/global/settings.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/loading/loader.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/loading/loader.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/loading/loadinghelpers.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/loading/loadinghelpers.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/loading/spriterdocumentloader.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/loading/spriterdocumentloader.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/model/spritermodel.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/model/spritermodel.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/angleinfo.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/angleinfo.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/boneinstanceinfo.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/boneinstanceinfo.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/boneobjectinfo.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/boneobjectinfo.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/boxinstanceinfo.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/boxinstanceinfo.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/boxobjectinfo.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/boxobjectinfo.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/entityobjectinfo.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/entityobjectinfo.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/eventobjectinfo.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/eventobjectinfo.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/intvariableinfo.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/intvariableinfo.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/pointinstanceinfo.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/pointinstanceinfo.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/pointobjectinfo.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/pointobjectinfo.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/realvariableinfo.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/realvariableinfo.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/soundobjectinfo.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/soundobjectinfo.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/spriteobjectinfo.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/spriteobjectinfo.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/stringvariableinfo.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/stringvariableinfo.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/stringvariableinforeference.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/stringvariableinforeference.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/taglist.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/taglist.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/tagobjectinfo.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/tagobjectinfo.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/tagobjectinforeference.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/tagobjectinforeference.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/triggerobjectinfo.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/triggerobjectinfo.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/objectref/boneref.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/objectref/boneref.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/objectref/bonerefinstance.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/objectref/bonerefinstance.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/objectref/entityref.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/objectref/entityref.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/objectref/entityrefinstance.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/objectref/entityrefinstance.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/objectref/objectref.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/objectref/objectref.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/objectref/objectrefinstance.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/objectref/objectrefinstance.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/objectref/spriteref.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/objectref/spriteref.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/objectref/spriterefinstance.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/objectref/spriterefinstance.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/objectref/transformprocessor.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/objectref/transformprocessor.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/override/atlasfile.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/override/atlasfile.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/override/filefactory.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/override/filefactory.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/override/imagefile.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/override/imagefile.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/override/objectfactory.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/override/objectfactory.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/override/soundfile.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/override/soundfile.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/override/soundobjectinforeference.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/override/soundobjectinforeference.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/override/spriterfileattributewrapper.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/override/spriterfileattributewrapper.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/override/spriterfiledocumentwrapper.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/override/spriterfiledocumentwrapper.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/override/spriterfileelementwrapper.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/override/spriterfileelementwrapper.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/timeinfo/beziereasingcurve.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/timeinfo/beziereasingcurve.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/timeinfo/cubiceasingcurve.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/timeinfo/cubiceasingcurve.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/timeinfo/easingcurveinterface.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/timeinfo/easingcurveinterface.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/timeinfo/instanteasingcurve.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/timeinfo/instanteasingcurve.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/timeinfo/lineareasingcurve.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/timeinfo/lineareasingcurve.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/timeinfo/quadraticeasingcurve.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/timeinfo/quadraticeasingcurve.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/timeinfo/quarticeasingcurve.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/timeinfo/quarticeasingcurve.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/timeinfo/quinticeasingcurve.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/timeinfo/quinticeasingcurve.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/timeinfo/timeinfo.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/timeinfo/timeinfo.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/timeline/proxytimelinekey.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/timeline/proxytimelinekey.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/timeline/soundtimelineinstance.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/timeline/soundtimelineinstance.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/timeline/tagtimelineinstance.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/timeline/tagtimelineinstance.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/timeline/timeline.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/timeline/timeline.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/timeline/timelineinstance.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/timeline/timelineinstance.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/timeline/timelinekey.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/timeline/timelinekey.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/timeline/triggertimelineinstance.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/timeline/triggertimelineinstance.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/timeline/variabletimelineinstance.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/timeline/variabletimelineinstance.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/user_override/examplefilefactory.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/user_override/examplefilefactory.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/user_override/exampleobjectfactory.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/user_override/exampleobjectfactory.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/user_override/jsonspriterfileattributewrapper.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/user_override/jsonspriterfileattributewrapper.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/user_override/jsonspriterfiledocumentwrapper.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/user_override/jsonspriterfiledocumentwrapper.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/user_override/jsonspriterfileelementwrapper.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/user_override/jsonspriterfileelementwrapper.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/user_override/sfmlatlasfile.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/user_override/sfmlatlasfile.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/user_override/sfmlboneinstanceinfo.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/user_override/sfmlboneinstanceinfo.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/user_override/sfmlboxinstanceinfo.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/user_override/sfmlboxinstanceinfo.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/user_override/sfmlimagefile.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/user_override/sfmlimagefile.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/user_override/sfmlpointinstanceinfo.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/user_override/sfmlpointinstanceinfo.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/user_override/sfmlsoundfile.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/user_override/sfmlsoundfile.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/user_override/sfmlsoundobjectinforeference.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/user_override/sfmlsoundobjectinforeference.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/variable/variable.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/variable/variable.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/variable/variablecontainer.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/variable/variablecontainer.h	/^namespace SpriterEngine$/;"	n
SpriterEngine	dependencies/spriter/spriterengine/variable/variableinstancenameandidmap.cpp	/^namespace SpriterEngine$/;"	n	file:
SpriterEngine	dependencies/spriter/spriterengine/variable/variableinstancenameandidmap.h	/^namespace SpriterEngine$/;"	n
SpriterFileAttributeWrapper	dependencies/spriter/spriterengine/override/spriterfileattributewrapper.cpp	/^	SpriterFileAttributeWrapper::SpriterFileAttributeWrapper()$/;"	f	class:SpriterEngine::SpriterFileAttributeWrapper
SpriterFileAttributeWrapper	dependencies/spriter/spriterengine/override/spriterfileattributewrapper.h	/^	class SpriterFileAttributeWrapper$/;"	c	namespace:SpriterEngine
SpriterFileDocumentWrapper	dependencies/spriter/spriterengine/override/spriterfiledocumentwrapper.cpp	/^	SpriterFileDocumentWrapper::SpriterFileDocumentWrapper()$/;"	f	class:SpriterEngine::SpriterFileDocumentWrapper
SpriterFileDocumentWrapper	dependencies/spriter/spriterengine/override/spriterfiledocumentwrapper.h	/^	class SpriterFileDocumentWrapper$/;"	c	namespace:SpriterEngine
SpriterFileElementWrapper	dependencies/spriter/spriterengine/override/spriterfileelementwrapper.cpp	/^	SpriterFileElementWrapper::SpriterFileElementWrapper()$/;"	f	class:SpriterEngine::SpriterFileElementWrapper
SpriterFileElementWrapper	dependencies/spriter/spriterengine/override/spriterfileelementwrapper.h	/^	class SpriterFileElementWrapper$/;"	c	namespace:SpriterEngine
SpriterFileType	dependencies/spriter/spriterengine/loading/loader.h	/^		enum SpriterFileType$/;"	g	class:SpriterEngine::Loader
SpriterModel	dependencies/spriter/spriterengine/model/spritermodel.cpp	/^	SpriterModel::SpriterModel(FileFactory * newFileFactory, ObjectFactory * newObjectFactory) :$/;"	f	class:SpriterEngine::SpriterModel
SpriterModel	dependencies/spriter/spriterengine/model/spritermodel.cpp	/^	SpriterModel::SpriterModel(const std::string & fileName, FileFactory * newFileFactory, ObjectFa/;"	f	class:SpriterEngine::SpriterModel
SpriterModel	dependencies/spriter/spriterengine/model/spritermodel.h	/^	class SpriterModel$/;"	c	namespace:SpriterEngine
SrcAlpha	dependencies/sfml/include/SFML/Graphics/BlendMode.hpp	/^        SrcAlpha,         \/\/\/< (src.a, src.a, src.a, src.a)$/;"	e	enum:sf::BlendMode::Factor
SrcColor	dependencies/sfml/include/SFML/Graphics/BlendMode.hpp	/^        SrcColor,         \/\/\/< (src.r, src.g, src.b, src.a)$/;"	e	enum:sf::BlendMode::Factor
StatesCache	dependencies/sfml/include/SFML/Graphics/RenderTarget.hpp	/^    struct StatesCache$/;"	s	class:sf::RenderTarget
Status	dependencies/sfml/include/SFML/Audio/SoundSource.hpp	/^    enum Status$/;"	g	class:sf::SoundSource
Status	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^        enum Status$/;"	g	class:sf::Ftp::Response
Status	dependencies/sfml/include/SFML/Network/Http.hpp	/^        enum Status$/;"	g	class:sf::Http::Response
Status	dependencies/sfml/include/SFML/Network/Socket.hpp	/^    enum Status$/;"	g	class:sf::Socket
Stopped	dependencies/sfml/include/SFML/Audio/SoundSource.hpp	/^        Stopped, \/\/\/< Sound is not playing$/;"	e	enum:sf::SoundSource::Status
StrikeThrough	dependencies/sfml/include/SFML/Graphics/Text.hpp	/^        StrikeThrough = 1 << 3  \/\/\/< Strike through characters$/;"	e	enum:sf::Text::Style
String	dependencies/sfml/include/SFML/System/String.hpp	/^class SFML_SYSTEM_API String$/;"	c	namespace:sf
StringList	dependencies/spriter/spriterengine/entity/entityinstance.h	/^	typedef std::list<std::string> StringList;$/;"	t	namespace:SpriterEngine	typeref:typename:std::list<std::string>
StringRefVector	dependencies/spriter/spriterengine/objectinfo/taglist.h	/^	typedef std::vector<const std::string*> StringRefVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<const std::string * >
StringVariableInfo	dependencies/spriter/spriterengine/objectinfo/stringvariableinfo.cpp	/^	StringVariableInfo::StringVariableInfo()$/;"	f	class:SpriterEngine::StringVariableInfo
StringVariableInfo	dependencies/spriter/spriterengine/objectinfo/stringvariableinfo.h	/^	class StringVariableInfo : public UniversalObjectInterface$/;"	c	namespace:SpriterEngine
StringVariableInfoReference	dependencies/spriter/spriterengine/objectinfo/stringvariableinforeference.cpp	/^	StringVariableInfoReference::StringVariableInfoReference() :$/;"	f	class:SpriterEngine::StringVariableInfoReference
StringVariableInfoReference	dependencies/spriter/spriterengine/objectinfo/stringvariableinforeference.h	/^	class StringVariableInfoReference : public UniversalObjectInterface$/;"	c	namespace:SpriterEngine
StringVector	dependencies/spriter/spriterengine/model/spritermodel.h	/^	typedef std::vector<std::string> StringVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<std::string>
Style	dependencies/sfml/include/SFML/Graphics/Text.hpp	/^    enum Style$/;"	g	class:sf::Text
Style	dependencies/sfml/include/SFML/Window/WindowStyle.hpp	/^namespace Style$/;"	n	namespace:sf
SubEntityKeyInfo	dependencies/spriter/spriterengine/loading/loadinghelpers.h	/^	struct SubEntityKeyInfo$/;"	s	namespace:SpriterEngine
SubEntityKeyInfoMap	dependencies/spriter/spriterengine/loading/loadinghelpers.h	/^	typedef std::map<int, SubEntityKeyInfoVector> SubEntityKeyInfoMap;$/;"	t	namespace:SpriterEngine	typeref:typename:std::map<int,SubEntityKeyInfoVector>
SubEntityKeyInfoVector	dependencies/spriter/spriterengine/loading/loadinghelpers.h	/^	typedef std::vector<SubEntityKeyInfo> SubEntityKeyInfoVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<SubEntityKeyInfo>
Subtract	dependencies/sfml/include/SFML/Graphics/BlendMode.hpp	/^        Subtract,       \/\/\/< Pixel = Src * SrcFactor - Dst * DstFactor$/;"	e	enum:sf::BlendMode::Equation
Subtract	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Subtract,     \/\/\/< The - key$/;"	e	enum:sf::Keyboard::Key
SystemStatus	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            SystemStatus          = 211, \/\/\/< System status, or system help reply$/;"	e	enum:sf::Ftp::Response::Status
SystemType	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            SystemType            = 215, \/\/\/< NAME system type, where NAME is an official sys/;"	e	enum:sf::Ftp::Response::Status
T	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        T,            \/\/\/< The T key$/;"	e	enum:sf::Keyboard::Key
TAGLIST_H	dependencies/spriter/spriterengine/objectinfo/taglist.h	/^#define TAGLIST_H$/;"	d
TAGOBJECTINFOREFERENCE_H	dependencies/spriter/spriterengine/objectinfo/tagobjectinforeference.h	/^#define TAGOBJECTINFOREFERENCE_H$/;"	d
TAGOBJECTINFO_H	dependencies/spriter/spriterengine/objectinfo/tagobjectinfo.h	/^#define TAGOBJECTINFO_H$/;"	d
TAGTIMELINEINSTANCE_H	dependencies/spriter/spriterengine/timeline/tagtimelineinstance.h	/^#define TAGTIMELINEINSTANCE_H$/;"	d
THIS_ENTITY	dependencies/spriter/spriterengine/global/global.h	/^	const int THIS_ENTITY = -1;$/;"	v	namespace:SpriterEngine	typeref:typename:const int
TIMEINFO_H	dependencies/spriter/spriterengine/timeinfo/timeinfo.h	/^#define TIMEINFO_H$/;"	d
TIMELINEINSTANCE_H	dependencies/spriter/spriterengine/timeline/timelineinstance.h	/^#define TIMELINEINSTANCE_H$/;"	d
TIMELINEKEY_H	dependencies/spriter/spriterengine/timeline/timelinekey.h	/^#define TIMELINEKEY_H$/;"	d
TIMELINE_H	dependencies/spriter/spriterengine/timeline/timeline.h	/^#define TIMELINE_H$/;"	d
TITLE	include/Constants.h	/^static const char* TITLE = "starter";$/;"	v	typeref:typename:const char *
TRANSFORMPROCESSOR_H	dependencies/spriter/spriterengine/objectref/transformprocessor.h	/^#define TRANSFORMPROCESSOR_H$/;"	d
TRIGGEROBJECTINFO_H	dependencies/spriter/spriterengine/objectinfo/triggerobjectinfo.h	/^#define TRIGGEROBJECTINFO_H$/;"	d
TRIGGERTIMELINEINSTANCE_H	dependencies/spriter/spriterengine/timeline/triggertimelineinstance.h	/^#define TRIGGERTIMELINEINSTANCE_H$/;"	d
Tab	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Tab,          \/\/\/< The Tabulation key$/;"	e	enum:sf::Keyboard::Key
TagIdMap	dependencies/spriter/spriterengine/entity/entityinstancedata.h	/^	typedef std::map<int, TagObjectInfoReference*> TagIdMap;$/;"	t	namespace:SpriterEngine	typeref:typename:std::map<int,TagObjectInfoReference * >
TagList	dependencies/spriter/spriterengine/objectinfo/taglist.cpp	/^	TagList::TagList()$/;"	f	class:SpriterEngine::TagList
TagList	dependencies/spriter/spriterengine/objectinfo/taglist.h	/^	class TagList$/;"	c	namespace:SpriterEngine
TagNameMap	dependencies/spriter/spriterengine/entity/entityinstancedata.h	/^	typedef std::map<std::string, TagObjectInfoReference*> TagNameMap;$/;"	t	namespace:SpriterEngine	typeref:typename:std::map<std::string,TagObjectInfoReference * >
TagObjectInfo	dependencies/spriter/spriterengine/objectinfo/tagobjectinfo.cpp	/^	TagObjectInfo::TagObjectInfo()$/;"	f	class:SpriterEngine::TagObjectInfo
TagObjectInfo	dependencies/spriter/spriterengine/objectinfo/tagobjectinfo.h	/^	class TagObjectInfo : public UniversalObjectInterface$/;"	c	namespace:SpriterEngine
TagObjectInfoReference	dependencies/spriter/spriterengine/objectinfo/tagobjectinforeference.cpp	/^	TagObjectInfoReference::TagObjectInfoReference() :$/;"	f	class:SpriterEngine::TagObjectInfoReference
TagObjectInfoReference	dependencies/spriter/spriterengine/objectinfo/tagobjectinforeference.h	/^	class TagObjectInfoReference : public UniversalObjectInterface$/;"	c	namespace:SpriterEngine
TagTimelineInstance	dependencies/spriter/spriterengine/timeline/tagtimelineinstance.cpp	/^	TagTimelineInstance::TagTimelineInstance(EntityInstanceData *entityInstanceData, Timeline *time/;"	f	class:SpriterEngine::TagTimelineInstance
TagTimelineInstance	dependencies/spriter/spriterengine/timeline/tagtimelineinstance.h	/^	class TagTimelineInstance : public TimelineInstance$/;"	c	namespace:SpriterEngine
Tcp	dependencies/sfml/include/SFML/Network/Socket.hpp	/^        Tcp, \/\/\/< TCP protocol$/;"	e	enum:sf::Socket::Type
TcpListener	dependencies/sfml/include/SFML/Network/TcpListener.hpp	/^class SFML_NETWORK_API TcpListener : public Socket$/;"	c	namespace:sf
TcpSocket	dependencies/sfml/include/SFML/Network/TcpSocket.hpp	/^class SFML_NETWORK_API TcpSocket : public Socket$/;"	c	namespace:sf
Text	dependencies/sfml/include/SFML/Graphics/Text.hpp	/^class SFML_GRAPHICS_API Text : public Drawable, public Transformable$/;"	c	namespace:sf
TextEntered	dependencies/sfml/include/SFML/Window/Event.hpp	/^        TextEntered,            \/\/\/< A character was entered (data in event.text)$/;"	e	enum:sf::Event::EventType
TextEvent	dependencies/sfml/include/SFML/Window/Event.hpp	/^    struct TextEvent$/;"	s	class:sf::Event
Texture	dependencies/sfml/include/SFML/Graphics/Texture.hpp	/^class SFML_GRAPHICS_API Texture : GlResource$/;"	c	namespace:sf
TextureTable	dependencies/sfml/include/SFML/Graphics/Shader.hpp	/^    typedef std::map<int, const Texture*> TextureTable;$/;"	t	class:sf::Shader	typeref:typename:std::map<int,const Texture * >
Thread	dependencies/sfml/include/SFML/System/Thread.hpp	/^class SFML_SYSTEM_API Thread : NonCopyable$/;"	c	namespace:sf
Thread	dependencies/sfml/include/SFML/System/Thread.inl	/^Thread::Thread(F function, A argument) :$/;"	f	class:Thread
Thread	dependencies/sfml/include/SFML/System/Thread.inl	/^Thread::Thread(F functor) :$/;"	f	class:Thread
Thread	dependencies/sfml/include/SFML/System/Thread.inl	/^Thread::Thread(void(C::*function)(), C* object) :$/;"	f	class:Thread
ThreadFunc	dependencies/sfml/include/SFML/System/Thread.inl	/^struct ThreadFunc$/;"	s	namespace:priv	file:
ThreadFunctor	dependencies/sfml/include/SFML/System/Thread.inl	/^    ThreadFunctor(T functor) : m_functor(functor) {}$/;"	f	struct:priv::ThreadFunctor	file:
ThreadFunctor	dependencies/sfml/include/SFML/System/Thread.inl	/^struct ThreadFunctor : ThreadFunc$/;"	s	namespace:priv	file:
ThreadFunctorWithArg	dependencies/sfml/include/SFML/System/Thread.inl	/^    ThreadFunctorWithArg(F function, A arg) : m_function(function), m_arg(arg) {}$/;"	f	struct:priv::ThreadFunctorWithArg	file:
ThreadFunctorWithArg	dependencies/sfml/include/SFML/System/Thread.inl	/^struct ThreadFunctorWithArg : ThreadFunc$/;"	s	namespace:priv	file:
ThreadLocal	dependencies/sfml/include/SFML/System/ThreadLocal.hpp	/^class SFML_SYSTEM_API ThreadLocal : NonCopyable$/;"	c	namespace:sf
ThreadLocalPtr	dependencies/sfml/include/SFML/System/ThreadLocalPtr.hpp	/^class ThreadLocalPtr : private ThreadLocal$/;"	c	namespace:sf
ThreadLocalPtr	dependencies/sfml/include/SFML/System/ThreadLocalPtr.inl	/^ThreadLocalPtr<T>::ThreadLocalPtr(T* value) :$/;"	f	class:sf::ThreadLocalPtr
ThreadMemberFunc	dependencies/sfml/include/SFML/System/Thread.inl	/^    ThreadMemberFunc(void(C::*function)(), C* object) : m_function(function), m_object(object) {/;"	f	struct:priv::ThreadMemberFunc	file:
ThreadMemberFunc	dependencies/sfml/include/SFML/System/Thread.inl	/^struct ThreadMemberFunc : ThreadFunc$/;"	s	namespace:priv	file:
Tilde	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Tilde,        \/\/\/< The ~ key$/;"	e	enum:sf::Keyboard::Key
Time	dependencies/sfml/include/SFML/System/Time.hpp	/^class SFML_SYSTEM_API Time$/;"	c	namespace:sf
TimeInfo	dependencies/spriter/spriterengine/timeinfo/timeinfo.cpp	/^	TimeInfo::TimeInfo(real initialTime, real initialNextTime, EasingCurveInterface *initialEasingC/;"	f	class:SpriterEngine::TimeInfo
TimeInfo	dependencies/spriter/spriterengine/timeinfo/timeinfo.h	/^	class TimeInfo$/;"	c	namespace:SpriterEngine
Timeline	dependencies/spriter/spriterengine/timeline/timeline.cpp	/^	Timeline::Timeline(int initialObjectId):$/;"	f	class:SpriterEngine::Timeline
Timeline	dependencies/spriter/spriterengine/timeline/timeline.h	/^	class Timeline$/;"	c	namespace:SpriterEngine
Timeline2DMap	dependencies/spriter/spriterengine/animation/animation.h	/^	typedef std::map<int,TimelineMap> Timeline2DMap;$/;"	t	namespace:SpriterEngine	typeref:typename:std::map<int,TimelineMap>
TimelineInstance	dependencies/spriter/spriterengine/timeline/timelineinstance.cpp	/^	TimelineInstance::TimelineInstance(Timeline *timeline) :$/;"	f	class:SpriterEngine::TimelineInstance
TimelineInstance	dependencies/spriter/spriterengine/timeline/timelineinstance.h	/^	class TimelineInstance$/;"	c	namespace:SpriterEngine
TimelineInstanceVector	dependencies/spriter/spriterengine/animation/animation.h	/^	typedef std::vector<TimelineInstance*> TimelineInstanceVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<TimelineInstance * >
TimelineInstanceVector	dependencies/spriter/spriterengine/animation/animationinstance.h	/^	typedef std::vector<TimelineInstance*>TimelineInstanceVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<TimelineInstance * >
TimelineKey	dependencies/spriter/spriterengine/timeline/timelinekey.cpp	/^	TimelineKey::TimelineKey(TimeInfo *initialTimeInfo, UniversalObjectInterface *initialObjectInfo/;"	f	class:SpriterEngine::TimelineKey
TimelineKey	dependencies/spriter/spriterengine/timeline/timelinekey.h	/^	class TimelineKey$/;"	c	namespace:SpriterEngine
TimelineKeyVector	dependencies/spriter/spriterengine/timeline/timeline.h	/^	typedef std::vector<TimelineKey*> TimelineKeyVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<TimelineKey * >
TimelineKeyVector	dependencies/spriter/spriterengine/timeline/timelineinstance.h	/^	typedef std::vector<TimelineKey*> TimelineKeyVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<TimelineKey * >
TimelineKeyVectorIterator	dependencies/spriter/spriterengine/timeline/timelineinstance.h	/^	typedef TimelineKeyVector::iterator TimelineKeyVectorIterator;$/;"	t	namespace:SpriterEngine	typeref:typename:TimelineKeyVector::iterator
TimelineMap	dependencies/spriter/spriterengine/animation/animation.h	/^	typedef std::map<int,Timeline*> TimelineMap;$/;"	t	namespace:SpriterEngine	typeref:typename:std::map<int,Timeline * >
TimelineVector	dependencies/spriter/spriterengine/animation/animation.h	/^	typedef std::vector<Timeline*> TimelineVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<Timeline * >
Titlebar	dependencies/sfml/include/SFML/Window/WindowStyle.hpp	/^        Titlebar   = 1 << 0, \/\/\/< Title bar + fixed border$/;"	e	enum:sf::Style::__anonab3490d60103
Touch	dependencies/sfml/include/SFML/Window/Touch.hpp	/^class SFML_WINDOW_API Touch$/;"	c	namespace:sf
TouchBegan	dependencies/sfml/include/SFML/Window/Event.hpp	/^        TouchBegan,             \/\/\/< A touch event began (data in event.touch)$/;"	e	enum:sf::Event::EventType
TouchEnded	dependencies/sfml/include/SFML/Window/Event.hpp	/^        TouchEnded,             \/\/\/< A touch event ended (data in event.touch)$/;"	e	enum:sf::Event::EventType
TouchEvent	dependencies/sfml/include/SFML/Window/Event.hpp	/^    struct TouchEvent$/;"	s	class:sf::Event
TouchMoved	dependencies/sfml/include/SFML/Window/Event.hpp	/^        TouchMoved,             \/\/\/< A touch moved (data in event.touch)$/;"	e	enum:sf::Event::EventType
TransferAborted	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^            TransferAborted           = 426, \/\/\/< Connection closed, transfer aborted$/;"	e	enum:sf::Ftp::Response::Status
TransferMode	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^    enum TransferMode$/;"	g	class:sf::Ftp
Transform	dependencies/sfml/include/SFML/Graphics/Transform.hpp	/^class SFML_GRAPHICS_API Transform$/;"	c	namespace:sf
TransformProcessor	dependencies/spriter/spriterengine/objectref/transformprocessor.cpp	/^	TransformProcessor::TransformProcessor(UniversalObjectInterface *hostParentObject) :$/;"	f	class:SpriterEngine::TransformProcessor
TransformProcessor	dependencies/spriter/spriterengine/objectref/transformprocessor.h	/^	class TransformProcessor$/;"	c	namespace:SpriterEngine
TransformProcessorMap	dependencies/spriter/spriterengine/entity/entityinstancedata.h	/^	typedef std::map<int, TransformProcessor> TransformProcessorMap;$/;"	t	namespace:SpriterEngine	typeref:typename:std::map<int,TransformProcessor>
Transformable	dependencies/sfml/include/SFML/Graphics/Transformable.hpp	/^class SFML_GRAPHICS_API Transformable$/;"	c	namespace:sf
TransientContextLock	dependencies/sfml/include/SFML/Window/GlResource.hpp	/^    class SFML_WINDOW_API TransientContextLock : NonCopyable$/;"	c	class:sf::GlResource
Transparent	dependencies/sfml/include/SFML/Graphics/Color.hpp	/^    static const Color Transparent; \/\/\/< Transparent (black) predefined color$/;"	m	class:sf::Color	typeref:typename:const Color
TriangleFan	dependencies/sfml/include/SFML/Graphics/PrimitiveType.hpp	/^    TriangleFan,   \/\/\/< List of connected triangles, a point uses the common center and the p/;"	e	enum:sf::PrimitiveType
TriangleStrip	dependencies/sfml/include/SFML/Graphics/PrimitiveType.hpp	/^    TriangleStrip, \/\/\/< List of connected triangles, a point uses the two previous points to /;"	e	enum:sf::PrimitiveType
Triangles	dependencies/sfml/include/SFML/Graphics/PrimitiveType.hpp	/^    Triangles,     \/\/\/< List of individual triangles$/;"	e	enum:sf::PrimitiveType
TrianglesFan	dependencies/sfml/include/SFML/Graphics/PrimitiveType.hpp	/^    TrianglesFan   = TriangleFan    \/\/\/< \\deprecated Use TriangleFan instead$/;"	e	enum:sf::PrimitiveType
TrianglesStrip	dependencies/sfml/include/SFML/Graphics/PrimitiveType.hpp	/^    TrianglesStrip = TriangleStrip, \/\/\/< \\deprecated Use TriangleStrip instead$/;"	e	enum:sf::PrimitiveType
TriggerIdMap	dependencies/spriter/spriterengine/entity/entityinstancedata.h	/^	typedef std::map<int, TriggerObjectInfo*> TriggerIdMap;$/;"	t	namespace:SpriterEngine	typeref:typename:std::map<int,TriggerObjectInfo * >
TriggerNameMap	dependencies/spriter/spriterengine/entity/entityinstancedata.h	/^	typedef std::map<std::string, TriggerObjectInfo*> TriggerNameMap;$/;"	t	namespace:SpriterEngine	typeref:typename:std::map<std::string,TriggerObjectInfo * >
TriggerObjectInfo	dependencies/spriter/spriterengine/objectinfo/triggerobjectinfo.cpp	/^	TriggerObjectInfo::TriggerObjectInfo() :$/;"	f	class:SpriterEngine::TriggerObjectInfo
TriggerObjectInfo	dependencies/spriter/spriterengine/objectinfo/triggerobjectinfo.h	/^	class TriggerObjectInfo : public UniversalObjectInterface$/;"	c	namespace:SpriterEngine
TriggerTimelineInstance	dependencies/spriter/spriterengine/timeline/triggertimelineinstance.cpp	/^	TriggerTimelineInstance::TriggerTimelineInstance(EntityInstanceData * entityInstanceData, Timel/;"	f	class:SpriterEngine::TriggerTimelineInstance
TriggerTimelineInstance	dependencies/spriter/spriterengine/timeline/triggertimelineinstance.cpp	/^	TriggerTimelineInstance::TriggerTimelineInstance(EntityInstanceData *entityInstanceData, Timeli/;"	f	class:SpriterEngine::TriggerTimelineInstance
TriggerTimelineInstance	dependencies/spriter/spriterengine/timeline/triggertimelineinstance.h	/^	class TriggerTimelineInstance : public TimelineInstance$/;"	c	namespace:SpriterEngine
Type	dependencies/sfml/include/SFML/Graphics/Shader.hpp	/^    enum Type$/;"	g	class:sf::Shader
Type	dependencies/sfml/include/SFML/Network/Socket.hpp	/^    enum Type$/;"	g	class:sf::Socket
Type	dependencies/sfml/include/SFML/Window/Sensor.hpp	/^    enum Type$/;"	g	class:sf::Sensor
Type	include/Scene.h	/^	enum class Type {$/;"	g	class:Scene
Type	include/Screen.h	/^	enum class Type {$/;"	g	class:Screen
U	dependencies/sfml/include/SFML/Window/Joystick.hpp	/^        U,    \/\/\/< The U axis$/;"	e	enum:sf::Joystick::Axis
U	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        U,            \/\/\/< The U key$/;"	e	enum:sf::Keyboard::Key
UNIVERSALOBJECTINTERFACE_H	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.h	/^#define UNIVERSALOBJECTINTERFACE_H$/;"	d
UTF8_ACCEPT	dependencies/nlohmann/json.hpp	/^    static constexpr uint8_t UTF8_ACCEPT = 0;$/;"	m	class:nlohmann::detail::serializer	typeref:typename:uint8_t
UTF8_ACCEPT	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static constexpr uint8_t UTF8_ACCEPT = 0;$/;"	m	class:nlohmann::detail::serializer	typeref:typename:uint8_t
UTF8_REJECT	dependencies/nlohmann/json.hpp	/^    static constexpr uint8_t UTF8_REJECT = 1;$/;"	m	class:nlohmann::detail::serializer	typeref:typename:uint8_t
UTF8_REJECT	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static constexpr uint8_t UTF8_REJECT = 1;$/;"	m	class:nlohmann::detail::serializer	typeref:typename:uint8_t
Udp	dependencies/sfml/include/SFML/Network/Socket.hpp	/^        Udp  \/\/\/< UDP protocol$/;"	e	enum:sf::Socket::Type
UdpSocket	dependencies/sfml/include/SFML/Network/UdpSocket.hpp	/^class SFML_NETWORK_API UdpSocket : public Socket$/;"	c	namespace:sf
Uint16	dependencies/sfml/include/SFML/Config.hpp	/^    typedef unsigned short Uint16;$/;"	t	namespace:sf	typeref:typename:unsigned short
Uint32	dependencies/sfml/include/SFML/Config.hpp	/^    typedef unsigned int Uint32;$/;"	t	namespace:sf	typeref:typename:unsigned int
Uint64	dependencies/sfml/include/SFML/Config.hpp	/^        typedef unsigned __int64 Uint64;$/;"	t	namespace:sf	typeref:typename:unsigned __int64
Uint64	dependencies/sfml/include/SFML/Config.hpp	/^        typedef unsigned long long Uint64;$/;"	t	namespace:sf	typeref:typename:unsigned long long
Uint8	dependencies/sfml/include/SFML/Config.hpp	/^    typedef unsigned char Uint8;$/;"	t	namespace:sf	typeref:typename:unsigned char
Unauthorized	dependencies/sfml/include/SFML/Network/Http.hpp	/^            Unauthorized        = 401, \/\/\/< The requested page needs an authentication to be /;"	e	enum:sf::Http::Response::Status
Underlined	dependencies/sfml/include/SFML/Graphics/Text.hpp	/^        Underlined    = 1 << 2, \/\/\/< Underlined characters$/;"	e	enum:sf::Text::Style
UniformTable	dependencies/sfml/include/SFML/Graphics/Shader.hpp	/^    typedef std::map<std::string, int> UniformTable;$/;"	t	class:sf::Shader	typeref:typename:std::map<std::string,int>
UniversalObjectInterface	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	UniversalObjectInterface::UniversalObjectInterface()$/;"	f	class:SpriterEngine::UniversalObjectInterface
UniversalObjectInterface	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.h	/^	class UniversalObjectInterface$/;"	c	namespace:SpriterEngine
Unknown	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Unknown = -1, \/\/\/< Unhandled key$/;"	e	enum:sf::Keyboard::Key
Up	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Up,           \/\/\/< Up arrow$/;"	e	enum:sf::Keyboard::Key
UserAcceleration	dependencies/sfml/include/SFML/Window/Sensor.hpp	/^        UserAcceleration, \/\/\/< Measures the direction and intensity of device acceleration, i/;"	e	enum:sf::Sensor::Type
Utf	dependencies/sfml/include/SFML/System/Utf.hpp	/^class Utf<16>$/;"	c	namespace:sf
Utf	dependencies/sfml/include/SFML/System/Utf.hpp	/^class Utf<32>$/;"	c	namespace:sf
Utf	dependencies/sfml/include/SFML/System/Utf.hpp	/^class Utf<8>$/;"	c	namespace:sf
Utf16	dependencies/sfml/include/SFML/System/Utf.hpp	/^typedef Utf<16> Utf16;$/;"	t	namespace:sf	typeref:typename:Utf<16>
Utf32	dependencies/sfml/include/SFML/System/Utf.hpp	/^typedef Utf<32> Utf32;$/;"	t	namespace:sf	typeref:typename:Utf<32>
Utf8	dependencies/sfml/include/SFML/System/Utf.hpp	/^typedef Utf<8>  Utf8;$/;"	t	namespace:sf	typeref:typename:Utf<8>
V	dependencies/sfml/include/SFML/Window/Joystick.hpp	/^        V,    \/\/\/< The V axis$/;"	e	enum:sf::Joystick::Axis
V	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        V,            \/\/\/< The V key$/;"	e	enum:sf::Keyboard::Key
VARIABLECONTAINER_H	dependencies/spriter/spriterengine/variable/variablecontainer.h	/^#define VARIABLECONTAINER_H$/;"	d
VARIABLEINSTANCENAMEANDIDMAP_H	dependencies/spriter/spriterengine/variable/variableinstancenameandidmap.h	/^#define VARIABLEINSTANCENAMEANDIDMAP_H$/;"	d
VARIABLETIMELINEINSTANCE_H	dependencies/spriter/spriterengine/timeline/variabletimelineinstance.h	/^#define VARIABLETIMELINEINSTANCE_H$/;"	d
VARIABLETYPE_INT	dependencies/spriter/spriterengine/variable/variable.h	/^			VARIABLETYPE_INT,$/;"	e	enum:SpriterEngine::Variable::VariableType
VARIABLETYPE_REAL	dependencies/spriter/spriterengine/variable/variable.h	/^			VARIABLETYPE_REAL$/;"	e	enum:SpriterEngine::Variable::VariableType
VARIABLETYPE_STRING	dependencies/spriter/spriterengine/variable/variable.h	/^			VARIABLETYPE_STRING,$/;"	e	enum:SpriterEngine::Variable::VariableType
VARIABLE_H	dependencies/spriter/spriterengine/variable/variable.h	/^#define VARIABLE_H$/;"	d
Variable	dependencies/spriter/spriterengine/variable/variable.cpp	/^	Variable::Variable(std::string initialName, VariableType initialVariableType) :$/;"	f	class:SpriterEngine::Variable
Variable	dependencies/spriter/spriterengine/variable/variable.h	/^	class Variable$/;"	c	namespace:SpriterEngine
VariableContainer	dependencies/spriter/spriterengine/variable/variablecontainer.cpp	/^	VariableContainer::VariableContainer()$/;"	f	class:SpriterEngine::VariableContainer
VariableContainer	dependencies/spriter/spriterengine/variable/variablecontainer.h	/^	class VariableContainer$/;"	c	namespace:SpriterEngine
VariableInstanceNameAndIdMap	dependencies/spriter/spriterengine/variable/variableinstancenameandidmap.cpp	/^	VariableInstanceNameAndIdMap::VariableInstanceNameAndIdMap()$/;"	f	class:SpriterEngine::VariableInstanceNameAndIdMap
VariableInstanceNameAndIdMap	dependencies/spriter/spriterengine/variable/variableinstancenameandidmap.h	/^	class VariableInstanceNameAndIdMap$/;"	c	namespace:SpriterEngine
VariableInstanceNameMap	dependencies/spriter/spriterengine/variable/variableinstancenameandidmap.h	/^	typedef std::map<std::string, UniversalObjectInterface*> VariableInstanceNameMap;$/;"	t	namespace:SpriterEngine	typeref:typename:std::map<std::string,UniversalObjectInterface * >
VariableInstanceObjectIdMap	dependencies/spriter/spriterengine/entity/entityinstancedata.h	/^	typedef std::map<int, VariableInstanceNameAndIdMap> VariableInstanceObjectIdMap;$/;"	t	namespace:SpriterEngine	typeref:typename:std::map<int,VariableInstanceNameAndIdMap>
VariableInstanceObjectNameMap	dependencies/spriter/spriterengine/entity/entityinstancedata.h	/^	typedef std::map<std::string, VariableInstanceNameAndIdMap*> VariableInstanceObjectNameMap;$/;"	t	namespace:SpriterEngine	typeref:typename:std::map<std::string,VariableInstanceNameAndIdMap * >
VariableInstanceVector	dependencies/spriter/spriterengine/variable/variableinstancenameandidmap.h	/^	typedef std::vector<UniversalObjectInterface*> VariableInstanceVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<UniversalObjectInterface * >
VariableTimelineInstance	dependencies/spriter/spriterengine/timeline/variabletimelineinstance.cpp	/^	VariableTimelineInstance::VariableTimelineInstance(EntityInstanceData *entityInstanceData, Time/;"	f	class:SpriterEngine::VariableTimelineInstance
VariableTimelineInstance	dependencies/spriter/spriterengine/timeline/variabletimelineinstance.h	/^	class VariableTimelineInstance : public TimelineInstance$/;"	c	namespace:SpriterEngine
VariableType	dependencies/spriter/spriterengine/variable/variable.h	/^		enum VariableType {$/;"	g	class:SpriterEngine::Variable
VariableVector	dependencies/spriter/spriterengine/entity/object.h	/^	typedef std::vector<Variable*> VariableVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<Variable * >
VariableVector	dependencies/spriter/spriterengine/variable/variablecontainer.h	/^	typedef std::vector<Variable*> VariableVector;$/;"	t	namespace:SpriterEngine	typeref:typename:std::vector<Variable * >
Vec2	dependencies/sfml/include/SFML/Graphics/Glsl.hpp	/^    typedef Vector2<float> Vec2;$/;"	t	namespace:sf::Glsl	typeref:typename:Vector2<float>
Vec3	dependencies/sfml/include/SFML/Graphics/Glsl.hpp	/^    typedef Vector3<float> Vec3;$/;"	t	namespace:sf::Glsl	typeref:typename:Vector3<float>
Vec4	dependencies/sfml/include/SFML/Graphics/Glsl.hpp	/^    typedef implementation-defined Vec4;$/;"	t	namespace:sf::Glsl	typeref:typename:implementation-defined
Vec4	dependencies/sfml/include/SFML/Graphics/Glsl.hpp	/^    typedef priv::Vector4<float> Vec4;$/;"	t	namespace:sf::Glsl	typeref:typename:priv::Vector4<float>
Vector2	dependencies/sfml/include/SFML/System/Vector2.hpp	/^class Vector2$/;"	c	namespace:sf
Vector2	dependencies/sfml/include/SFML/System/Vector2.inl	/^inline Vector2<T>::Vector2() :$/;"	f	class:Vector2
Vector2	dependencies/sfml/include/SFML/System/Vector2.inl	/^inline Vector2<T>::Vector2(T X, T Y) :$/;"	f	class:Vector2
Vector2	dependencies/sfml/include/SFML/System/Vector2.inl	/^inline Vector2<T>::Vector2(const Vector2<U>& vector) :$/;"	f	class:Vector2
Vector2f	dependencies/sfml/include/SFML/System/Vector2.hpp	/^typedef Vector2<float>        Vector2f;$/;"	t	namespace:sf	typeref:typename:Vector2<float>
Vector2i	dependencies/sfml/include/SFML/System/Vector2.hpp	/^typedef Vector2<int>          Vector2i;$/;"	t	namespace:sf	typeref:typename:Vector2<int>
Vector2u	dependencies/sfml/include/SFML/System/Vector2.hpp	/^typedef Vector2<unsigned int> Vector2u;$/;"	t	namespace:sf	typeref:typename:Vector2<unsigned int>
Vector3	dependencies/sfml/include/SFML/System/Vector3.hpp	/^class Vector3$/;"	c	namespace:sf
Vector3	dependencies/sfml/include/SFML/System/Vector3.inl	/^inline Vector3<T>::Vector3() :$/;"	f	class:Vector3
Vector3	dependencies/sfml/include/SFML/System/Vector3.inl	/^inline Vector3<T>::Vector3(T X, T Y, T Z) :$/;"	f	class:Vector3
Vector3	dependencies/sfml/include/SFML/System/Vector3.inl	/^inline Vector3<T>::Vector3(const Vector3<U>& vector) :$/;"	f	class:Vector3
Vector3f	dependencies/sfml/include/SFML/System/Vector3.hpp	/^typedef Vector3<float> Vector3f;$/;"	t	namespace:sf	typeref:typename:Vector3<float>
Vector3i	dependencies/sfml/include/SFML/System/Vector3.hpp	/^typedef Vector3<int>   Vector3i;$/;"	t	namespace:sf	typeref:typename:Vector3<int>
Vector4	dependencies/sfml/include/SFML/Graphics/Glsl.inl	/^    Vector4() :$/;"	f	struct:Vector4	file:
Vector4	dependencies/sfml/include/SFML/Graphics/Glsl.inl	/^    Vector4(T X, T Y, T Z, T W) :$/;"	f	struct:Vector4	file:
Vector4	dependencies/sfml/include/SFML/Graphics/Glsl.inl	/^    Vector4(const Color& color)$/;"	f	struct:Vector4	file:
Vector4	dependencies/sfml/include/SFML/Graphics/Glsl.inl	/^    explicit Vector4(const Vector4<U>& other) :$/;"	f	struct:Vector4	file:
Vector4	dependencies/sfml/include/SFML/Graphics/Glsl.inl	/^struct Vector4$/;"	s	file:
VersionNotSupported	dependencies/sfml/include/SFML/Network/Http.hpp	/^            VersionNotSupported = 505, \/\/\/< The server doesn't support the requested HTTP ver/;"	e	enum:sf::Http::Response::Status
Vertex	dependencies/sfml/include/SFML/Graphics/Shader.hpp	/^        Vertex,   \/\/\/< %Vertex shader$/;"	e	enum:sf::Shader::Type
Vertex	dependencies/sfml/include/SFML/Graphics/Vertex.hpp	/^class SFML_GRAPHICS_API Vertex$/;"	c	namespace:sf
VertexArray	dependencies/sfml/include/SFML/Graphics/VertexArray.hpp	/^class SFML_GRAPHICS_API VertexArray : public Drawable$/;"	c	namespace:sf
VertexCacheSize	dependencies/sfml/include/SFML/Graphics/RenderTarget.hpp	/^        enum {VertexCacheSize = 4};$/;"	e	enum:sf::RenderTarget::StatesCache::__anonc1f8c3ad0103
VerticalWheel	dependencies/sfml/include/SFML/Window/Mouse.hpp	/^        VerticalWheel,  \/\/\/< The vertical mouse wheel$/;"	e	enum:sf::Mouse::Wheel
VideoMode	dependencies/sfml/include/SFML/Window/VideoMode.hpp	/^class SFML_WINDOW_API VideoMode$/;"	c	namespace:sf
View	dependencies/sfml/include/SFML/Graphics/View.hpp	/^class SFML_GRAPHICS_API View$/;"	c	namespace:sf
W	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        W,            \/\/\/< The W key$/;"	e	enum:sf::Keyboard::Key
Wheel	dependencies/sfml/include/SFML/Window/Mouse.hpp	/^    enum Wheel$/;"	g	class:sf::Mouse
White	dependencies/sfml/include/SFML/Graphics/Color.hpp	/^    static const Color White;       \/\/\/< White predefined color$/;"	m	class:sf::Color	typeref:typename:const Color
Window	dependencies/sfml/include/SFML/Window/Window.hpp	/^class SFML_WINDOW_API Window : GlResource, NonCopyable$/;"	c	namespace:sf
WindowHandle	dependencies/sfml/include/SFML/Window/WindowHandle.hpp	/^    typedef HWND__* WindowHandle;$/;"	t	namespace:sf	typeref:typename:HWND__ *
WriterFactory	dependencies/sfml/include/SFML/Audio/SoundFileFactory.hpp	/^    struct WriterFactory$/;"	s	class:sf::SoundFileFactory
WriterFactoryArray	dependencies/sfml/include/SFML/Audio/SoundFileFactory.hpp	/^    typedef std::vector<WriterFactory> WriterFactoryArray;$/;"	t	class:sf::SoundFileFactory	typeref:typename:std::vector<WriterFactory>
X	dependencies/sfml/include/SFML/Window/Joystick.hpp	/^        X,    \/\/\/< The X axis$/;"	e	enum:sf::Joystick::Axis
X	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        X,            \/\/\/< The X key$/;"	e	enum:sf::Keyboard::Key
XButton1	dependencies/sfml/include/SFML/Window/Mouse.hpp	/^        XButton1,   \/\/\/< The first extra mouse button$/;"	e	enum:sf::Mouse::Button
XButton2	dependencies/sfml/include/SFML/Window/Mouse.hpp	/^        XButton2,   \/\/\/< The second extra mouse button$/;"	e	enum:sf::Mouse::Button
Y	dependencies/sfml/include/SFML/Window/Joystick.hpp	/^        Y,    \/\/\/< The Y axis$/;"	e	enum:sf::Joystick::Axis
Y	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Y,            \/\/\/< The Y key$/;"	e	enum:sf::Keyboard::Key
Yellow	dependencies/sfml/include/SFML/Graphics/Color.hpp	/^    static const Color Yellow;      \/\/\/< Yellow predefined color$/;"	m	class:sf::Color	typeref:typename:const Color
Z	dependencies/sfml/include/SFML/Window/Joystick.hpp	/^        Z,    \/\/\/< The Z axis$/;"	e	enum:sf::Joystick::Axis
Z	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^        Z,            \/\/\/< The Z key$/;"	e	enum:sf::Keyboard::Key
Zero	dependencies/sfml/include/SFML/Graphics/BlendMode.hpp	/^        Zero,             \/\/\/< (0, 0, 0, 0)$/;"	e	enum:sf::BlendMode::Factor
Zero	dependencies/sfml/include/SFML/System/Time.hpp	/^    static const Time Zero; \/\/\/< Predefined "zero" time value$/;"	m	class:sf::Time	typeref:typename:const Time
__anon04e9c1710103	dependencies/sfml/include/SFML/Network/UdpSocket.hpp	/^    {$/;"	g	class:sf::UdpSocket
__anon1bf1ffe80103	dependencies/sfml/include/SFML/Network/Socket.hpp	/^    {$/;"	g	class:sf::Socket
__anon347436d50102	dependencies/nlohmann/json.hpp	/^    {$/;"	f	function:nlohmann::detail::from_json	file:
__anon347436d50202	dependencies/nlohmann/json.hpp	/^    {$/;"	f	function:nlohmann::detail::from_json_array_impl	file:
__anon347436d50302	dependencies/nlohmann/json.hpp	/^    {$/;"	f	function:nlohmann::detail::from_json_array_impl	file:
__anon347436d50402	dependencies/nlohmann/json.hpp	/^    {$/;"	f	function:nlohmann::detail::from_json	file:
__anon347436d50510	dependencies/nlohmann/json.hpp	/^{$/;"	n	namespace:nlohmann
__anon347436d50610	dependencies/nlohmann/json.hpp	/^{$/;"	n	namespace:nlohmann
__anon347436d50702	dependencies/nlohmann/json.hpp	/^        {$/;"	f	function:nlohmann::detail::input_adapter::input_adapter	file:
__anon347436d50802	dependencies/nlohmann/json.hpp	/^        {$/;"	f	function:nlohmann::detail::binary_reader::get_string	file:
__anon347436d50902	dependencies/nlohmann/json.hpp	/^        {$/;"	f	function:nlohmann::detail::binary_reader::get_cbor_array	file:
__anon347436d50a02	dependencies/nlohmann/json.hpp	/^        {$/;"	f	function:nlohmann::detail::binary_reader::get_cbor_object	file:
__anon347436d50b02	dependencies/nlohmann/json.hpp	/^        {$/;"	f	function:nlohmann::detail::binary_reader::get_msgpack_array	file:
__anon347436d50c02	dependencies/nlohmann/json.hpp	/^        {$/;"	f	function:nlohmann::detail::binary_reader::get_msgpack_object	file:
__anon347436d50d02	dependencies/nlohmann/json.hpp	/^                    {$/;"	f	function:nlohmann::detail::binary_reader::get_ubjson_array	file:
__anon347436d50e02	dependencies/nlohmann/json.hpp	/^                {$/;"	f	function:nlohmann::detail::binary_reader::get_ubjson_array	file:
__anon347436d50f02	dependencies/nlohmann/json.hpp	/^                {$/;"	f	function:nlohmann::detail::binary_reader::get_ubjson_object	file:
__anon347436d51002	dependencies/nlohmann/json.hpp	/^                {$/;"	f	function:nlohmann::detail::binary_reader::get_ubjson_object	file:
__anon347436d51102	dependencies/nlohmann/json.hpp	/^                    {$/;"	f	function:nlohmann::detail::binary_writer::write_ubjson	file:
__anon347436d51202	dependencies/nlohmann/json.hpp	/^                    {$/;"	f	function:nlohmann::detail::binary_writer::write_ubjson	file:
__anon347436d51302	dependencies/nlohmann/json.hpp	/^        {$/;"	f	function:nlohmann::detail::serializer::dump_float	file:
__anon347436d51402	dependencies/nlohmann/json.hpp	/^        {$/;"	f	function:nlohmann::json_pointer::to_string	file:
__anon347436d51502	dependencies/nlohmann/json.hpp	/^                {$/;"	f	function:nlohmann::json_pointer::get_unchecked	file:
__anon347436d51602	dependencies/nlohmann/json.hpp	/^        {$/;"	f	function:nlohmann::basic_json::create	file:
__anon347436d51702	dependencies/nlohmann/json.hpp	/^        {$/;"	f	function:nlohmann::basic_json::basic_json	file:
__anon347436d51802	dependencies/nlohmann/json.hpp	/^            {$/;"	f	function:nlohmann::basic_json::basic_json	file:
__anon347436d51902	dependencies/nlohmann/json.hpp	/^        {$/;"	f	function:nlohmann::basic_json::patch	file:
__anon347436d51a02	dependencies/nlohmann/json.hpp	/^        {$/;"	f	function:nlohmann::basic_json::patch	file:
__anon347436d51b02	dependencies/nlohmann/json.hpp	/^        {$/;"	f	function:nlohmann::basic_json::patch	file:
__anon347436d51c02	dependencies/nlohmann/json.hpp	/^            {$/;"	f	function:nlohmann::basic_json::patch	typeref:typename:basic_json &	file:
__anon4b0d4c8f010a	dependencies/sfml/include/SFML/Window/Event.hpp	/^    {$/;"	u	class:sf::Event
__anon4de6f2fd0103	dependencies/sfml/include/SFML/Window/Joystick.hpp	/^    {$/;"	g	class:sf::Joystick
__anon6d16d0be0102	dependencies/spriter/spriterengine/user_override/json.hpp	/^						   std::front_inserter(l), [](const BasicJsonType & i) {$/;"	f	function:nlohmann::detail::from_json	file:
__anon6d16d0be0202	dependencies/spriter/spriterengine/user_override/json.hpp	/^						   std::inserter(arr, end(arr)), [](const BasicJsonType & i) {$/;"	f	function:nlohmann::detail::from_json_array_impl	file:
__anon6d16d0be0302	dependencies/spriter/spriterengine/user_override/json.hpp	/^						   std::inserter(arr, end(arr)), [](const BasicJsonType & i) {$/;"	f	function:nlohmann::detail::from_json_array_impl	file:
__anon6d16d0be0402	dependencies/spriter/spriterengine/user_override/json.hpp	/^				[](typename BasicJsonType::object_t::value_type const & p) {$/;"	f	function:nlohmann::detail::from_json	file:
__anon6d16d0be0510	dependencies/spriter/spriterengine/user_override/json.hpp	/^	namespace {$/;"	n	namespace:nlohmann
__anon6d16d0be0610	dependencies/spriter/spriterengine/user_override/json.hpp	/^	namespace {$/;"	n	namespace:nlohmann
__anon6d16d0be0702	dependencies/spriter/spriterengine/user_override/json.hpp	/^					[&first](std::pair<bool, int> res, decltype(*first) val) {$/;"	f	function:nlohmann::detail::input_adapter::input_adapter	file:
__anon6d16d0be0802	dependencies/spriter/spriterengine/user_override/json.hpp	/^				std::generate_n(std::back_inserter(result), len, [this]() {$/;"	f	function:nlohmann::detail::binary_reader::get_string	file:
__anon6d16d0be0902	dependencies/spriter/spriterengine/user_override/json.hpp	/^				std::generate_n(std::back_inserter(*result.m_value.array), len, [this]() {$/;"	f	function:nlohmann::detail::binary_reader::get_cbor_array	file:
__anon6d16d0be0a02	dependencies/spriter/spriterengine/user_override/json.hpp	/^								len, [this]() {$/;"	f	function:nlohmann::detail::binary_reader::get_cbor_object	file:
__anon6d16d0be0b02	dependencies/spriter/spriterengine/user_override/json.hpp	/^				std::generate_n(std::back_inserter(*result.m_value.array), len, [this]() {$/;"	f	function:nlohmann::detail::binary_reader::get_msgpack_array	file:
__anon6d16d0be0c02	dependencies/spriter/spriterengine/user_override/json.hpp	/^								len, [this]() {$/;"	f	function:nlohmann::detail::binary_reader::get_msgpack_object	file:
__anon6d16d0be0d02	dependencies/spriter/spriterengine/user_override/json.hpp	/^											size_and_type.first, [this, size_and_type]() {$/;"	f	function:nlohmann::detail::binary_reader::get_ubjson_array	file:
__anon6d16d0be0e02	dependencies/spriter/spriterengine/user_override/json.hpp	/^										size_and_type.first, [this]() {$/;"	f	function:nlohmann::detail::binary_reader::get_ubjson_array	file:
__anon6d16d0be0f02	dependencies/spriter/spriterengine/user_override/json.hpp	/^										size_and_type.first, [this, size_and_type]() {$/;"	f	function:nlohmann::detail::binary_reader::get_ubjson_object	file:
__anon6d16d0be1002	dependencies/spriter/spriterengine/user_override/json.hpp	/^										size_and_type.first, [this]() {$/;"	f	function:nlohmann::detail::binary_reader::get_ubjson_object	file:
__anon6d16d0be1102	dependencies/spriter/spriterengine/user_override/json.hpp	/^															 [this, first_prefix](const BasicJsonType & v) {$/;"	f	function:nlohmann::detail::binary_writer::write_ubjson	file:
__anon6d16d0be1202	dependencies/spriter/spriterengine/user_override/json.hpp	/^															 [this, first_prefix](const BasicJsonType & v) {$/;"	f	function:nlohmann::detail::binary_writer::write_ubjson	file:
__anon6d16d0be1302	dependencies/spriter/spriterengine/user_override/json.hpp	/^								 [](char c) {$/;"	f	function:nlohmann::detail::serializer::dump_float	file:
__anon6d16d0be1402	dependencies/spriter/spriterengine/user_override/json.hpp	/^								   [](const std::string & a, const std::string & b) {$/;"	f	function:nlohmann::json_pointer::to_string	file:
__anon6d16d0be1502	dependencies/spriter/spriterengine/user_override/json.hpp	/^									[](const char x) {$/;"	f	function:nlohmann::json_pointer::get_unchecked	file:
__anon6d16d0be1602	dependencies/spriter/spriterengine/user_override/json.hpp	/^				auto deleter = [&](T * object) {$/;"	f	function:nlohmann::basic_json::create	file:
__anon6d16d0be1702	dependencies/spriter/spriterengine/user_override/json.hpp	/^												[](const detail::json_ref<basic_json>& element_ref) {$/;"	f	function:nlohmann::basic_json::basic_json	file:
__anon6d16d0be1802	dependencies/spriter/spriterengine/user_override/json.hpp	/^					std::for_each(init.begin(), init.end(), [this](const detail::json_ref<basic_json>& element_/;"	f	function:nlohmann::basic_json::basic_json	file:
__anon6d16d0be1902	dependencies/spriter/spriterengine/user_override/json.hpp	/^				const auto get_op = [](const std::string & op) {$/;"	f	function:nlohmann::basic_json::patch	file:
__anon6d16d0be1a02	dependencies/spriter/spriterengine/user_override/json.hpp	/^				const auto operation_add = [&result](json_pointer & ptr, basic_json val) {$/;"	f	function:nlohmann::basic_json::patch	file:
__anon6d16d0be1b02	dependencies/spriter/spriterengine/user_override/json.hpp	/^				const auto operation_remove = [&result](json_pointer & ptr) {$/;"	f	function:nlohmann::basic_json::patch	file:
__anon6d16d0be1c02	dependencies/spriter/spriterengine/user_override/json.hpp	/^												  bool string_type) -> basic_json & {$/;"	f	function:nlohmann::basic_json::patch	typeref:typename:basic_json &	file:
__anonab3490d60103	dependencies/sfml/include/SFML/Window/WindowStyle.hpp	/^    {$/;"	g	namespace:sf::Style
__anonc1ee2bdc0103	dependencies/sfml/include/SFML/Audio/SoundStream.hpp	/^    {$/;"	g	class:sf::SoundStream
__anonc1f8c3ad0103	dependencies/sfml/include/SFML/Graphics/RenderTarget.hpp	/^        enum {VertexCacheSize = 4};$/;"	g	struct:sf::RenderTarget::StatesCache
a	dependencies/sfml/include/SFML/Graphics/Color.hpp	/^    Uint8 a; \/\/\/< Alpha (opacity) component$/;"	m	class:sf::Color	typeref:typename:Uint8
accept	dependencies/nlohmann/json.hpp	/^    bool accept(const bool strict = true)$/;"	f	class:nlohmann::detail::parser	typeref:typename:bool
accept	dependencies/nlohmann/json.hpp	/^    static bool accept(IteratorType first, IteratorType last)$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
accept	dependencies/nlohmann/json.hpp	/^    static bool accept(detail::input_adapter i)$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
accept	dependencies/nlohmann/json.hpp	/^    static bool accept(detail::input_adapter& i)$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
accept	dependencies/spriter/spriterengine/user_override/json.hpp	/^				static bool accept(IteratorType first, IteratorType last) {$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
accept	dependencies/spriter/spriterengine/user_override/json.hpp	/^			bool accept(const bool strict = true) {$/;"	f	class:nlohmann::detail::parser	typeref:typename:bool
accept	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static bool accept(detail::input_adapter i) {$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
accept	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static bool accept(detail::input_adapter& i) {$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
accept_internal	dependencies/nlohmann/json.hpp	/^    bool accept_internal()$/;"	f	class:nlohmann::detail::parser	typeref:typename:bool
accept_internal	dependencies/spriter/spriterengine/user_override/json.hpp	/^			bool accept_internal() {$/;"	f	class:nlohmann::detail::parser	typeref:typename:bool
active	dependencies/spriter/spriterengine/global/atlas.h	/^                bool active;$/;"	m	struct:SpriterEngine::atlasdata	typeref:typename:bool
add	dependencies/nlohmann/json.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:nlohmann::basic_json::patch::patch_operations
add	dependencies/nlohmann/json.hpp	/^    void add(int c)$/;"	f	class:nlohmann::detail::lexer	typeref:typename:void
add	dependencies/spriter/spriterengine/global/global.h	/^	inline point add(const point &a, const point &b)$/;"	f	namespace:SpriterEngine	typeref:typename:point
add	dependencies/spriter/spriterengine/user_override/json.hpp	/^				enum class patch_operations { add, remove, replace, move, copy, test, invalid };$/;"	e	enum:nlohmann::basic_json::patch::patch_operations
add	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void add(int c) {$/;"	f	class:nlohmann::detail::lexer	typeref:typename:void
addAsset	include/GameData.h	/^	template<class T> void addAsset(const char*  name, const char* path) {};$/;"	f	class:GameData	typeref:typename:void
addAtlasFrameData	dependencies/spriter/spriterengine/model/spritermodel.cpp	/^	void SpriterModel::addAtlasFrameData(std::string initialFilePath, atlasframedata initialData)$/;"	f	class:SpriterEngine::SpriterModel	typeref:typename:void
addCharacterMap	dependencies/spriter/spriterengine/entity/entity.cpp	/^	CharacterMap *Entity::addCharacterMap(std::string name)$/;"	f	class:SpriterEngine::Entity	typeref:typename:CharacterMap *
addEntity	src/GameData.cpp	/^void GameData::addEntity(const char * model, const char * name) {$/;"	f	class:GameData	typeref:typename:void
addInitializationId	dependencies/spriter/spriterengine/entity/object.cpp	/^	void Object::addInitializationId(int newId)$/;"	f	class:SpriterEngine::Object	typeref:typename:void
addIntVariable	dependencies/spriter/spriterengine/variable/variablecontainer.cpp	/^	void VariableContainer::addIntVariable(std::string variableName, int defaultValue)$/;"	f	class:SpriterEngine::VariableContainer	typeref:typename:void
addModelAsset	src/GameData.cpp	/^void GameData::addModelAsset(const char * name, const char * path, const std::vector<std::string/;"	f	class:GameData	typeref:typename:void
addObjectInstanceToEntityInstanceData	dependencies/spriter/spriterengine/entity/object.cpp	/^	void Object::addObjectInstanceToEntityInstanceData(SpriterModel *model, EntityInstance *entityI/;"	f	class:SpriterEngine::Object	typeref:typename:void
addRealVariable	dependencies/spriter/spriterengine/variable/variablecontainer.cpp	/^	void VariableContainer::addRealVariable(std::string variableName, real defaultValue)$/;"	f	class:SpriterEngine::VariableContainer	typeref:typename:void
addStringVariable	dependencies/spriter/spriterengine/variable/variablecontainer.cpp	/^	void VariableContainer::addStringVariable(std::string variableName, std::string defaultValue)$/;"	f	class:SpriterEngine::VariableContainer	typeref:typename:void
addTexture	src/GameData.cpp	/^void GameData::addTexture(const char * name, const char * path) {$/;"	f	class:GameData	typeref:typename:void
adjustedTimeRatio	dependencies/spriter/spriterengine/timeinfo/beziereasingcurve.cpp	/^	real BezierEasingCurve::adjustedTimeRatio(real timeRatio)$/;"	f	class:SpriterEngine::BezierEasingCurve	typeref:typename:real
adjustedTimeRatio	dependencies/spriter/spriterengine/timeinfo/cubiceasingcurve.cpp	/^	real CubicEasingCurve::adjustedTimeRatio(real timeRatio)$/;"	f	class:SpriterEngine::CubicEasingCurve	typeref:typename:real
adjustedTimeRatio	dependencies/spriter/spriterengine/timeinfo/instanteasingcurve.cpp	/^	SpriterEngine::real SpriterEngine::InstantEasingCurve::adjustedTimeRatio(SpriterEngine::real ti/;"	f	class:SpriterEngine::SpriterEngine::InstantEasingCurve	typeref:typename:SpriterEngine::real
adjustedTimeRatio	dependencies/spriter/spriterengine/timeinfo/lineareasingcurve.cpp	/^	real LinearEasingCurve::adjustedTimeRatio(real timeRatio)$/;"	f	class:SpriterEngine::LinearEasingCurve	typeref:typename:real
adjustedTimeRatio	dependencies/spriter/spriterengine/timeinfo/quadraticeasingcurve.cpp	/^	real QuadraticEasingCurve::adjustedTimeRatio(SpriterEngine::real timeRatio)$/;"	f	class:SpriterEngine::QuadraticEasingCurve	typeref:typename:real
adjustedTimeRatio	dependencies/spriter/spriterengine/timeinfo/quarticeasingcurve.cpp	/^	SpriterEngine::real SpriterEngine::QuarticEasingCurve::adjustedTimeRatio(SpriterEngine::real ti/;"	f	class:SpriterEngine::SpriterEngine::QuarticEasingCurve	typeref:typename:SpriterEngine::real
adjustedTimeRatio	dependencies/spriter/spriterengine/timeinfo/quinticeasingcurve.cpp	/^	real QuinticEasingCurve::adjustedTimeRatio(real timeRatio)$/;"	f	class:SpriterEngine::QuinticEasingCurve	typeref:typename:real
adl_serializer	dependencies/nlohmann/json.hpp	/^struct adl_serializer$/;"	s	namespace:nlohmann
adl_serializer	dependencies/spriter/spriterengine/user_override/json.hpp	/^	struct adl_serializer {$/;"	s	namespace:nlohmann
advance	dependencies/sfml/include/SFML/Graphics/Glyph.hpp	/^    float     advance;     \/\/\/< Offset to move horizontally to the next character$/;"	m	class:sf::Glyph	typeref:typename:float
advanceToNextAttribute	dependencies/spriter/spriterengine/user_override/jsonspriterfileattributewrapper.cpp	/^	void JSONSpriterFileAttributeWrapper::advanceToNextAttribute()$/;"	f	class:SpriterEngine::JSONSpriterFileAttributeWrapper	typeref:typename:void
advanceToNextAttribute	dependencies/spriter/spriterengine/user_override/jsonspriterfileelementwrapper.cpp	/^	void JSONSpriterFileElementWrapper::advanceToNextAttribute(JSONSpriterFileAttributeWrapper *fro/;"	f	class:SpriterEngine::JSONSpriterFileElementWrapper	typeref:typename:void
advanceToNextSiblingElement	dependencies/spriter/spriterengine/user_override/jsonspriterfileelementwrapper.cpp	/^	void JSONSpriterFileElementWrapper::advanceToNextSiblingElement()$/;"	f	class:SpriterEngine::JSONSpriterFileElementWrapper	typeref:typename:void
advanceToNextSiblingElementOfSameName	dependencies/spriter/spriterengine/user_override/jsonspriterfileelementwrapper.cpp	/^	void JSONSpriterFileElementWrapper::advanceToNextSiblingElementOfSameName()$/;"	f	class:SpriterEngine::JSONSpriterFileElementWrapper	typeref:typename:void
allocator_type	dependencies/nlohmann/json.hpp	/^    using allocator_type = AllocatorType<basic_json>;$/;"	t	class:nlohmann::basic_json	typeref:typename:AllocatorType<basic_json>
allocator_type	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using allocator_type = AllocatorType<basic_json>;$/;"	t	class:nlohmann::basic_json	typeref:typename:AllocatorType<basic_json>
allow_exceptions	dependencies/nlohmann/json.hpp	/^    const bool allow_exceptions = true;$/;"	m	class:nlohmann::detail::parser	typeref:typename:const bool
allow_exceptions	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const bool allow_exceptions = true;$/;"	m	class:nlohmann::detail::parser	typeref:typename:const bool
alpha	dependencies/spriter/spriterengine/entity/entityinstance.h	/^		real alpha;$/;"	m	class:SpriterEngine::EntityInstance	typeref:typename:real
alpha	dependencies/spriter/spriterengine/objectinfo/boneinstanceinfo.h	/^		real alpha;$/;"	m	class:SpriterEngine::BoneInstanceInfo	typeref:typename:real
alpha	dependencies/spriter/spriterengine/objectinfo/boneobjectinfo.h	/^		real alpha;$/;"	m	class:SpriterEngine::BoneObjectInfo	typeref:typename:real
alpha	dependencies/spriter/spriterengine/objectinfo/boxobjectinfo.h	/^		real alpha;$/;"	m	class:SpriterEngine::BoxObjectInfo	typeref:typename:real
alpha	dependencies/spriter/spriterengine/objectinfo/entityobjectinfo.h	/^		real alpha;$/;"	m	class:SpriterEngine::EntityObjectInfo	typeref:typename:real
alpha	dependencies/spriter/spriterengine/objectinfo/spriteobjectinfo.h	/^		real alpha;$/;"	m	class:SpriterEngine::SpriteObjectInfo	typeref:typename:real
alphaDstFactor	dependencies/sfml/include/SFML/Graphics/BlendMode.hpp	/^    Factor   alphaDstFactor; \/\/\/< Destination blending factor for the alpha channel$/;"	m	struct:sf::BlendMode	typeref:typename:Factor
alphaEquation	dependencies/sfml/include/SFML/Graphics/BlendMode.hpp	/^    Equation alphaEquation;  \/\/\/< Blending equation for the alpha channel$/;"	m	struct:sf::BlendMode	typeref:typename:Equation
alphaSrcFactor	dependencies/sfml/include/SFML/Graphics/BlendMode.hpp	/^    Factor   alphaSrcFactor; \/\/\/< Source blending factor for the alpha channel$/;"	m	struct:sf::BlendMode	typeref:typename:Factor
alt	dependencies/sfml/include/SFML/Window/Event.hpp	/^        bool          alt;     \/\/\/< Is the Alt key pressed?$/;"	m	struct:sf::Event::KeyEvent	typeref:typename:bool
anchor	dependencies/nlohmann/json.hpp	/^        IteratorType anchor;$/;"	m	class:nlohmann::detail::iteration_proxy::iteration_proxy_internal	typeref:typename:IteratorType
anchor	dependencies/spriter/spriterengine/user_override/json.hpp	/^				IteratorType anchor;$/;"	m	class:nlohmann::detail::iteration_proxy::iteration_proxy_internal	typeref:typename:IteratorType
angle	dependencies/spriter/spriterengine/entity/entityinstance.h	/^		AngleInfo angle;$/;"	m	class:SpriterEngine::EntityInstance	typeref:typename:AngleInfo
angle	dependencies/spriter/spriterengine/objectinfo/angleinfo.h	/^		real angle;$/;"	m	class:SpriterEngine::AngleInfo	typeref:typename:real
angle	dependencies/spriter/spriterengine/objectinfo/boneinstanceinfo.h	/^		AngleInfo angle;$/;"	m	class:SpriterEngine::BoneInstanceInfo	typeref:typename:AngleInfo
angle	dependencies/spriter/spriterengine/objectinfo/boneobjectinfo.h	/^		AngleInfo angle;$/;"	m	class:SpriterEngine::BoneObjectInfo	typeref:typename:AngleInfo
angle	dependencies/spriter/spriterengine/objectinfo/boxinstanceinfo.h	/^		AngleInfo angle;$/;"	m	class:SpriterEngine::BoxInstanceInfo	typeref:typename:AngleInfo
angle	dependencies/spriter/spriterengine/objectinfo/boxobjectinfo.h	/^		AngleInfo angle;$/;"	m	class:SpriterEngine::BoxObjectInfo	typeref:typename:AngleInfo
angle	dependencies/spriter/spriterengine/objectinfo/entityobjectinfo.h	/^		AngleInfo angle;$/;"	m	class:SpriterEngine::EntityObjectInfo	typeref:typename:AngleInfo
angle	dependencies/spriter/spriterengine/objectinfo/pointinstanceinfo.h	/^		AngleInfo angle;$/;"	m	class:SpriterEngine::PointInstanceInfo	typeref:typename:AngleInfo
angle	dependencies/spriter/spriterengine/objectinfo/pointobjectinfo.h	/^		AngleInfo angle;$/;"	m	class:SpriterEngine::PointObjectInfo	typeref:typename:AngleInfo
angle	dependencies/spriter/spriterengine/objectinfo/spriteobjectinfo.h	/^		AngleInfo angle;$/;"	m	class:SpriterEngine::SpriteObjectInfo	typeref:typename:AngleInfo
angleCos	dependencies/spriter/spriterengine/objectref/transformprocessor.h	/^		real angleCos;$/;"	m	class:SpriterEngine::TransformProcessor	typeref:typename:real
angleLinear	dependencies/spriter/spriterengine/objectinfo/angleinfo.cpp	/^	real AngleInfo::angleLinear(real angleB, real t)$/;"	f	class:SpriterEngine::AngleInfo	typeref:typename:real
angleSin	dependencies/spriter/spriterengine/objectref/transformprocessor.h	/^		real angleSin;$/;"	m	class:SpriterEngine::TransformProcessor	typeref:typename:real
animation	dependencies/spriter/spriterengine/objectref/entityrefinstance.h	/^		AnimationInstance *animation;$/;"	m	class:SpriterEngine::EntityRefInstance	typeref:typename:AnimationInstance *
animationCount	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	int EntityInstance::animationCount()$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:int
animationCount	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	int EntityInstanceData::animationCount()$/;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:int
animationIndex	dependencies/spriter/spriterengine/loading/loadinghelpers.h	/^		int animationIndex;$/;"	m	struct:SpriterEngine::SubEntityKeyInfo	typeref:typename:int
animationIndex	dependencies/spriter/spriterengine/objectref/entityref.h	/^		int animationIndex;$/;"	m	class:SpriterEngine::EntityRef	typeref:typename:int
animationJustFinished	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	bool EntityInstance::animationJustFinished(bool orLooped)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:bool
animationJustLooped	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	bool EntityInstance::animationJustLooped()$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:bool
animationLength	dependencies/spriter/spriterengine/animation/animation.h	/^		real animationLength;$/;"	m	class:SpriterEngine::Animation	typeref:typename:real
animationLength	dependencies/spriter/spriterengine/animation/animationinstance.h	/^		real animationLength;$/;"	m	class:SpriterEngine::AnimationInstance	typeref:typename:real
animationNameMap	dependencies/spriter/spriterengine/entity/entityinstancedata.h	/^		AnimationInstanceNameMap animationNameMap;$/;"	m	class:SpriterEngine::EntityInstanceData	typeref:typename:AnimationInstanceNameMap
animations	dependencies/spriter/spriterengine/entity/entity.h	/^		AnimationVector animations;$/;"	m	class:SpriterEngine::Entity	typeref:typename:AnimationVector
animations	dependencies/spriter/spriterengine/entity/entityinstancedata.h	/^		AnimationInstanceIdMap animations;$/;"	m	class:SpriterEngine::EntityInstanceData	typeref:typename:AnimationInstanceIdMap
antialiasingLevel	dependencies/sfml/include/SFML/Window/ContextSettings.hpp	/^    unsigned int antialiasingLevel; \/\/\/< Level of antialiasing$/;"	m	struct:sf::ContextSettings	typeref:typename:unsigned int
appendEntity	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::appendEntity(SpriterModel * model, Entity * entity, ObjectFactory * object/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
appendEntity	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::appendEntity(SpriterModel * model, std::string entityName)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
appendEntityToInstanceByName	dependencies/spriter/spriterengine/model/spritermodel.cpp	/^	void SpriterModel::appendEntityToInstanceByName(EntityInstance *entityInstance, std::string ent/;"	f	class:SpriterEngine::SpriterModel	typeref:typename:void
appendFile	dependencies/spriter/spriterengine/loading/loadinghelpers.cpp	/^	void FileFlattener::appendFile()$/;"	f	class:SpriterEngine::FileFlattener	typeref:typename:void
appendFolder	dependencies/spriter/spriterengine/loading/loadinghelpers.cpp	/^	void FileFlattener::appendFolder()$/;"	f	class:SpriterEngine::FileFlattener	typeref:typename:void
appendMapInstruction	dependencies/spriter/spriterengine/charactermap/charactermap.cpp	/^	void CharacterMap::appendMapInstruction(int initialFileToReplaceIndex, File *replacementFile)$/;"	f	class:SpriterEngine::CharacterMap	typeref:typename:void
append_exponent	dependencies/nlohmann/json.hpp	/^inline char* append_exponent(char* buf, int e)$/;"	f	namespace:nlohmann::detail::dtoa_impl	typeref:typename:char *
append_exponent	dependencies/spriter/spriterengine/user_override/json.hpp	/^			inline char* append_exponent(char* buf, int e) {$/;"	f	namespace:nlohmann::detail::dtoa_impl	typeref:typename:char *
appliedCharacterMaps	dependencies/spriter/spriterengine/entity/entityinstance.h	/^		StringList appliedCharacterMaps;$/;"	m	class:SpriterEngine::EntityInstance	typeref:typename:StringList
applyCharacterMap	dependencies/spriter/spriterengine/charactermap/charactermap.cpp	/^	void CharacterMap::applyCharacterMap(FileReferenceVector *mappedFiles)$/;"	f	class:SpriterEngine::CharacterMap	typeref:typename:void
applyCharacterMap	dependencies/spriter/spriterengine/entity/entity.cpp	/^	void Entity::applyCharacterMap(std::string mapName, FileReferenceVector *mappedFiles)$/;"	f	class:SpriterEngine::Entity	typeref:typename:void
applyCharacterMap	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::applyCharacterMap(const std::string &mapName)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
applyMapInstruction	dependencies/spriter/spriterengine/charactermap/charactermapinstruction.cpp	/^	void CharacterMapInstruction::applyMapInstruction(FileReferenceVector *mappedFiles)$/;"	f	class:SpriterEngine::CharacterMapInstruction	typeref:typename:void
array	dependencies/nlohmann/json.hpp	/^        array_t* array;$/;"	m	union:nlohmann::basic_json::json_value	typeref:typename:array_t *
array	dependencies/nlohmann/json.hpp	/^    array,            \/\/\/< array (ordered collection of values)$/;"	e	enum:nlohmann::detail::value_t
array	dependencies/nlohmann/json.hpp	/^    static basic_json array(initializer_list_t init = {})$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
array	dependencies/sfml/include/SFML/Graphics/Glsl.inl	/^    float array[Columns * Rows]; \/\/\/< Array holding matrix data$/;"	m	struct:Matrix	typeref:typename:float[]	file:
array	dependencies/spriter/spriterengine/user_override/json.hpp	/^				array_t* array;$/;"	m	union:nlohmann::basic_json::json_value	typeref:typename:array_t *
array	dependencies/spriter/spriterengine/user_override/json.hpp	/^			array,            \/\/\/< array (ordered collection of values)$/;"	e	enum:nlohmann::detail::value_t
array	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static basic_json array(initializer_list_t init = {}) {$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
array_end	dependencies/nlohmann/json.hpp	/^        array_end,$/;"	e	enum:nlohmann::detail::parser::parse_event_t
array_end	dependencies/spriter/spriterengine/user_override/json.hpp	/^				array_end,$/;"	e	enum:nlohmann::detail::parser::parse_event_t
array_index	dependencies/nlohmann/json.hpp	/^        std::size_t array_index = 0;$/;"	m	class:nlohmann::detail::iteration_proxy::iteration_proxy_internal	typeref:typename:std::size_t
array_index	dependencies/nlohmann/json.hpp	/^    static int array_index(const std::string& s)$/;"	f	class:nlohmann::json_pointer	typeref:typename:int
array_index	dependencies/spriter/spriterengine/user_override/json.hpp	/^				std::size_t array_index = 0;$/;"	m	class:nlohmann::detail::iteration_proxy::iteration_proxy_internal	typeref:typename:std::size_t
array_index	dependencies/spriter/spriterengine/user_override/json.hpp	/^		static int array_index(const std::string& s) {$/;"	f	class:nlohmann::json_pointer	typeref:typename:int
array_iterator	dependencies/nlohmann/json.hpp	/^    typename BasicJsonType::array_t::iterator array_iterator {};$/;"	m	struct:nlohmann::detail::internal_iterator	typeref:typename:BasicJsonType::array_t::iterator
array_iterator	dependencies/spriter/spriterengine/user_override/json.hpp	/^			typename BasicJsonType::array_t::iterator array_iterator{};$/;"	m	struct:nlohmann::detail::internal_iterator	typeref:typename:BasicJsonType::array_t::iterator
array_start	dependencies/nlohmann/json.hpp	/^        array_start,$/;"	e	enum:nlohmann::detail::parser::parse_event_t
array_start	dependencies/spriter/spriterengine/user_override/json.hpp	/^				array_start,$/;"	e	enum:nlohmann::detail::parser::parse_event_t
array_t	dependencies/nlohmann/json.hpp	/^    using array_t = ArrayType<basic_json, AllocatorType<basic_json>>;$/;"	t	class:nlohmann::basic_json	typeref:typename:ArrayType<basic_json,AllocatorType<basic_json>>
array_t	dependencies/nlohmann/json.hpp	/^    using array_t = typename BasicJsonType::array_t;$/;"	t	class:nlohmann::detail::iter_impl	typeref:typename:BasicJsonType::array_t
array_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using array_t = ArrayType<basic_json, AllocatorType<basic_json>>;$/;"	t	class:nlohmann::basic_json	typeref:typename:ArrayType<basic_json,AllocatorType<basic_json>>
array_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using array_t = typename BasicJsonType::array_t;$/;"	t	class:nlohmann::detail::iter_impl	typeref:typename:BasicJsonType::array_t
assert_invariant	dependencies/nlohmann/json.hpp	/^    void assert_invariant() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:void
assert_invariant	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void assert_invariant() const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:void
assets	include/GameData.h	/^	std::unordered_map<std::string, BaseAsset*> assets;$/;"	m	class:GameData	typeref:typename:std::unordered_map<std::string,BaseAsset * >
at	dependencies/nlohmann/json.hpp	/^    const_reference at(const json_pointer& ptr) const$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reference
at	dependencies/nlohmann/json.hpp	/^    const_reference at(const typename object_t::key_type& key) const$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reference
at	dependencies/nlohmann/json.hpp	/^    const_reference at(size_type idx) const$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reference
at	dependencies/nlohmann/json.hpp	/^    reference at(const json_pointer& ptr)$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
at	dependencies/nlohmann/json.hpp	/^    reference at(const typename object_t::key_type& key)$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
at	dependencies/nlohmann/json.hpp	/^    reference at(size_type idx)$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
at	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const_reference at(const json_pointer& ptr) const {$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reference
at	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const_reference at(const typename object_t::key_type& key) const {$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reference
at	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const_reference at(size_type idx) const {$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reference
at	dependencies/spriter/spriterengine/user_override/json.hpp	/^			reference at(const json_pointer& ptr) {$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
at	dependencies/spriter/spriterengine/user_override/json.hpp	/^			reference at(const typename object_t::key_type& key) {$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
at	dependencies/spriter/spriterengine/user_override/json.hpp	/^			reference at(size_type idx) {$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
atlasFile	dependencies/spriter/spriterengine/file/file.cpp	/^	AtlasFile *File::atlasFile()$/;"	f	class:SpriterEngine::File	typeref:typename:AtlasFile *
atlasFile	dependencies/spriter/spriterengine/override/atlasfile.cpp	/^	AtlasFile *AtlasFile::atlasFile()$/;"	f	class:SpriterEngine::AtlasFile	typeref:typename:AtlasFile *
atlasFile	dependencies/spriter/spriterengine/override/imagefile.h	/^		AtlasFile* atlasFile;$/;"	m	class:SpriterEngine::ImageFile	typeref:typename:AtlasFile *
atlasFiles	dependencies/spriter/spriterengine/model/spritermodel.h	/^		FileVector atlasFiles;$/;"	m	class:SpriterEngine::SpriterModel	typeref:typename:FileVector
atlasFrameData	dependencies/spriter/spriterengine/override/imagefile.h	/^		atlasframedata atlasFrameData;$/;"	m	class:SpriterEngine::ImageFile	typeref:typename:atlasframedata
atlasdata	dependencies/spriter/spriterengine/global/atlas.h	/^                atlasdata(real initialX = 0, real initialY = 0, real initialW = 0, real initialH/;"	f	struct:SpriterEngine::atlasdata
atlasdata	dependencies/spriter/spriterengine/global/atlas.h	/^        struct atlasdata$/;"	s	namespace:SpriterEngine
atlasframedata	dependencies/spriter/spriterengine/global/atlas.h	/^	struct atlasframedata {$/;"	s	namespace:SpriterEngine
atlasframedata	dependencies/spriter/spriterengine/global/atlas.h	/^                atlasframedata(point initialFrameSize = point(), point initialFramePosition = po/;"	f	struct:SpriterEngine::atlasframedata
attributeFlags	dependencies/sfml/include/SFML/Window/ContextSettings.hpp	/^    Uint32       attributeFlags;    \/\/\/< The attribute flags to create the context with$/;"	m	struct:sf::ContextSettings	typeref:typename:Uint32
axis	dependencies/sfml/include/SFML/Window/Event.hpp	/^        Joystick::Axis axis;       \/\/\/< Axis on which the joystick moved$/;"	m	struct:sf::Event::JoystickMoveEvent	typeref:typename:Joystick::Axis
b	dependencies/sfml/include/SFML/Graphics/Color.hpp	/^    Uint8 b; \/\/\/< Blue component$/;"	m	class:sf::Color	typeref:typename:Uint8
back	dependencies/nlohmann/json.hpp	/^    const_reference back() const$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reference
back	dependencies/nlohmann/json.hpp	/^    reference back()$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
back	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const_reference back() const {$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reference
back	dependencies/spriter/spriterengine/user_override/json.hpp	/^			reference back() {$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
base_iterator	dependencies/nlohmann/json.hpp	/^    using base_iterator = std::reverse_iterator<Base>;$/;"	t	class:nlohmann::detail::json_reverse_iterator	typeref:typename:std::reverse_iterator<Base>
base_iterator	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using base_iterator = std::reverse_iterator<Base>;$/;"	t	class:nlohmann::detail::json_reverse_iterator	typeref:typename:std::reverse_iterator<Base>
basic_json	dependencies/nlohmann/json.hpp	/^    basic_json(InputIT first, InputIT last)$/;"	f	class:nlohmann::basic_json
basic_json	dependencies/nlohmann/json.hpp	/^    basic_json(basic_json&& other) noexcept$/;"	f	class:nlohmann::basic_json
basic_json	dependencies/nlohmann/json.hpp	/^    basic_json(const BasicJsonType& val)$/;"	f	class:nlohmann::basic_json
basic_json	dependencies/nlohmann/json.hpp	/^    basic_json(const basic_json& other)$/;"	f	class:nlohmann::basic_json
basic_json	dependencies/nlohmann/json.hpp	/^    basic_json(const detail::json_ref<basic_json>& ref)$/;"	f	class:nlohmann::basic_json
basic_json	dependencies/nlohmann/json.hpp	/^    basic_json(const value_t v)$/;"	f	class:nlohmann::basic_json
basic_json	dependencies/nlohmann/json.hpp	/^    basic_json(initializer_list_t init,$/;"	f	class:nlohmann::basic_json
basic_json	dependencies/nlohmann/json.hpp	/^    basic_json(size_type cnt, const basic_json& val)$/;"	f	class:nlohmann::basic_json
basic_json	dependencies/nlohmann/json.hpp	/^    basic_json(std::nullptr_t = nullptr) noexcept$/;"	f	class:nlohmann::basic_json
basic_json	dependencies/nlohmann/json.hpp	/^class basic_json$/;"	c	namespace:nlohmann
basic_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^				basic_json(InputIT first, InputIT last) {$/;"	f	class:nlohmann::basic_json
basic_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^				basic_json(const BasicJsonType& val) {$/;"	f	class:nlohmann::basic_json
basic_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^			basic_json(basic_json&& other) noexcept$/;"	f	class:nlohmann::basic_json
basic_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^			basic_json(const basic_json& other)$/;"	f	class:nlohmann::basic_json
basic_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^			basic_json(const detail::json_ref<basic_json>& ref)$/;"	f	class:nlohmann::basic_json
basic_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^			basic_json(const value_t v)$/;"	f	class:nlohmann::basic_json
basic_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^			basic_json(initializer_list_t init,$/;"	f	class:nlohmann::basic_json
basic_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^			basic_json(size_type cnt, const basic_json& val)$/;"	f	class:nlohmann::basic_json
basic_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^			basic_json(std::nullptr_t = nullptr) noexcept$/;"	f	class:nlohmann::basic_json
basic_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^		class basic_json {$/;"	c	namespace:nlohmann
basic_json_t	dependencies/nlohmann/json.hpp	/^    using basic_json_t = NLOHMANN_BASIC_JSON_TPL;$/;"	t	class:nlohmann::basic_json	typeref:typename:NLOHMANN_BASIC_JSON_TPL
basic_json_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using basic_json_t = NLOHMANN_BASIC_JSON_TPL;$/;"	t	class:nlohmann::basic_json	typeref:typename:NLOHMANN_BASIC_JSON_TPL
begin	dependencies/nlohmann/json.hpp	/^    const_iterator begin() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:const_iterator
begin	dependencies/nlohmann/json.hpp	/^    iteration_proxy_internal begin() noexcept$/;"	f	class:nlohmann::detail::iteration_proxy	typeref:typename:iteration_proxy_internal
begin	dependencies/nlohmann/json.hpp	/^    iterator begin() noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:iterator
begin	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const_iterator begin() const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:const_iterator
begin	dependencies/spriter/spriterengine/user_override/json.hpp	/^			iteration_proxy_internal begin() noexcept {$/;"	f	class:nlohmann::detail::iteration_proxy	typeref:typename:iteration_proxy_internal
begin	dependencies/spriter/spriterengine/user_override/json.hpp	/^			iterator begin() noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:iterator
begin_array	dependencies/nlohmann/json.hpp	/^        begin_array,      \/\/\/< the character for array begin `[`$/;"	e	enum:nlohmann::detail::lexer::token_type
begin_array	dependencies/spriter/spriterengine/user_override/json.hpp	/^				begin_array,      \/\/\/< the character for array begin `[`$/;"	e	enum:nlohmann::detail::lexer::token_type
begin_object	dependencies/nlohmann/json.hpp	/^        begin_object,     \/\/\/< the character for object begin `{`$/;"	e	enum:nlohmann::detail::lexer::token_type
begin_object	dependencies/spriter/spriterengine/user_override/json.hpp	/^				begin_object,     \/\/\/< the character for object begin `{`$/;"	e	enum:nlohmann::detail::lexer::token_type
begin_value	dependencies/nlohmann/json.hpp	/^    static constexpr difference_type begin_value = 0;$/;"	m	class:nlohmann::detail::primitive_iterator_t	typeref:typename:difference_type
begin_value	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static constexpr difference_type begin_value = 0;$/;"	m	class:nlohmann::detail::primitive_iterator_t	typeref:typename:difference_type
binarySearch	include/Helpers.h	/^	inline int binarySearch(const std::vector<T>& v, const T& target, Comparer1 equals, Comparer2 l/;"	f	namespace:Helpers	typeref:typename:int
binary_reader	dependencies/nlohmann/json.hpp	/^    explicit binary_reader(input_adapter_t adapter) : ia(std::move(adapter))$/;"	f	class:nlohmann::detail::binary_reader
binary_reader	dependencies/nlohmann/json.hpp	/^    using binary_reader = ::nlohmann::detail::binary_reader<basic_json>;$/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::binary_reader<basic_json>
binary_reader	dependencies/nlohmann/json.hpp	/^class binary_reader$/;"	c	namespace:nlohmann::detail
binary_reader	dependencies/spriter/spriterengine/user_override/json.hpp	/^			explicit binary_reader(input_adapter_t adapter) : ia(std::move(adapter)) {$/;"	f	class:nlohmann::detail::binary_reader
binary_reader	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using binary_reader = ::nlohmann::detail::binary_reader<basic_json>;$/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::binary_reader<basic_json>
binary_reader	dependencies/spriter/spriterengine/user_override/json.hpp	/^		class binary_reader {$/;"	c	namespace:nlohmann::detail
binary_writer	dependencies/nlohmann/json.hpp	/^    explicit binary_writer(output_adapter_t<CharType> adapter) : oa(adapter)$/;"	f	class:nlohmann::detail::binary_writer
binary_writer	dependencies/nlohmann/json.hpp	/^    template<typename CharType> using binary_writer = ::nlohmann::detail::binary_writer<basic_js/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::binary_writer<basic_json,CharType>
binary_writer	dependencies/nlohmann/json.hpp	/^class binary_writer$/;"	c	namespace:nlohmann::detail
binary_writer	dependencies/spriter/spriterengine/user_override/json.hpp	/^			explicit binary_writer(output_adapter_t<CharType> adapter) : oa(adapter) {$/;"	f	class:nlohmann::detail::binary_writer
binary_writer	dependencies/spriter/spriterengine/user_override/json.hpp	/^			template<typename CharType> using binary_writer = ::nlohmann::detail::binary_writer<basic_jso/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::binary_writer<basic_json,CharType>
binary_writer	dependencies/spriter/spriterengine/user_override/json.hpp	/^		class binary_writer {$/;"	c	namespace:nlohmann::detail
bitsPerPixel	dependencies/sfml/include/SFML/Window/VideoMode.hpp	/^    unsigned int bitsPerPixel; \/\/\/< Video mode pixel depth, in bits per pixels$/;"	m	class:sf::VideoMode	typeref:typename:unsigned int
bits_type	dependencies/nlohmann/json.hpp	/^    using bits_type = typename std::conditional< kPrecision == 24, uint32_t, uint64_t >::type;$/;"	t	function:nlohmann::detail::dtoa_impl::compute_boundaries	typeref:typename:std::conditional<kPrecision==24,uint32_t,uint64_t>::type
bits_type	dependencies/spriter/spriterengine/user_override/json.hpp	/^				using bits_type = typename std::conditional< kPrecision == 24, uint32_t, uint64_t >::type;$/;"	t	function:nlohmann::detail::dtoa_impl::compute_boundaries	typeref:typename:std::conditional<kPrecision==24,uint32_t,uint64_t>::type
blend	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::blend(real blendRatio, real timeRatio)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
blend	dependencies/spriter/spriterengine/timeline/timelinekey.cpp	/^	void TimelineKey::blend(real currentTime, real blendRatio, UniversalObjectInterface *resultObje/;"	f	class:SpriterEngine::TimelineKey	typeref:typename:void
blendCurrentTime	dependencies/spriter/spriterengine/entity/entityinstance.h	/^		real blendCurrentTime;$/;"	m	class:SpriterEngine::EntityInstance	typeref:typename:real
blendCurrentTimelineKey	dependencies/spriter/spriterengine/timeline/timelineinstance.cpp	/^	void TimelineInstance::blendCurrentTimelineKey(real newTime, real blendRatio)$/;"	f	class:SpriterEngine::TimelineInstance	typeref:typename:void
blendCurrentTimelineKeys	dependencies/spriter/spriterengine/animation/animationinstance.cpp	/^	void AnimationInstance::blendCurrentTimelineKeys(real newTime, real blendRatio)$/;"	f	class:SpriterEngine::AnimationInstance	typeref:typename:void
blendKey	dependencies/spriter/spriterengine/objectref/objectrefinstance.cpp	/^	void ObjectRefInstance::blendKey(real currentTime, real blendRatio)$/;"	f	class:SpriterEngine::ObjectRefInstance	typeref:typename:void
blendMode	dependencies/sfml/include/SFML/Graphics/RenderStates.hpp	/^    BlendMode      blendMode; \/\/\/< Blending mode$/;"	m	class:sf::RenderStates	typeref:typename:BlendMode
blendRefKeys	dependencies/spriter/spriterengine/animation/animationinstance.cpp	/^	void AnimationInstance::blendRefKeys(real newTime, real blendRatio)$/;"	f	class:SpriterEngine::AnimationInstance	typeref:typename:void
blendRefKeys	dependencies/spriter/spriterengine/animation/mainlinekeyinstance.cpp	/^	void MainlineKeyInstance::blendRefKeys(real currentTime, real blendRatio)$/;"	f	class:SpriterEngine::MainlineKeyInstance	typeref:typename:void
blendTotalTime	dependencies/spriter/spriterengine/entity/entityinstance.h	/^		real blendTotalTime;$/;"	m	class:SpriterEngine::EntityInstance	typeref:typename:real
blendedAnimation	dependencies/spriter/spriterengine/entity/entityinstance.h	/^		AnimationInstance *blendedAnimation;$/;"	m	class:SpriterEngine::EntityInstance	typeref:typename:AnimationInstance *
boneRefs	dependencies/spriter/spriterengine/animation/mainlinekey.h	/^		RefVector boneRefs;$/;"	m	class:SpriterEngine::MainlineKey	typeref:typename:RefVector
boneShape	dependencies/spriter/spriterengine/user_override/sfmlboneinstanceinfo.h	/^		sf::ConvexShape boneShape;$/;"	m	class:SpriterEngine::SfmlBoneInstanceInfo	typeref:typename:sf::ConvexShape
boolean	dependencies/nlohmann/json.hpp	/^        boolean_t boolean;$/;"	m	union:nlohmann::basic_json::json_value	typeref:typename:boolean_t
boolean	dependencies/nlohmann/json.hpp	/^    boolean,          \/\/\/< boolean value$/;"	e	enum:nlohmann::detail::value_t
boolean	dependencies/spriter/spriterengine/user_override/json.hpp	/^				boolean_t boolean;$/;"	m	union:nlohmann::basic_json::json_value	typeref:typename:boolean_t
boolean	dependencies/spriter/spriterengine/user_override/json.hpp	/^			boolean,          \/\/\/< boolean value$/;"	e	enum:nlohmann::detail::value_t
boolean_t	dependencies/nlohmann/json.hpp	/^    using boolean_t = BooleanType;$/;"	t	class:nlohmann::basic_json	typeref:typename:BooleanType
boolean_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using boolean_t = BooleanType;$/;"	t	class:nlohmann::basic_json	typeref:typename:BooleanType
boundaries	dependencies/nlohmann/json.hpp	/^struct boundaries$/;"	s	namespace:nlohmann::detail::dtoa_impl
boundaries	dependencies/spriter/spriterengine/user_override/json.hpp	/^			struct boundaries {$/;"	s	namespace:nlohmann::detail::dtoa_impl
bounds	dependencies/sfml/include/SFML/Graphics/Glyph.hpp	/^    FloatRect bounds;      \/\/\/< Bounding rectangle of the glyph, in coordinates relative to t/;"	m	class:sf::Glyph	typeref:typename:FloatRect
buffer	dependencies/spriter/spriterengine/user_override/sfmlsoundfile.h	/^		sf::SoundBuffer buffer;$/;"	m	class:SpriterEngine::SfmlSoundFile	typeref:typename:sf::SoundBuffer
button	dependencies/sfml/include/SFML/Window/Event.hpp	/^        Mouse::Button button; \/\/\/< Code of the button that has been pressed$/;"	m	struct:sf::Event::MouseButtonEvent	typeref:typename:Mouse::Button
button	dependencies/sfml/include/SFML/Window/Event.hpp	/^        unsigned int button;     \/\/\/< Index of the button that has been pressed (in range [0 /;"	m	struct:sf::Event::JoystickButtonEvent	typeref:typename:unsigned int
byte	dependencies/nlohmann/json.hpp	/^    const std::size_t byte;$/;"	m	class:nlohmann::detail::parse_error	typeref:typename:const std::size_t
byte	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const std::size_t byte;$/;"	m	class:nlohmann::detail::parse_error	typeref:typename:const std::size_t
c0	dependencies/spriter/spriterengine/timeinfo/cubiceasingcurve.h	/^		real c0;$/;"	m	class:SpriterEngine::CubicEasingCurve	typeref:typename:real
c0	dependencies/spriter/spriterengine/timeinfo/quadraticeasingcurve.h	/^		real c0;$/;"	m	class:SpriterEngine::QuadraticEasingCurve	typeref:typename:real
c0	dependencies/spriter/spriterengine/timeinfo/quarticeasingcurve.h	/^		real c0;$/;"	m	class:SpriterEngine::QuarticEasingCurve	typeref:typename:real
c0	dependencies/spriter/spriterengine/timeinfo/quinticeasingcurve.h	/^		real c0;$/;"	m	class:SpriterEngine::QuinticEasingCurve	typeref:typename:real
c1	dependencies/spriter/spriterengine/timeinfo/cubiceasingcurve.h	/^		real c1;$/;"	m	class:SpriterEngine::CubicEasingCurve	typeref:typename:real
c1	dependencies/spriter/spriterengine/timeinfo/quarticeasingcurve.h	/^		real c1;$/;"	m	class:SpriterEngine::QuarticEasingCurve	typeref:typename:real
c1	dependencies/spriter/spriterengine/timeinfo/quinticeasingcurve.h	/^		real c1;$/;"	m	class:SpriterEngine::QuinticEasingCurve	typeref:typename:real
c2	dependencies/spriter/spriterengine/timeinfo/quarticeasingcurve.h	/^		real c2;$/;"	m	class:SpriterEngine::QuarticEasingCurve	typeref:typename:real
c2	dependencies/spriter/spriterengine/timeinfo/quinticeasingcurve.h	/^		real c2;$/;"	m	class:SpriterEngine::QuinticEasingCurve	typeref:typename:real
c3	dependencies/spriter/spriterengine/timeinfo/quinticeasingcurve.h	/^		real c3;$/;"	m	class:SpriterEngine::QuinticEasingCurve	typeref:typename:real
cached_power	dependencies/nlohmann/json.hpp	/^struct cached_power \/\/ c = f * 2^e ~= 10^k$/;"	s	namespace:nlohmann::detail::dtoa_impl
cached_power	dependencies/spriter/spriterengine/user_override/json.hpp	/^			struct cached_power \/\/ c = f * 2^e ~= 10^k$/;"	s	namespace:nlohmann::detail::dtoa_impl
call	dependencies/nlohmann/json.hpp	/^    auto call(BasicJsonType& j, T&& val, priority_tag<1> \/*unused*\/) const noexcept(noexcept(t/;"	f	struct:nlohmann::detail::to_json_fn	typeref:typename:auto
call	dependencies/nlohmann/json.hpp	/^    auto call(const BasicJsonType& j, T& val, priority_tag<1> \/*unused*\/) const$/;"	f	struct:nlohmann::detail::from_json_fn	typeref:typename:auto
call	dependencies/nlohmann/json.hpp	/^    void call(BasicJsonType& \/*unused*\/, T&& \/*unused*\/, priority_tag<0> \/*unused*\/) const/;"	f	struct:nlohmann::detail::to_json_fn	typeref:typename:void
call	dependencies/nlohmann/json.hpp	/^    void call(const BasicJsonType& \/*unused*\/, T& \/*unused*\/, priority_tag<0> \/*unused*\/) /;"	f	struct:nlohmann::detail::from_json_fn	typeref:typename:void
call	dependencies/spriter/spriterengine/user_override/json.hpp	/^			auto call(BasicJsonType& j, T&& val, priority_tag<1> \/*unused*\/) const noexcept(noexcept(to/;"	f	struct:nlohmann::detail::to_json_fn	typeref:typename:auto
call	dependencies/spriter/spriterengine/user_override/json.hpp	/^			auto call(const BasicJsonType& j, T& val, priority_tag<1> \/*unused*\/) const$/;"	f	struct:nlohmann::detail::from_json_fn	typeref:typename:auto
call	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void call(BasicJsonType& \/*unused*\/, T&& \/*unused*\/, priority_tag<0> \/*unused*\/) const /;"	f	struct:nlohmann::detail::to_json_fn	typeref:typename:void
call	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void call(const BasicJsonType& \/*unused*\/, T& \/*unused*\/, priority_tag<0> \/*unused*\/) c/;"	f	struct:nlohmann::detail::from_json_fn	typeref:typename:void
callback	dependencies/nlohmann/json.hpp	/^    const parser_callback_t callback = nullptr;$/;"	m	class:nlohmann::detail::parser	typeref:typename:const parser_callback_t
callback	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const parser_callback_t callback = nullptr;$/;"	m	class:nlohmann::detail::parser	typeref:typename:const parser_callback_t
cbegin	dependencies/nlohmann/json.hpp	/^    const_iterator cbegin() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:const_iterator
cbegin	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const_iterator cbegin() const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:const_iterator
cend	dependencies/nlohmann/json.hpp	/^    const_iterator cend() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:const_iterator
cend	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const_iterator cend() const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:const_iterator
changeScene	src/SceneManager.cpp	/^void SceneManager::changeScene(Scene::Type type) {$/;"	f	class:SceneManager	typeref:typename:void
channelCount	dependencies/sfml/include/SFML/Audio/SoundFileReader.hpp	/^        unsigned int channelCount; \/\/\/< Number of channels of the sound$/;"	m	struct:sf::SoundFileReader::Info	typeref:typename:unsigned int
characterMapInterface	dependencies/spriter/spriterengine/entity/entityinstance.h	/^		CharacterMapInterface *characterMapInterface;$/;"	m	class:SpriterEngine::EntityInstance	typeref:typename:CharacterMapInterface *
characterMaps	dependencies/spriter/spriterengine/entity/entity.h	/^		CharacterMapMap characterMaps;$/;"	m	class:SpriterEngine::Entity	typeref:typename:CharacterMapMap
chars_read	dependencies/nlohmann/json.hpp	/^    std::size_t chars_read = 0;$/;"	m	class:nlohmann::detail::binary_reader	typeref:typename:std::size_t
chars_read	dependencies/nlohmann/json.hpp	/^    std::size_t chars_read = 0;$/;"	m	class:nlohmann::detail::lexer	typeref:typename:std::size_t
chars_read	dependencies/spriter/spriterengine/user_override/json.hpp	/^			std::size_t chars_read = 0;$/;"	m	class:nlohmann::detail::binary_reader	typeref:typename:std::size_t
chars_read	dependencies/spriter/spriterengine/user_override/json.hpp	/^			std::size_t chars_read = 0;$/;"	m	class:nlohmann::detail::lexer	typeref:typename:std::size_t
check	dependencies/sfml/include/SFML/Audio/SoundFileFactory.hpp	/^        bool (*check)(InputStream&);$/;"	m	struct:sf::SoundFileFactory::ReaderFactory	typeref:typename:bool (*)(InputStream &)
check	dependencies/sfml/include/SFML/Audio/SoundFileFactory.hpp	/^        bool (*check)(const std::string&);$/;"	m	struct:sf::SoundFileFactory::WriterFactory	typeref:typename:bool (*)(const std::string &)
checkTrigger	dependencies/spriter/spriterengine/timeline/soundtimelineinstance.cpp	/^	void SoundTimelineInstance::checkTrigger(TimelineKey *key, real aTime, real bTime)$/;"	f	class:SpriterEngine::SoundTimelineInstance	typeref:typename:void
checkTrigger	dependencies/spriter/spriterengine/timeline/triggertimelineinstance.cpp	/^	void TriggerTimelineInstance::checkTrigger(TimelineKey *key, real aTime, real bTime)$/;"	f	class:SpriterEngine::TriggerTimelineInstance	typeref:typename:void
childAttributes	dependencies/spriter/spriterengine/override/spriterfileelementwrapper.h	/^		AttributeVector childAttributes;$/;"	m	class:SpriterEngine::SpriterFileElementWrapper	typeref:typename:AttributeVector
childElements	dependencies/spriter/spriterengine/override/spriterfiledocumentwrapper.h	/^		ElementVector childElements;$/;"	m	class:SpriterEngine::SpriterFileDocumentWrapper	typeref:typename:ElementVector
childElements	dependencies/spriter/spriterengine/override/spriterfileelementwrapper.h	/^		ElementVector childElements;$/;"	m	class:SpriterEngine::SpriterFileElementWrapper	typeref:typename:ElementVector
circle	dependencies/spriter/spriterengine/user_override/sfmlpointinstanceinfo.h	/^		sf::CircleShape circle;$/;"	m	class:SpriterEngine::SfmlPointInstanceInfo	typeref:typename:sf::CircleShape
clamp	include/Helpers.h	/^	inline int clamp(int value, int min, int max) {$/;"	f	namespace:Helpers	typeref:typename:int
clear	dependencies/nlohmann/json.hpp	/^    void clear() noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:void
clear	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void clear() noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:void
clone	dependencies/spriter/spriterengine/timeinfo/beziereasingcurve.cpp	/^	EasingCurveInterface * BezierEasingCurve::clone()$/;"	f	class:SpriterEngine::BezierEasingCurve	typeref:typename:EasingCurveInterface *
clone	dependencies/spriter/spriterengine/timeinfo/cubiceasingcurve.cpp	/^	EasingCurveInterface * CubicEasingCurve::clone()$/;"	f	class:SpriterEngine::CubicEasingCurve	typeref:typename:EasingCurveInterface *
clone	dependencies/spriter/spriterengine/timeinfo/instanteasingcurve.cpp	/^	EasingCurveInterface * InstantEasingCurve::clone()$/;"	f	class:SpriterEngine::InstantEasingCurve	typeref:typename:EasingCurveInterface *
clone	dependencies/spriter/spriterengine/timeinfo/lineareasingcurve.cpp	/^	EasingCurveInterface * LinearEasingCurve::clone()$/;"	f	class:SpriterEngine::LinearEasingCurve	typeref:typename:EasingCurveInterface *
clone	dependencies/spriter/spriterengine/timeinfo/quadraticeasingcurve.cpp	/^	EasingCurveInterface * QuadraticEasingCurve::clone()$/;"	f	class:SpriterEngine::QuadraticEasingCurve	typeref:typename:EasingCurveInterface *
clone	dependencies/spriter/spriterengine/timeinfo/quarticeasingcurve.cpp	/^	EasingCurveInterface * QuarticEasingCurve::clone()$/;"	f	class:SpriterEngine::QuarticEasingCurve	typeref:typename:EasingCurveInterface *
clone	dependencies/spriter/spriterengine/timeinfo/quinticeasingcurve.cpp	/^	EasingCurveInterface * QuinticEasingCurve::clone()$/;"	f	class:SpriterEngine::QuinticEasingCurve	typeref:typename:EasingCurveInterface *
cloneWithNewTimes	dependencies/spriter/spriterengine/timeinfo/timeinfo.cpp	/^	TimeInfo * TimeInfo::cloneWithNewTimes(real initialTime, real initialNextTime)$/;"	f	class:SpriterEngine::TimeInfo	typeref:typename:TimeInfo *
code	dependencies/sfml/include/SFML/Window/Event.hpp	/^        Keyboard::Key code;    \/\/\/< Code of the key that has been pressed$/;"	m	struct:sf::Event::KeyEvent	typeref:typename:Keyboard::Key
color	dependencies/sfml/include/SFML/Graphics/Vertex.hpp	/^    Color     color;     \/\/\/< Color of the vertex$/;"	m	class:sf::Vertex	typeref:typename:Color
colorDstFactor	dependencies/sfml/include/SFML/Graphics/BlendMode.hpp	/^    Factor   colorDstFactor; \/\/\/< Destination blending factor for the color channels$/;"	m	struct:sf::BlendMode	typeref:typename:Factor
colorEquation	dependencies/sfml/include/SFML/Graphics/BlendMode.hpp	/^    Equation colorEquation;  \/\/\/< Blending equation for the color channels$/;"	m	struct:sf::BlendMode	typeref:typename:Equation
colorSrcFactor	dependencies/sfml/include/SFML/Graphics/BlendMode.hpp	/^    Factor   colorSrcFactor; \/\/\/< Source blending factor for the color channels$/;"	m	struct:sf::BlendMode	typeref:typename:Factor
compute_boundaries	dependencies/nlohmann/json.hpp	/^boundaries compute_boundaries(FloatType value)$/;"	f	namespace:nlohmann::detail::dtoa_impl	typeref:typename:boundaries
compute_boundaries	dependencies/spriter/spriterengine/user_override/json.hpp	/^			boundaries compute_boundaries(FloatType value) {$/;"	f	namespace:nlohmann::detail::dtoa_impl	typeref:typename:boundaries
conjunction	dependencies/nlohmann/json.hpp	/^struct conjunction<B1, Bn...> : std::conditional<bool(B1::value), conjunction<Bn...>, B1>::type /;"	s	namespace:nlohmann::detail
conjunction	dependencies/nlohmann/json.hpp	/^template<class B1> struct conjunction<B1> : B1 {};$/;"	s	namespace:nlohmann::detail
conjunction	dependencies/nlohmann/json.hpp	/^template<class...> struct conjunction : std::true_type {};$/;"	s	namespace:nlohmann::detail
conjunction	dependencies/spriter/spriterengine/user_override/json.hpp	/^		struct conjunction<B1, Bn...> : std::conditional<bool(B1::value), conjunction<Bn...>, B1>::typ/;"	s	namespace:nlohmann::detail
conjunction	dependencies/spriter/spriterengine/user_override/json.hpp	/^		template<class B1> struct conjunction<B1> : B1 {};$/;"	s	namespace:nlohmann::detail
conjunction	dependencies/spriter/spriterengine/user_override/json.hpp	/^		template<class...> struct conjunction : std::true_type {};$/;"	s	namespace:nlohmann::detail
const_iterator	dependencies/nlohmann/json.hpp	/^    using const_iterator = iter_impl<const basic_json>;$/;"	t	class:nlohmann::basic_json	typeref:typename:iter_impl<const basic_json>
const_iterator	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using const_iterator = iter_impl<const basic_json>;$/;"	t	class:nlohmann::basic_json	typeref:typename:iter_impl<const basic_json>
const_pointer	dependencies/nlohmann/json.hpp	/^    using const_pointer = typename std::allocator_traits<allocator_type>::const_pointer;$/;"	t	class:nlohmann::basic_json	typeref:typename:std::allocator_traits<allocator_type>::const_pointer
const_pointer	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using const_pointer = typename std::allocator_traits<allocator_type>::const_pointer;$/;"	t	class:nlohmann::basic_json	typeref:typename:std::allocator_traits<allocator_type>::const_pointer
const_reference	dependencies/nlohmann/json.hpp	/^    using const_reference = const value_type&;$/;"	t	class:nlohmann::basic_json	typeref:typename:const value_type &
const_reference	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using const_reference = const value_type&;$/;"	t	class:nlohmann::basic_json	typeref:typename:const value_type &
const_reverse_iterator	dependencies/nlohmann/json.hpp	/^    using const_reverse_iterator = json_reverse_iterator<typename basic_json::const_iterator>;$/;"	t	class:nlohmann::basic_json	typeref:typename:json_reverse_iterator<typename basic_json::const_iterator>
const_reverse_iterator	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using const_reverse_iterator = json_reverse_iterator<typename basic_json::const_iterator>;$/;"	t	class:nlohmann::basic_json	typeref:typename:json_reverse_iterator<typename basic_json::const_iterator>
construct	dependencies/nlohmann/json.hpp	/^    static void construct(BasicJsonType& j, const CompatibleArrayType& arr)$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	dependencies/nlohmann/json.hpp	/^    static void construct(BasicJsonType& j, const CompatibleObjectType& obj)$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	dependencies/nlohmann/json.hpp	/^    static void construct(BasicJsonType& j, const std::valarray<T>& arr)$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	dependencies/nlohmann/json.hpp	/^    static void construct(BasicJsonType& j, const std::vector<bool>& arr)$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	dependencies/nlohmann/json.hpp	/^    static void construct(BasicJsonType& j, const typename BasicJsonType::array_t& arr)$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	dependencies/nlohmann/json.hpp	/^    static void construct(BasicJsonType& j, const typename BasicJsonType::object_t& obj)$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	dependencies/nlohmann/json.hpp	/^    static void construct(BasicJsonType& j, const typename BasicJsonType::string_t& s)$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	dependencies/nlohmann/json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::array_t&& arr)$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	dependencies/nlohmann/json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::boolean_t b) noexcept$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	dependencies/nlohmann/json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::number_float_t val) noexcept$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	dependencies/nlohmann/json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::number_integer_t val) noexce/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	dependencies/nlohmann/json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::number_unsigned_t val) noexc/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	dependencies/nlohmann/json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::object_t&& obj)$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	dependencies/nlohmann/json.hpp	/^    static void construct(BasicJsonType& j, typename BasicJsonType::string_t&& s)$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	dependencies/spriter/spriterengine/user_override/json.hpp	/^				static void construct(BasicJsonType& j, const CompatibleArrayType& arr) {$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	dependencies/spriter/spriterengine/user_override/json.hpp	/^				static void construct(BasicJsonType& j, const CompatibleObjectType& obj) {$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	dependencies/spriter/spriterengine/user_override/json.hpp	/^				static void construct(BasicJsonType& j, const std::valarray<T>& arr) {$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static void construct(BasicJsonType& j, const std::vector<bool>& arr) {$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static void construct(BasicJsonType& j, const typename BasicJsonType::array_t& arr) {$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static void construct(BasicJsonType& j, const typename BasicJsonType::object_t& obj) {$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static void construct(BasicJsonType& j, const typename BasicJsonType::string_t& s) {$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static void construct(BasicJsonType& j, typename BasicJsonType::array_t&& arr) {$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static void construct(BasicJsonType& j, typename BasicJsonType::boolean_t b) noexcept {$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static void construct(BasicJsonType& j, typename BasicJsonType::number_float_t val) noexcept /;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static void construct(BasicJsonType& j, typename BasicJsonType::number_integer_t val) noexcep/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static void construct(BasicJsonType& j, typename BasicJsonType::number_unsigned_t val) noexce/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static void construct(BasicJsonType& j, typename BasicJsonType::object_t&& obj) {$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
construct	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static void construct(BasicJsonType& j, typename BasicJsonType::string_t&& s) {$/;"	f	struct:nlohmann::detail::external_constructor	typeref:typename:void
container	dependencies/nlohmann/json.hpp	/^    typename IteratorType::reference container;$/;"	m	class:nlohmann::detail::iteration_proxy	typeref:typename:IteratorType::reference
container	dependencies/spriter/spriterengine/user_override/json.hpp	/^			typename IteratorType::reference container;$/;"	m	class:nlohmann::detail::iteration_proxy	typeref:typename:IteratorType::reference
contains	dependencies/sfml/include/SFML/Graphics/Rect.inl	/^bool Rect<T>::contains(T x, T y) const$/;"	f	class:Rect	typeref:typename:bool
contains	dependencies/sfml/include/SFML/Graphics/Rect.inl	/^bool Rect<T>::contains(const Vector2<T>& point) const$/;"	f	class:Rect	typeref:typename:bool
control	dependencies/sfml/include/SFML/Window/Event.hpp	/^        bool          control; \/\/\/< Is the Control key pressed?$/;"	m	struct:sf::Event::KeyEvent	typeref:typename:bool
copy	dependencies/nlohmann/json.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:nlohmann::basic_json::patch::patch_operations
copy	dependencies/spriter/spriterengine/user_override/json.hpp	/^				enum class patch_operations { add, remove, replace, move, copy, test, invalid };$/;"	e	enum:nlohmann::basic_json::patch::patch_operations
count	dependencies/nlohmann/json.hpp	/^    size_type count(KeyT&& key) const$/;"	f	class:nlohmann::basic_json	typeref:typename:size_type
count	dependencies/sfml/include/SFML/System/Utf.inl	/^std::size_t Utf<16>::count(In begin, In end)$/;"	f	class:Utf	typeref:typename:std::size_t
count	dependencies/sfml/include/SFML/System/Utf.inl	/^std::size_t Utf<32>::count(In begin, In end)$/;"	f	class:Utf	typeref:typename:std::size_t
count	dependencies/sfml/include/SFML/System/Utf.inl	/^std::size_t Utf<8>::count(In begin, In end)$/;"	f	class:Utf	typeref:typename:std::size_t
count	dependencies/spriter/spriterengine/user_override/json.hpp	/^			size_type count(KeyT&& key) const {$/;"	f	class:nlohmann::basic_json	typeref:typename:size_type
crbegin	dependencies/nlohmann/json.hpp	/^    const_reverse_iterator crbegin() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reverse_iterator
crbegin	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const_reverse_iterator crbegin() const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reverse_iterator
create	dependencies/nlohmann/json.hpp	/^    static T* create(Args&& ... args)$/;"	f	class:nlohmann::basic_json	typeref:typename:T *
create	dependencies/nlohmann/json.hpp	/^    static invalid_iterator create(int id_, const std::string& what_arg)$/;"	f	class:nlohmann::detail::invalid_iterator	typeref:typename:invalid_iterator
create	dependencies/nlohmann/json.hpp	/^    static other_error create(int id_, const std::string& what_arg)$/;"	f	class:nlohmann::detail::other_error	typeref:typename:other_error
create	dependencies/nlohmann/json.hpp	/^    static out_of_range create(int id_, const std::string& what_arg)$/;"	f	class:nlohmann::detail::out_of_range	typeref:typename:out_of_range
create	dependencies/nlohmann/json.hpp	/^    static parse_error create(int id_, std::size_t byte_, const std::string& what_arg)$/;"	f	class:nlohmann::detail::parse_error	typeref:typename:parse_error
create	dependencies/nlohmann/json.hpp	/^    static type_error create(int id_, const std::string& what_arg)$/;"	f	class:nlohmann::detail::type_error	typeref:typename:type_error
create	dependencies/sfml/include/SFML/Audio/SoundFileFactory.hpp	/^        SoundFileReader* (*create)();$/;"	m	struct:sf::SoundFileFactory::ReaderFactory	typeref:typename:SoundFileReader * (*)()
create	dependencies/sfml/include/SFML/Audio/SoundFileFactory.hpp	/^        SoundFileWriter* (*create)();$/;"	m	struct:sf::SoundFileFactory::WriterFactory	typeref:typename:SoundFileWriter * (*)()
create	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static T* create(Args&& ... args) {$/;"	f	class:nlohmann::basic_json	typeref:typename:T *
create	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static invalid_iterator create(int id_, const std::string& what_arg) {$/;"	f	class:nlohmann::detail::invalid_iterator	typeref:typename:invalid_iterator
create	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static other_error create(int id_, const std::string& what_arg) {$/;"	f	class:nlohmann::detail::other_error	typeref:typename:other_error
create	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static out_of_range create(int id_, const std::string& what_arg) {$/;"	f	class:nlohmann::detail::out_of_range	typeref:typename:out_of_range
create	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static parse_error create(int id_, std::size_t byte_, const std::string& what_arg) {$/;"	f	class:nlohmann::detail::parse_error	typeref:typename:parse_error
create	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static type_error create(int id_, const std::string& what_arg) {$/;"	f	class:nlohmann::detail::type_error	typeref:typename:type_error
createReader	dependencies/sfml/include/SFML/Audio/SoundFileFactory.inl	/^    template <typename T> SoundFileReader* createReader() {return new T;}$/;"	f	namespace:sf::priv	typeref:typename:SoundFileReader *
createRedundantFirstKeys	dependencies/spriter/spriterengine/loading/spriterdocumentloader.cpp	/^	bool SpriterDocumentLoader::createRedundantFirstKeys(Animation *animation, Timeline *timeline)$/;"	f	class:SpriterEngine::SpriterDocumentLoader	typeref:typename:bool
createWriter	dependencies/sfml/include/SFML/Audio/SoundFileFactory.inl	/^    template <typename T> SoundFileWriter* createWriter() {return new T;}$/;"	f	namespace:sf::priv	typeref:typename:SoundFileWriter *
crend	dependencies/nlohmann/json.hpp	/^    const_reverse_iterator crend() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reverse_iterator
crend	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const_reverse_iterator crend() const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reverse_iterator
cubic	dependencies/spriter/spriterengine/global/global.h	/^	inline real cubic(real a, real b, real c, real d, real t)$/;"	f	namespace:SpriterEngine	typeref:typename:real
cubicBezierAtTime	dependencies/spriter/spriterengine/timeinfo/beziereasingcurve.cpp	/^	real BezierEasingCurve::cubicBezierAtTime(real t) const$/;"	f	class:SpriterEngine::BezierEasingCurve	typeref:typename:real
current	dependencies/nlohmann/json.hpp	/^    int current = std::char_traits<char>::eof();$/;"	m	class:nlohmann::detail::binary_reader	typeref:typename:int
current	dependencies/nlohmann/json.hpp	/^    std::char_traits<char>::int_type current = std::char_traits<char>::eof();$/;"	m	class:nlohmann::detail::lexer	typeref:typename:std::char_traits<char>::int_type
current	dependencies/spriter/spriterengine/user_override/json.hpp	/^			int current = std::char_traits<char>::eof();$/;"	m	class:nlohmann::detail::binary_reader	typeref:typename:int
current	dependencies/spriter/spriterengine/user_override/json.hpp	/^			std::char_traits<char>::int_type current = std::char_traits<char>::eof();$/;"	m	class:nlohmann::detail::lexer	typeref:typename:std::char_traits<char>::int_type
currentAnimation	dependencies/spriter/spriterengine/entity/entityinstance.h	/^		AnimationInstance *currentAnimation;$/;"	m	class:SpriterEngine::EntityInstance	typeref:typename:AnimationInstance *
currentAnimationName	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	std::string EntityInstance::currentAnimationName()$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:std::string
currentEntity	dependencies/spriter/spriterengine/entity/entityinstance.h	/^		EntityInstanceData *currentEntity;$/;"	m	class:SpriterEngine::EntityInstance	typeref:typename:EntityInstanceData *
currentEntityName	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	std::string EntityInstance::currentEntityName()$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:std::string
currentMainlineKeyIndex	dependencies/spriter/spriterengine/animation/animationinstance.cpp	/^	int AnimationInstance::currentMainlineKeyIndex()$/;"	f	class:SpriterEngine::AnimationInstance	typeref:typename:int
currentMainlineKeyIndex	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	int EntityInstance::currentMainlineKeyIndex()$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:int
currentTime	dependencies/spriter/spriterengine/animation/animationinstance.cpp	/^	real AnimationInstance::currentTime()$/;"	f	class:SpriterEngine::AnimationInstance	typeref:typename:real
cursor	dependencies/nlohmann/json.hpp	/^    const char* cursor;$/;"	m	class:nlohmann::detail::input_buffer_adapter	typeref:typename:const char *
cursor	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const char* cursor;$/;"	m	class:nlohmann::detail::input_buffer_adapter	typeref:typename:const char *
curveTypeNameToType	dependencies/spriter/spriterengine/loading/loadinghelpers.cpp	/^	CurveType curveTypeNameToType(std::string typeName)$/;"	f	namespace:SpriterEngine	typeref:typename:CurveType
data	include/GameData.h	/^		T data;$/;"	m	struct:GameData::Asset	typeref:typename:T
data	include/GameData.h	/^		T* data;$/;"	m	struct:GameData::Asset	typeref:typename:T *
debugCircle	include/GameScene.h	/^	sf::CircleShape debugCircle;$/;"	m	class:GameScene	typeref:typename:sf::CircleShape
decayed	dependencies/nlohmann/json.hpp	/^        using decayed = uncvref_t<T>;$/;"	t	function:nlohmann::detail::from_json_fn::call	typeref:typename:uncvref_t<T>
decayed	dependencies/nlohmann/json.hpp	/^        using decayed = uncvref_t<T>;$/;"	t	function:nlohmann::detail::to_json_fn::call	typeref:typename:uncvref_t<T>
decayed	dependencies/spriter/spriterengine/user_override/json.hpp	/^				using decayed = uncvref_t<T>;$/;"	t	function:nlohmann::detail::from_json_fn::call	typeref:typename:uncvref_t<T>
decayed	dependencies/spriter/spriterengine/user_override/json.hpp	/^				using decayed = uncvref_t<T>;$/;"	t	function:nlohmann::detail::to_json_fn::call	typeref:typename:uncvref_t<T>
decimal_point	dependencies/nlohmann/json.hpp	/^    const char decimal_point = '\\0';$/;"	m	class:nlohmann::detail::serializer	typeref:typename:const char
decimal_point	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const char decimal_point = '\\0';$/;"	m	class:nlohmann::detail::serializer	typeref:typename:const char
decimal_point_char	dependencies/nlohmann/json.hpp	/^    const char decimal_point_char = '.';$/;"	m	class:nlohmann::detail::lexer	typeref:typename:const char
decimal_point_char	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const char decimal_point_char = '.';$/;"	m	class:nlohmann::detail::lexer	typeref:typename:const char
decode	dependencies/nlohmann/json.hpp	/^    static uint8_t decode(uint8_t& state, uint32_t& codep, const uint8_t byte) noexcept$/;"	f	class:nlohmann::detail::serializer	typeref:typename:uint8_t
decode	dependencies/sfml/include/SFML/System/Utf.inl	/^In Utf<16>::decode(In begin, In end, Uint32& output, Uint32 replacement)$/;"	f	class:Utf	typeref:typename:In
decode	dependencies/sfml/include/SFML/System/Utf.inl	/^In Utf<32>::decode(In begin, In \/*end*\/, Uint32& output, Uint32 \/*replacement*\/)$/;"	f	class:Utf	typeref:typename:In
decode	dependencies/sfml/include/SFML/System/Utf.inl	/^In Utf<8>::decode(In begin, In end, Uint32& output, Uint32 replacement)$/;"	f	class:Utf	typeref:typename:In
decode	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static uint8_t decode(uint8_t& state, uint32_t& codep, const uint8_t byte) noexcept {$/;"	f	class:nlohmann::detail::serializer	typeref:typename:uint8_t
decodeAnsi	dependencies/sfml/include/SFML/System/Utf.inl	/^Uint32 Utf<32>::decodeAnsi(In input, const std::locale& locale)$/;"	f	class:Utf	typeref:typename:Uint32
decodeWide	dependencies/sfml/include/SFML/System/Utf.inl	/^Uint32 Utf<32>::decodeWide(In input)$/;"	f	class:Utf	typeref:typename:Uint32
defaultPivot	dependencies/spriter/spriterengine/override/imagefile.h	/^		point defaultPivot;$/;"	m	class:SpriterEngine::ImageFile	typeref:typename:point
defaultValue	dependencies/spriter/spriterengine/variable/variable.h	/^		UniversalObjectInterface *defaultValue;$/;"	m	class:SpriterEngine::Variable	typeref:typename:UniversalObjectInterface *
delta	dependencies/sfml/include/SFML/Window/Event.hpp	/^        float        delta; \/\/\/< Wheel offset (positive is up\/left, negative is down\/right)/;"	m	struct:sf::Event::MouseWheelScrollEvent	typeref:typename:float
delta	dependencies/sfml/include/SFML/Window/Event.hpp	/^        int delta; \/\/\/< Number of ticks the wheel has moved (positive is up, negative is down/;"	m	struct:sf::Event::MouseWheelEvent	typeref:typename:int
depth	dependencies/nlohmann/json.hpp	/^    int depth = 0;$/;"	m	class:nlohmann::detail::parser	typeref:typename:int
depth	dependencies/spriter/spriterengine/user_override/json.hpp	/^			int depth = 0;$/;"	m	class:nlohmann::detail::parser	typeref:typename:int
depthBits	dependencies/sfml/include/SFML/Window/ContextSettings.hpp	/^    unsigned int depthBits;         \/\/\/< Bits of the depth buffer$/;"	m	struct:sf::ContextSettings	typeref:typename:unsigned int
destroy	dependencies/nlohmann/json.hpp	/^        void destroy(value_t t) noexcept$/;"	f	union:nlohmann::basic_json::json_value	typeref:typename:void
destroy	dependencies/spriter/spriterengine/user_override/json.hpp	/^				void destroy(value_t t) noexcept {$/;"	f	union:nlohmann::basic_json::json_value	typeref:typename:void
detail	dependencies/nlohmann/json.hpp	/^namespace detail$/;"	n	namespace:nlohmann
detail	dependencies/spriter/spriterengine/user_override/json.hpp	/^	namespace detail {$/;"	n	namespace:nlohmann
diff	dependencies/nlohmann/json.hpp	/^    static basic_json diff(const basic_json& source, const basic_json& target,$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
diff	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static basic_json diff(const basic_json& source, const basic_json& target,$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
difference_type	dependencies/nlohmann/json.hpp	/^    using difference_type = std::ptrdiff_t;$/;"	t	class:nlohmann::basic_json	typeref:typename:std::ptrdiff_t
difference_type	dependencies/nlohmann/json.hpp	/^    using difference_type = std::ptrdiff_t;$/;"	t	class:nlohmann::detail::json_reverse_iterator	typeref:typename:std::ptrdiff_t
difference_type	dependencies/nlohmann/json.hpp	/^    using difference_type = std::ptrdiff_t;$/;"	t	class:nlohmann::detail::primitive_iterator_t	typeref:typename:std::ptrdiff_t
difference_type	dependencies/nlohmann/json.hpp	/^    using difference_type = typename BasicJsonType::difference_type;$/;"	t	class:nlohmann::detail::iter_impl	typeref:typename:BasicJsonType::difference_type
difference_type	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using difference_type = std::ptrdiff_t;$/;"	t	class:nlohmann::basic_json	typeref:typename:std::ptrdiff_t
difference_type	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using difference_type = std::ptrdiff_t;$/;"	t	class:nlohmann::detail::json_reverse_iterator	typeref:typename:std::ptrdiff_t
difference_type	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using difference_type = std::ptrdiff_t;$/;"	t	class:nlohmann::detail::primitive_iterator_t	typeref:typename:std::ptrdiff_t
difference_type	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using difference_type = typename BasicJsonType::difference_type;$/;"	t	class:nlohmann::detail::iter_impl	typeref:typename:BasicJsonType::difference_type
discarded	dependencies/nlohmann/json.hpp	/^    discarded         \/\/\/< discarded by the the parser callback function$/;"	e	enum:nlohmann::detail::value_t
discarded	dependencies/spriter/spriterengine/user_override/json.hpp	/^			discarded         \/\/\/< discarded by the the parser callback function$/;"	e	enum:nlohmann::detail::value_t
diyfp	dependencies/nlohmann/json.hpp	/^    constexpr diyfp() noexcept : f(0), e(0) {}$/;"	f	struct:nlohmann::detail::dtoa_impl::diyfp
diyfp	dependencies/nlohmann/json.hpp	/^    constexpr diyfp(uint64_t f_, int e_) noexcept : f(f_), e(e_) {}$/;"	f	struct:nlohmann::detail::dtoa_impl::diyfp
diyfp	dependencies/nlohmann/json.hpp	/^struct diyfp \/\/ f * 2^e$/;"	s	namespace:nlohmann::detail::dtoa_impl
diyfp	dependencies/spriter/spriterengine/user_override/json.hpp	/^				constexpr diyfp() noexcept : f(0), e(0) {}$/;"	f	struct:nlohmann::detail::dtoa_impl::diyfp
diyfp	dependencies/spriter/spriterengine/user_override/json.hpp	/^				constexpr diyfp(uint64_t f_, int e_) noexcept : f(f_), e(e_) {}$/;"	f	struct:nlohmann::detail::dtoa_impl::diyfp
diyfp	dependencies/spriter/spriterengine/user_override/json.hpp	/^			struct diyfp \/\/ f * 2^e$/;"	s	namespace:nlohmann::detail::dtoa_impl
dtoa_impl	dependencies/nlohmann/json.hpp	/^namespace dtoa_impl$/;"	n	namespace:nlohmann::detail
dtoa_impl	dependencies/spriter/spriterengine/user_override/json.hpp	/^		namespace dtoa_impl {$/;"	n	namespace:nlohmann::detail
dump	dependencies/nlohmann/json.hpp	/^    string_t dump(const int indent = -1, const char indent_char = ' ',$/;"	f	class:nlohmann::basic_json	typeref:typename:string_t
dump	dependencies/nlohmann/json.hpp	/^    void dump(const BasicJsonType& val, const bool pretty_print,$/;"	f	class:nlohmann::detail::serializer	typeref:typename:void
dump	dependencies/spriter/spriterengine/user_override/json.hpp	/^			string_t dump(const int indent = -1, const char indent_char = ' ',$/;"	f	class:nlohmann::basic_json	typeref:typename:string_t
dump	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void dump(const BasicJsonType& val, const bool pretty_print,$/;"	f	class:nlohmann::detail::serializer	typeref:typename:void
dump_escaped	dependencies/nlohmann/json.hpp	/^    void dump_escaped(const string_t& s, const bool ensure_ascii)$/;"	f	class:nlohmann::detail::serializer	typeref:typename:void
dump_escaped	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void dump_escaped(const string_t& s, const bool ensure_ascii) {$/;"	f	class:nlohmann::detail::serializer	typeref:typename:void
dump_float	dependencies/nlohmann/json.hpp	/^    void dump_float(number_float_t x)$/;"	f	class:nlohmann::detail::serializer	typeref:typename:void
dump_float	dependencies/nlohmann/json.hpp	/^    void dump_float(number_float_t x, std::false_type \/*is_ieee_single_or_double*\/)$/;"	f	class:nlohmann::detail::serializer	typeref:typename:void
dump_float	dependencies/nlohmann/json.hpp	/^    void dump_float(number_float_t x, std::true_type \/*is_ieee_single_or_double*\/)$/;"	f	class:nlohmann::detail::serializer	typeref:typename:void
dump_float	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void dump_float(number_float_t x) {$/;"	f	class:nlohmann::detail::serializer	typeref:typename:void
dump_float	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void dump_float(number_float_t x, std::false_type \/*is_ieee_single_or_double*\/) {$/;"	f	class:nlohmann::detail::serializer	typeref:typename:void
dump_float	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void dump_float(number_float_t x, std::true_type \/*is_ieee_single_or_double*\/) {$/;"	f	class:nlohmann::detail::serializer	typeref:typename:void
dump_integer	dependencies/nlohmann/json.hpp	/^    void dump_integer(NumberType x)$/;"	f	class:nlohmann::detail::serializer	typeref:typename:void
dump_integer	dependencies/spriter/spriterengine/user_override/json.hpp	/^				void dump_integer(NumberType x) {$/;"	f	class:nlohmann::detail::serializer	typeref:typename:void
e	dependencies/nlohmann/json.hpp	/^    int e;$/;"	m	struct:nlohmann::detail::dtoa_impl::cached_power	typeref:typename:int
e	dependencies/nlohmann/json.hpp	/^    int e;$/;"	m	struct:nlohmann::detail::dtoa_impl::diyfp	typeref:typename:int
e	dependencies/spriter/spriterengine/user_override/json.hpp	/^				int e;$/;"	m	struct:nlohmann::detail::dtoa_impl::cached_power	typeref:typename:int
e	dependencies/spriter/spriterengine/user_override/json.hpp	/^				int e;$/;"	m	struct:nlohmann::detail::dtoa_impl::diyfp	typeref:typename:int
easingCurve	dependencies/spriter/spriterengine/timeinfo/timeinfo.h	/^		EasingCurveInterface *easingCurve;$/;"	m	class:SpriterEngine::TimeInfo	typeref:typename:EasingCurveInterface *
emplace	dependencies/nlohmann/json.hpp	/^    std::pair<iterator, bool> emplace(Args&& ... args)$/;"	f	class:nlohmann::basic_json	typeref:typename:std::pair<iterator,bool>
emplace	dependencies/spriter/spriterengine/user_override/json.hpp	/^			std::pair<iterator, bool> emplace(Args&& ... args) {$/;"	f	class:nlohmann::basic_json	typeref:typename:std::pair<iterator,bool>
emplace_back	dependencies/nlohmann/json.hpp	/^    void emplace_back(Args&& ... args)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
emplace_back	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void emplace_back(Args&& ... args) {$/;"	f	class:nlohmann::basic_json	typeref:typename:void
empty	dependencies/nlohmann/json.hpp	/^    bool empty() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
empty	dependencies/spriter/spriterengine/user_override/json.hpp	/^			bool empty() const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
enableDebugBones	dependencies/spriter/spriterengine/global/settings.cpp	/^	bool Settings::enableDebugBones = false;$/;"	m	class:SpriterEngine::Settings	typeref:typename:bool
enableDebugBones	dependencies/spriter/spriterengine/global/settings.h	/^		static bool enableDebugBones;$/;"	m	class:SpriterEngine::Settings	typeref:typename:bool
enable_if_t	dependencies/nlohmann/json.hpp	/^using enable_if_t = typename std::enable_if<B, T>::type;$/;"	t	namespace:nlohmann::detail	typeref:typename:std::enable_if<B,T>::type
enable_if_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^		using enable_if_t = typename std::enable_if<B, T>::type;$/;"	t	namespace:nlohmann::detail	typeref:typename:std::enable_if<B,T>::type
encode	dependencies/sfml/include/SFML/System/Utf.inl	/^Out Utf<16>::encode(Uint32 input, Out output, Uint16 replacement)$/;"	f	class:Utf	typeref:typename:Out
encode	dependencies/sfml/include/SFML/System/Utf.inl	/^Out Utf<32>::encode(Uint32 input, Out output, Uint32 \/*replacement*\/)$/;"	f	class:Utf	typeref:typename:Out
encode	dependencies/sfml/include/SFML/System/Utf.inl	/^Out Utf<8>::encode(Uint32 input, Out output, Uint8 replacement)$/;"	f	class:Utf	typeref:typename:Out
encodeAnsi	dependencies/sfml/include/SFML/System/Utf.inl	/^Out Utf<32>::encodeAnsi(Uint32 codepoint, Out output, char replacement, const std::locale& local/;"	f	class:Utf	typeref:typename:Out
encodeWide	dependencies/sfml/include/SFML/System/Utf.inl	/^Out Utf<32>::encodeWide(Uint32 codepoint, Out output, wchar_t replacement)$/;"	f	class:Utf	typeref:typename:Out
end	dependencies/nlohmann/json.hpp	/^    const_iterator end() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:const_iterator
end	dependencies/nlohmann/json.hpp	/^    iteration_proxy_internal end() noexcept$/;"	f	class:nlohmann::detail::iteration_proxy	typeref:typename:iteration_proxy_internal
end	dependencies/nlohmann/json.hpp	/^    iterator end() noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:iterator
end	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const_iterator end() const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:const_iterator
end	dependencies/spriter/spriterengine/user_override/json.hpp	/^			iteration_proxy_internal end() noexcept {$/;"	f	class:nlohmann::detail::iteration_proxy	typeref:typename:iteration_proxy_internal
end	dependencies/spriter/spriterengine/user_override/json.hpp	/^			iterator end() noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:iterator
end_array	dependencies/nlohmann/json.hpp	/^        end_array,        \/\/\/< the character for array end `]`$/;"	e	enum:nlohmann::detail::lexer::token_type
end_array	dependencies/spriter/spriterengine/user_override/json.hpp	/^				end_array,        \/\/\/< the character for array end `]`$/;"	e	enum:nlohmann::detail::lexer::token_type
end_object	dependencies/nlohmann/json.hpp	/^        end_object,       \/\/\/< the character for object end `}`$/;"	e	enum:nlohmann::detail::lexer::token_type
end_object	dependencies/spriter/spriterengine/user_override/json.hpp	/^				end_object,       \/\/\/< the character for object end `}`$/;"	e	enum:nlohmann::detail::lexer::token_type
end_of_input	dependencies/nlohmann/json.hpp	/^        end_of_input,     \/\/\/< indicating the end of the input buffer$/;"	e	enum:nlohmann::detail::lexer::token_type
end_of_input	dependencies/spriter/spriterengine/user_override/json.hpp	/^				end_of_input,     \/\/\/< indicating the end of the input buffer$/;"	e	enum:nlohmann::detail::lexer::token_type
end_value	dependencies/nlohmann/json.hpp	/^    static constexpr difference_type end_value = begin_value + 1;$/;"	m	class:nlohmann::detail::primitive_iterator_t	typeref:typename:difference_type
end_value	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static constexpr difference_type end_value = begin_value + 1;$/;"	m	class:nlohmann::detail::primitive_iterator_t	typeref:typename:difference_type
entities	dependencies/spriter/spriterengine/entity/entityinstance.h	/^		EntityInstanceDataMap entities;$/;"	m	class:SpriterEngine::EntityInstance	typeref:typename:EntityInstanceDataMap
entities	dependencies/spriter/spriterengine/model/spritermodel.h	/^		EntityVector entities;$/;"	m	class:SpriterEngine::SpriterModel	typeref:typename:EntityVector
entity	dependencies/spriter/spriterengine/objectref/entityrefinstance.h	/^		EntityInstanceData *entity;$/;"	m	class:SpriterEngine::EntityRefInstance	typeref:typename:EntityInstanceData *
entityId	dependencies/spriter/spriterengine/entity/entity.h	/^		int entityId;$/;"	m	class:SpriterEngine::Entity	typeref:typename:int
entityId	dependencies/spriter/spriterengine/loading/loadinghelpers.h	/^		int entityId;$/;"	m	struct:SpriterEngine::SubEntityKeyInfo	typeref:typename:int
entityId	dependencies/spriter/spriterengine/objectref/entityref.h	/^		int entityId;$/;"	m	class:SpriterEngine::EntityRef	typeref:typename:int
entityName	dependencies/spriter/spriterengine/entity/entityinstancedata.h	/^		std::string entityName;$/;"	m	class:SpriterEngine::EntityInstanceData	typeref:typename:std::string
erase	dependencies/nlohmann/json.hpp	/^    IteratorType erase(IteratorType first, IteratorType last)$/;"	f	class:nlohmann::basic_json	typeref:typename:IteratorType
erase	dependencies/nlohmann/json.hpp	/^    IteratorType erase(IteratorType pos)$/;"	f	class:nlohmann::basic_json	typeref:typename:IteratorType
erase	dependencies/nlohmann/json.hpp	/^    size_type erase(const typename object_t::key_type& key)$/;"	f	class:nlohmann::basic_json	typeref:typename:size_type
erase	dependencies/nlohmann/json.hpp	/^    void erase(const size_type idx)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
erase	dependencies/spriter/spriterengine/user_override/json.hpp	/^				IteratorType erase(IteratorType first, IteratorType last) {$/;"	f	class:nlohmann::basic_json	typeref:typename:IteratorType
erase	dependencies/spriter/spriterengine/user_override/json.hpp	/^				IteratorType erase(IteratorType pos) {$/;"	f	class:nlohmann::basic_json	typeref:typename:IteratorType
erase	dependencies/spriter/spriterengine/user_override/json.hpp	/^			size_type erase(const typename object_t::key_type& key) {$/;"	f	class:nlohmann::basic_json	typeref:typename:size_type
erase	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void erase(const size_type idx) {$/;"	f	class:nlohmann::basic_json	typeref:typename:void
errFunction	dependencies/spriter/spriterengine/global/settings.cpp	/^	ErrorFunctionPointer Settings::errFunction = &nullError; $/;"	m	class:SpriterEngine::Settings	typeref:typename:ErrorFunctionPointer
errFunction	dependencies/spriter/spriterengine/global/settings.h	/^		static ErrorFunctionPointer errFunction;$/;"	m	class:SpriterEngine::Settings	typeref:typename:ErrorFunctionPointer
error	dependencies/spriter/spriterengine/global/settings.cpp	/^	void Settings::error(const std::string & errorMessage)$/;"	f	class:SpriterEngine::Settings	typeref:typename:void
error_message	dependencies/nlohmann/json.hpp	/^    const char* error_message = "";$/;"	m	class:nlohmann::detail::lexer	typeref:typename:const char *
error_message	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const char* error_message = "";$/;"	m	class:nlohmann::detail::lexer	typeref:typename:const char *
errored	dependencies/nlohmann/json.hpp	/^    bool errored = false;$/;"	m	class:nlohmann::detail::parser	typeref:typename:bool
errored	dependencies/spriter/spriterengine/user_override/json.hpp	/^			bool errored = false;$/;"	m	class:nlohmann::detail::parser	typeref:typename:bool
escape	dependencies/nlohmann/json.hpp	/^    static std::string escape(std::string s)$/;"	f	class:nlohmann::json_pointer	typeref:typename:std::string
escape	dependencies/spriter/spriterengine/user_override/json.hpp	/^		static std::string escape(std::string s) {$/;"	f	class:nlohmann::json_pointer	typeref:typename:std::string
exception	dependencies/nlohmann/json.hpp	/^    exception(int id_, const char* what_arg) : id(id_), m(what_arg) {}$/;"	f	class:nlohmann::detail::exception
exception	dependencies/nlohmann/json.hpp	/^    using exception = detail::exception;$/;"	t	class:nlohmann::basic_json	typeref:typename:detail::exception
exception	dependencies/nlohmann/json.hpp	/^class exception : public std::exception$/;"	c	namespace:nlohmann::detail
exception	dependencies/spriter/spriterengine/user_override/json.hpp	/^			exception(int id_, const char* what_arg) : id(id_), m(what_arg) {}$/;"	f	class:nlohmann::detail::exception
exception	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using exception = detail::exception;$/;"	t	class:nlohmann::basic_json	typeref:typename:detail::exception
exception	dependencies/spriter/spriterengine/user_override/json.hpp	/^		class exception : public std::exception {$/;"	c	namespace:nlohmann::detail
expect	dependencies/nlohmann/json.hpp	/^    bool expect(token_type t)$/;"	f	class:nlohmann::detail::parser	typeref:typename:bool
expect	dependencies/spriter/spriterengine/user_override/json.hpp	/^			bool expect(token_type t) {$/;"	f	class:nlohmann::detail::parser	typeref:typename:bool
expect_eof	dependencies/nlohmann/json.hpp	/^    void expect_eof() const$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:void
expect_eof	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void expect_eof() const {$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:void
expected	dependencies/nlohmann/json.hpp	/^    token_type expected = token_type::uninitialized;$/;"	m	class:nlohmann::detail::parser	typeref:typename:token_type
expected	dependencies/spriter/spriterengine/user_override/json.hpp	/^			token_type expected = token_type::uninitialized;$/;"	m	class:nlohmann::detail::parser	typeref:typename:token_type
external_constructor	dependencies/nlohmann/json.hpp	/^struct external_constructor<value_t::array>$/;"	s	namespace:nlohmann::detail
external_constructor	dependencies/nlohmann/json.hpp	/^struct external_constructor<value_t::boolean>$/;"	s	namespace:nlohmann::detail
external_constructor	dependencies/nlohmann/json.hpp	/^struct external_constructor<value_t::number_float>$/;"	s	namespace:nlohmann::detail
external_constructor	dependencies/nlohmann/json.hpp	/^struct external_constructor<value_t::number_integer>$/;"	s	namespace:nlohmann::detail
external_constructor	dependencies/nlohmann/json.hpp	/^struct external_constructor<value_t::number_unsigned>$/;"	s	namespace:nlohmann::detail
external_constructor	dependencies/nlohmann/json.hpp	/^struct external_constructor<value_t::object>$/;"	s	namespace:nlohmann::detail
external_constructor	dependencies/nlohmann/json.hpp	/^struct external_constructor<value_t::string>$/;"	s	namespace:nlohmann::detail
external_constructor	dependencies/spriter/spriterengine/user_override/json.hpp	/^		struct external_constructor<value_t::array> {$/;"	s	namespace:nlohmann::detail
external_constructor	dependencies/spriter/spriterengine/user_override/json.hpp	/^		struct external_constructor<value_t::boolean> {$/;"	s	namespace:nlohmann::detail
external_constructor	dependencies/spriter/spriterengine/user_override/json.hpp	/^		struct external_constructor<value_t::number_float> {$/;"	s	namespace:nlohmann::detail
external_constructor	dependencies/spriter/spriterengine/user_override/json.hpp	/^		struct external_constructor<value_t::number_integer> {$/;"	s	namespace:nlohmann::detail
external_constructor	dependencies/spriter/spriterengine/user_override/json.hpp	/^		struct external_constructor<value_t::number_unsigned> {$/;"	s	namespace:nlohmann::detail
external_constructor	dependencies/spriter/spriterengine/user_override/json.hpp	/^		struct external_constructor<value_t::object> {$/;"	s	namespace:nlohmann::detail
external_constructor	dependencies/spriter/spriterengine/user_override/json.hpp	/^		struct external_constructor<value_t::string> {$/;"	s	namespace:nlohmann::detail
extractFilePath	dependencies/spriter/spriterengine/loading/loadinghelpers.cpp	/^	std::string extractFilePath(std::string fileName)$/;"	f	namespace:SpriterEngine	typeref:typename:std::string
extractFileTypeFromFileName	dependencies/spriter/spriterengine/loading/loader.cpp	/^	Loader::SpriterFileType Loader::extractFileTypeFromFileName(const std::string &fileName)$/;"	f	class:SpriterEngine::Loader	typeref:typename:Loader::SpriterFileType
f	dependencies/nlohmann/json.hpp	/^    uint64_t f;$/;"	m	struct:nlohmann::detail::dtoa_impl::cached_power	typeref:typename:uint64_t
f	dependencies/nlohmann/json.hpp	/^    uint64_t f;$/;"	m	struct:nlohmann::detail::dtoa_impl::diyfp	typeref:typename:uint64_t
f	dependencies/spriter/spriterengine/user_override/json.hpp	/^				uint64_t f;$/;"	m	struct:nlohmann::detail::dtoa_impl::cached_power	typeref:typename:uint64_t
f	dependencies/spriter/spriterengine/user_override/json.hpp	/^				uint64_t f;$/;"	m	struct:nlohmann::detail::dtoa_impl::diyfp	typeref:typename:uint64_t
family	dependencies/sfml/include/SFML/Graphics/Font.hpp	/^        std::string family; \/\/\/< The font family$/;"	m	struct:sf::Font::Info	typeref:typename:std::string
file	dependencies/spriter/spriterengine/file/filereference.h	/^		File *file;$/;"	m	class:SpriterEngine::FileReference	typeref:typename:File *
fileCount	dependencies/spriter/spriterengine/loading/loadinghelpers.h	/^		int fileCount;$/;"	m	class:SpriterEngine::FileFlattener	typeref:typename:int
fileCount	dependencies/spriter/spriterengine/model/spritermodel.cpp	/^	int SpriterModel::fileCount()$/;"	f	class:SpriterEngine::SpriterModel	typeref:typename:int
fileFactory	dependencies/spriter/spriterengine/loading/loader.h	/^		FileFactory *fileFactory;$/;"	m	class:SpriterEngine::Loader	typeref:typename:FileFactory *
fileFactory	dependencies/spriter/spriterengine/model/spritermodel.h	/^		FileFactory *fileFactory;$/;"	m	class:SpriterEngine::SpriterModel	typeref:typename:FileFactory *
fileId	dependencies/spriter/spriterengine/objectref/spriteref.h	/^		int fileId;$/;"	m	class:SpriterEngine::SpriteRef	typeref:typename:int
fileIndex	dependencies/spriter/spriterengine/loading/loadinghelpers.h	/^		int fileIndex;$/;"	m	struct:SpriterEngine::SpriteKeyFileInfo	typeref:typename:int
filePath	dependencies/spriter/spriterengine/file/file.h	/^		std::string filePath;$/;"	m	class:SpriterEngine::File	typeref:typename:std::string
fileToReplace	dependencies/spriter/spriterengine/charactermap/charactermapinstruction.h	/^		int fileToReplace;$/;"	m	class:SpriterEngine::CharacterMapInstruction	typeref:typename:int
files	dependencies/spriter/spriterengine/entity/entity.h	/^		FileVector *files;$/;"	m	class:SpriterEngine::Entity	typeref:typename:FileVector *
files	dependencies/spriter/spriterengine/entity/entityinstance.h	/^		FileReferenceVector files;$/;"	m	class:SpriterEngine::EntityInstance	typeref:typename:FileReferenceVector
files	dependencies/spriter/spriterengine/model/spritermodel.h	/^		FileVector files;$/;"	m	class:SpriterEngine::SpriterModel	typeref:typename:FileVector
find	dependencies/nlohmann/json.hpp	/^    const_iterator find(KeyT&& key) const$/;"	f	class:nlohmann::basic_json	typeref:typename:const_iterator
find	dependencies/nlohmann/json.hpp	/^    iterator find(KeyT&& key)$/;"	f	class:nlohmann::basic_json	typeref:typename:iterator
find	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const_iterator find(KeyT&& key) const {$/;"	f	class:nlohmann::basic_json	typeref:typename:const_iterator
find	dependencies/spriter/spriterengine/user_override/json.hpp	/^			iterator find(KeyT&& key) {$/;"	f	class:nlohmann::basic_json	typeref:typename:iterator
findAndProcessKeys	dependencies/spriter/spriterengine/animation/animationinstance.cpp	/^	void AnimationInstance::findAndProcessKeys(real newTime, bool forward, ObjectInterfaceVector **/;"	f	class:SpriterEngine::AnimationInstance	typeref:typename:void
findCurrentKeys	dependencies/spriter/spriterengine/animation/animationinstance.cpp	/^	void AnimationInstance::findCurrentKeys(real newTime, bool forward)$/;"	f	class:SpriterEngine::AnimationInstance	typeref:typename:void
findCurrentMainlineKey	dependencies/spriter/spriterengine/animation/animationinstance.cpp	/^	void AnimationInstance::findCurrentMainlineKey(real newTime, bool forward)$/;"	f	class:SpriterEngine::AnimationInstance	typeref:typename:void
findCurrentTimelineKey	dependencies/spriter/spriterengine/timeline/timelineinstance.cpp	/^	void TimelineInstance::findCurrentTimelineKey(real newTime, bool forward, real animationLength)$/;"	f	class:SpriterEngine::TimelineInstance	typeref:typename:void
findCurrentTimelineKey	dependencies/spriter/spriterengine/timeline/triggertimelineinstance.cpp	/^	void TriggerTimelineInstance::findCurrentTimelineKey(real newTime, bool forward, real animation/;"	f	class:SpriterEngine::TriggerTimelineInstance	typeref:typename:void
findCurrentTimelineKeys	dependencies/spriter/spriterengine/animation/animationinstance.cpp	/^	void AnimationInstance::findCurrentTimelineKeys(real newTime, bool forward)$/;"	f	class:SpriterEngine::AnimationInstance	typeref:typename:void
findMainlineKeyTimeBackward	dependencies/spriter/spriterengine/animation/animationinstance.cpp	/^	void AnimationInstance::findMainlineKeyTimeBackward(real newTime)$/;"	f	class:SpriterEngine::AnimationInstance	typeref:typename:void
findMainlineKeyTimeForward	dependencies/spriter/spriterengine/animation/animationinstance.cpp	/^	void AnimationInstance::findMainlineKeyTimeForward(real newTime)$/;"	f	class:SpriterEngine::AnimationInstance	typeref:typename:void
findTimeBackward	dependencies/spriter/spriterengine/timeline/timelineinstance.cpp	/^	void TimelineInstance::findTimeBackward(real newTime)$/;"	f	class:SpriterEngine::TimelineInstance	typeref:typename:void
findTimeBackward	dependencies/spriter/spriterengine/timeline/triggertimelineinstance.cpp	/^	void TriggerTimelineInstance::findTimeBackward(real newTime, real animationLength)$/;"	f	class:SpriterEngine::TriggerTimelineInstance	typeref:typename:void
findTimeForward	dependencies/spriter/spriterengine/timeline/timelineinstance.cpp	/^	void TimelineInstance::findTimeForward(real newTime)$/;"	f	class:SpriterEngine::TimelineInstance	typeref:typename:void
findTimeForward	dependencies/spriter/spriterengine/timeline/triggertimelineinstance.cpp	/^	void TriggerTimelineInstance::findTimeForward(real newTime, real animationLength)$/;"	f	class:SpriterEngine::TriggerTimelineInstance	typeref:typename:void
find_largest_pow10	dependencies/nlohmann/json.hpp	/^inline int find_largest_pow10(const uint32_t n, uint32_t& pow10)$/;"	f	namespace:nlohmann::detail::dtoa_impl	typeref:typename:int
find_largest_pow10	dependencies/spriter/spriterengine/user_override/json.hpp	/^			inline int find_largest_pow10(const uint32_t n, uint32_t& pow10) {$/;"	f	namespace:nlohmann::detail::dtoa_impl	typeref:typename:int
finger	dependencies/sfml/include/SFML/Window/Event.hpp	/^        unsigned int finger; \/\/\/< Index of the finger in case of multi-touch events$/;"	m	struct:sf::Event::TouchEvent	typeref:typename:unsigned int
flatten	dependencies/nlohmann/json.hpp	/^    basic_json flatten() const$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
flatten	dependencies/nlohmann/json.hpp	/^    static void flatten(const std::string& reference_string,$/;"	f	class:nlohmann::json_pointer	typeref:typename:void
flatten	dependencies/spriter/spriterengine/user_override/json.hpp	/^			basic_json flatten() const {$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
flatten	dependencies/spriter/spriterengine/user_override/json.hpp	/^		static void flatten(const std::string& reference_string,$/;"	f	class:nlohmann::json_pointer	typeref:typename:void
folders	dependencies/spriter/spriterengine/loading/loadinghelpers.h	/^		Int2DVector folders;$/;"	m	class:SpriterEngine::FileFlattener	typeref:typename:Int2DVector
format_buffer	dependencies/nlohmann/json.hpp	/^inline char* format_buffer(char* buf, int len, int decimal_exponent,$/;"	f	namespace:nlohmann::detail::dtoa_impl	typeref:typename:char *
format_buffer	dependencies/spriter/spriterengine/user_override/json.hpp	/^			inline char* format_buffer(char* buf, int len, int decimal_exponent,$/;"	f	namespace:nlohmann::detail::dtoa_impl	typeref:typename:char *
framePosition	dependencies/spriter/spriterengine/global/atlas.h	/^		point framePosition;$/;"	m	struct:SpriterEngine::atlasframedata	typeref:typename:point
frameSize	dependencies/spriter/spriterengine/global/atlas.h	/^		point frameSize;$/;"	m	struct:SpriterEngine::atlasframedata	typeref:typename:point
fromAnsi	dependencies/sfml/include/SFML/System/Utf.inl	/^Out Utf<16>::fromAnsi(In begin, In end, Out output, const std::locale& locale)$/;"	f	class:Utf	typeref:typename:Out
fromAnsi	dependencies/sfml/include/SFML/System/Utf.inl	/^Out Utf<32>::fromAnsi(In begin, In end, Out output, const std::locale& locale)$/;"	f	class:Utf	typeref:typename:Out
fromAnsi	dependencies/sfml/include/SFML/System/Utf.inl	/^Out Utf<8>::fromAnsi(In begin, In end, Out output, const std::locale& locale)$/;"	f	class:Utf	typeref:typename:Out
fromLatin1	dependencies/sfml/include/SFML/System/Utf.inl	/^Out Utf<16>::fromLatin1(In begin, In end, Out output)$/;"	f	class:Utf	typeref:typename:Out
fromLatin1	dependencies/sfml/include/SFML/System/Utf.inl	/^Out Utf<32>::fromLatin1(In begin, In end, Out output)$/;"	f	class:Utf	typeref:typename:Out
fromLatin1	dependencies/sfml/include/SFML/System/Utf.inl	/^Out Utf<8>::fromLatin1(In begin, In end, Out output)$/;"	f	class:Utf	typeref:typename:Out
fromUtf16	dependencies/sfml/include/SFML/System/String.inl	/^String String::fromUtf16(T begin, T end)$/;"	f	class:String	typeref:typename:String
fromUtf32	dependencies/sfml/include/SFML/System/String.inl	/^String String::fromUtf32(T begin, T end)$/;"	f	class:String	typeref:typename:String
fromUtf8	dependencies/sfml/include/SFML/System/String.inl	/^String String::fromUtf8(T begin, T end)$/;"	f	class:String	typeref:typename:String
fromWide	dependencies/sfml/include/SFML/System/Utf.inl	/^Out Utf<16>::fromWide(In begin, In end, Out output)$/;"	f	class:Utf	typeref:typename:Out
fromWide	dependencies/sfml/include/SFML/System/Utf.inl	/^Out Utf<32>::fromWide(In begin, In end, Out output)$/;"	f	class:Utf	typeref:typename:Out
fromWide	dependencies/sfml/include/SFML/System/Utf.inl	/^Out Utf<8>::fromWide(In begin, In end, Out output)$/;"	f	class:Utf	typeref:typename:Out
from_cbor	dependencies/nlohmann/json.hpp	/^    static basic_json from_cbor(A1 && a1, A2 && a2, const bool strict = true)$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
from_cbor	dependencies/nlohmann/json.hpp	/^    static basic_json from_cbor(detail::input_adapter i,$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
from_cbor	dependencies/spriter/spriterengine/user_override/json.hpp	/^				static basic_json from_cbor(A1 && a1, A2 && a2, const bool strict = true) {$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
from_cbor	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static basic_json from_cbor(detail::input_adapter i,$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
from_json	dependencies/nlohmann/json.hpp	/^    static void from_json(BasicJsonType&& j, ValueType& val) noexcept($/;"	f	struct:nlohmann::adl_serializer	typeref:typename:void
from_json	dependencies/nlohmann/json.hpp	/^constexpr const auto& from_json = detail::static_const<detail::from_json_fn>::value;$/;"	v	namespace:nlohmann::__anon347436d50510	typeref:typename:const auto &
from_json	dependencies/nlohmann/json.hpp	/^void from_json(const BasicJsonType& j, ArithmeticType& val)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	dependencies/nlohmann/json.hpp	/^void from_json(const BasicJsonType& j, CompatibleArrayType& arr)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	dependencies/nlohmann/json.hpp	/^void from_json(const BasicJsonType& j, CompatibleObjectType& obj)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	dependencies/nlohmann/json.hpp	/^void from_json(const BasicJsonType& j, EnumType& e)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	dependencies/nlohmann/json.hpp	/^void from_json(const BasicJsonType& j, std::forward_list<T, Allocator>& l)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	dependencies/nlohmann/json.hpp	/^void from_json(const BasicJsonType& j, std::pair<A1, A2>& p)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	dependencies/nlohmann/json.hpp	/^void from_json(const BasicJsonType& j, std::tuple<Args...>& t)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	dependencies/nlohmann/json.hpp	/^void from_json(const BasicJsonType& j, std::valarray<T>& l)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	dependencies/nlohmann/json.hpp	/^void from_json(const BasicJsonType& j, typename BasicJsonType::array_t& arr)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	dependencies/nlohmann/json.hpp	/^void from_json(const BasicJsonType& j, typename BasicJsonType::boolean_t& b)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	dependencies/nlohmann/json.hpp	/^void from_json(const BasicJsonType& j, typename BasicJsonType::number_float_t& val)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	dependencies/nlohmann/json.hpp	/^void from_json(const BasicJsonType& j, typename BasicJsonType::number_integer_t& val)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	dependencies/nlohmann/json.hpp	/^void from_json(const BasicJsonType& j, typename BasicJsonType::number_unsigned_t& val)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	dependencies/nlohmann/json.hpp	/^void from_json(const BasicJsonType& j, typename BasicJsonType::string_t& s)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void from_json(const BasicJsonType& j, ArithmeticType& val) {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void from_json(const BasicJsonType& j, CompatibleArrayType& arr) {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void from_json(const BasicJsonType& j, CompatibleObjectType& obj) {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void from_json(const BasicJsonType& j, EnumType& e) {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void from_json(const BasicJsonType& j, std::forward_list<T, Allocator>& l) {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void from_json(const BasicJsonType& j, std::valarray<T>& l) {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^		constexpr const auto& from_json = detail::static_const<detail::from_json_fn>::value;$/;"	v	namespace:nlohmann::__anon6d16d0be0510	typeref:typename:const auto &
from_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^		static void from_json(BasicJsonType&& j, ValueType& val) noexcept($/;"	f	struct:nlohmann::adl_serializer	typeref:typename:void
from_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^		void from_json(const BasicJsonType& j, std::pair<A1, A2>& p) {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^		void from_json(const BasicJsonType& j, std::tuple<Args...>& t) {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^		void from_json(const BasicJsonType& j, typename BasicJsonType::array_t& arr) {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^		void from_json(const BasicJsonType& j, typename BasicJsonType::boolean_t& b) {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^		void from_json(const BasicJsonType& j, typename BasicJsonType::number_float_t& val) {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^		void from_json(const BasicJsonType& j, typename BasicJsonType::number_integer_t& val) {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^		void from_json(const BasicJsonType& j, typename BasicJsonType::number_unsigned_t& val) {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^		void from_json(const BasicJsonType& j, typename BasicJsonType::string_t& s) {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json_array_impl	dependencies/nlohmann/json.hpp	/^auto from_json_array_impl(const BasicJsonType& j, CompatibleArrayType& arr, priority_tag<1> \/*u/;"	f	namespace:nlohmann::detail	typeref:typename:decltype (arr.reserve (std::declval<typename CompatibleArrayType::size_type> ()),void ())
from_json_array_impl	dependencies/nlohmann/json.hpp	/^void from_json_array_impl(const BasicJsonType& j, CompatibleArrayType& arr, priority_tag<0> \/*u/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json_array_impl	dependencies/nlohmann/json.hpp	/^void from_json_array_impl(const BasicJsonType& j, std::array<T, N>& arr, priority_tag<2> \/*unus/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json_array_impl	dependencies/spriter/spriterengine/user_override/json.hpp	/^		auto from_json_array_impl(const BasicJsonType& j, CompatibleArrayType& arr, priority_tag<1> \//;"	f	namespace:nlohmann::detail	typeref:typename:decltype (arr.reserve (std::declval<typename CompatibleArrayType::size_type> ()),void ())
from_json_array_impl	dependencies/spriter/spriterengine/user_override/json.hpp	/^		void from_json_array_impl(const BasicJsonType& j, CompatibleArrayType& arr, priority_tag<0> \//;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json_array_impl	dependencies/spriter/spriterengine/user_override/json.hpp	/^		void from_json_array_impl(const BasicJsonType& j, std::array<T, N>& arr, priority_tag<2> \/*un/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json_fn	dependencies/nlohmann/json.hpp	/^struct from_json_fn$/;"	s	namespace:nlohmann::detail
from_json_fn	dependencies/spriter/spriterengine/user_override/json.hpp	/^		struct from_json_fn {$/;"	s	namespace:nlohmann::detail
from_json_tuple_impl	dependencies/nlohmann/json.hpp	/^void from_json_tuple_impl(const BasicJsonType& j, Tuple& t, index_sequence<Idx...>)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_json_tuple_impl	dependencies/spriter/spriterengine/user_override/json.hpp	/^		void from_json_tuple_impl(const BasicJsonType& j, Tuple& t, index_sequence<Idx...>) {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
from_msgpack	dependencies/nlohmann/json.hpp	/^    static basic_json from_msgpack(A1 && a1, A2 && a2, const bool strict = true)$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
from_msgpack	dependencies/nlohmann/json.hpp	/^    static basic_json from_msgpack(detail::input_adapter i,$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
from_msgpack	dependencies/spriter/spriterengine/user_override/json.hpp	/^				static basic_json from_msgpack(A1 && a1, A2 && a2, const bool strict = true) {$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
from_msgpack	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static basic_json from_msgpack(detail::input_adapter i,$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
from_ubjson	dependencies/nlohmann/json.hpp	/^    static basic_json from_ubjson(A1 && a1, A2 && a2, const bool strict = true)$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
from_ubjson	dependencies/nlohmann/json.hpp	/^    static basic_json from_ubjson(detail::input_adapter i,$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
from_ubjson	dependencies/spriter/spriterengine/user_override/json.hpp	/^				static basic_json from_ubjson(A1 && a1, A2 && a2, const bool strict = true) {$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
from_ubjson	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static basic_json from_ubjson(detail::input_adapter i,$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
front	dependencies/nlohmann/json.hpp	/^    const_reference front() const$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reference
front	dependencies/nlohmann/json.hpp	/^    reference front()$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
front	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const_reference front() const {$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reference
front	dependencies/spriter/spriterengine/user_override/json.hpp	/^			reference front() {$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
g	dependencies/sfml/include/SFML/Graphics/Color.hpp	/^    Uint8 g; \/\/\/< Green component$/;"	m	class:sf::Color	typeref:typename:Uint8
get	dependencies/nlohmann/json.hpp	/^    BasicJsonType get() const$/;"	f	class:nlohmann::basic_json	typeref:typename:BasicJsonType
get	dependencies/nlohmann/json.hpp	/^    PointerType get() noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:PointerType
get	dependencies/nlohmann/json.hpp	/^    basic_json get() const$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
get	dependencies/nlohmann/json.hpp	/^    constexpr const PointerType get() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:const PointerType
get	dependencies/nlohmann/json.hpp	/^    int get()$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:int
get	dependencies/nlohmann/json.hpp	/^    std::char_traits<char>::int_type get()$/;"	f	class:nlohmann::detail::lexer	typeref:typename:std::char_traits<char>::int_type
get	dependencies/spriter/spriterengine/user_override/json.hpp	/^				BasicJsonType get() const {$/;"	f	class:nlohmann::basic_json	typeref:typename:BasicJsonType
get	dependencies/spriter/spriterengine/user_override/json.hpp	/^				PointerType get() noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:PointerType
get	dependencies/spriter/spriterengine/user_override/json.hpp	/^				basic_json get() const {$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
get	dependencies/spriter/spriterengine/user_override/json.hpp	/^				constexpr const PointerType get() const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:const PointerType
get	dependencies/spriter/spriterengine/user_override/json.hpp	/^			int get() {$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:int
get	dependencies/spriter/spriterengine/user_override/json.hpp	/^			std::char_traits<char>::int_type get() {$/;"	f	class:nlohmann::detail::lexer	typeref:typename:std::char_traits<char>::int_type
getAlpha	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	real EntityInstance::getAlpha()$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:real
getAlpha	dependencies/spriter/spriterengine/objectinfo/boneinstanceinfo.cpp	/^	real BoneInstanceInfo::getAlpha()$/;"	f	class:SpriterEngine::BoneInstanceInfo	typeref:typename:real
getAlpha	dependencies/spriter/spriterengine/objectinfo/boneobjectinfo.cpp	/^	real BoneObjectInfo::getAlpha()$/;"	f	class:SpriterEngine::BoneObjectInfo	typeref:typename:real
getAlpha	dependencies/spriter/spriterengine/objectinfo/boxinstanceinfo.cpp	/^	real BoxInstanceInfo::getAlpha()$/;"	f	class:SpriterEngine::BoxInstanceInfo	typeref:typename:real
getAlpha	dependencies/spriter/spriterengine/objectinfo/boxobjectinfo.cpp	/^	real BoxObjectInfo::getAlpha()$/;"	f	class:SpriterEngine::BoxObjectInfo	typeref:typename:real
getAlpha	dependencies/spriter/spriterengine/objectinfo/entityobjectinfo.cpp	/^	real EntityObjectInfo::getAlpha()$/;"	f	class:SpriterEngine::EntityObjectInfo	typeref:typename:real
getAlpha	dependencies/spriter/spriterengine/objectinfo/pointinstanceinfo.cpp	/^	real PointInstanceInfo::getAlpha()$/;"	f	class:SpriterEngine::PointInstanceInfo	typeref:typename:real
getAlpha	dependencies/spriter/spriterengine/objectinfo/spriteobjectinfo.cpp	/^	real SpriteObjectInfo::getAlpha()$/;"	f	class:SpriterEngine::SpriteObjectInfo	typeref:typename:real
getAlpha	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	real UniversalObjectInterface::getAlpha()$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:real
getAngle	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	real EntityInstance::getAngle()$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:real
getAngle	dependencies/spriter/spriterengine/objectinfo/boneinstanceinfo.cpp	/^	real BoneInstanceInfo::getAngle()$/;"	f	class:SpriterEngine::BoneInstanceInfo	typeref:typename:real
getAngle	dependencies/spriter/spriterengine/objectinfo/boneobjectinfo.cpp	/^	real BoneObjectInfo::getAngle()$/;"	f	class:SpriterEngine::BoneObjectInfo	typeref:typename:real
getAngle	dependencies/spriter/spriterengine/objectinfo/boxinstanceinfo.cpp	/^	real BoxInstanceInfo::getAngle()$/;"	f	class:SpriterEngine::BoxInstanceInfo	typeref:typename:real
getAngle	dependencies/spriter/spriterengine/objectinfo/boxobjectinfo.cpp	/^	real BoxObjectInfo::getAngle()$/;"	f	class:SpriterEngine::BoxObjectInfo	typeref:typename:real
getAngle	dependencies/spriter/spriterengine/objectinfo/entityobjectinfo.cpp	/^	real EntityObjectInfo::getAngle()$/;"	f	class:SpriterEngine::EntityObjectInfo	typeref:typename:real
getAngle	dependencies/spriter/spriterengine/objectinfo/pointinstanceinfo.cpp	/^	real PointInstanceInfo::getAngle()$/;"	f	class:SpriterEngine::PointInstanceInfo	typeref:typename:real
getAngle	dependencies/spriter/spriterengine/objectinfo/pointobjectinfo.cpp	/^	real PointObjectInfo::getAngle()$/;"	f	class:SpriterEngine::PointObjectInfo	typeref:typename:real
getAngle	dependencies/spriter/spriterengine/objectinfo/spriteobjectinfo.cpp	/^	real SpriteObjectInfo::getAngle()$/;"	f	class:SpriterEngine::SpriteObjectInfo	typeref:typename:real
getAngle	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	real UniversalObjectInterface::getAngle()$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:real
getAnimation	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	AnimationInstance * EntityInstanceData::getAnimation(const std::string &animationName)$/;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:AnimationInstance *
getAnimation	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	AnimationInstance * EntityInstanceData::getAnimation(int animationIndex)$/;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:AnimationInstance *
getAnimationsFromEntityElement	dependencies/spriter/spriterengine/loading/spriterdocumentloader.cpp	/^	void SpriterDocumentLoader::getAnimationsFromEntityElement(SpriterFileElementWrapper *entityEle/;"	f	class:SpriterEngine::SpriterDocumentLoader	typeref:typename:void
getAsset	include/GameData.h	/^inline T & GameData::getAsset(const std::string & name) {$/;"	f	class:GameData	typeref:typename:T &
getAtlasFromElement	dependencies/spriter/spriterengine/loading/spriterdocumentloader.cpp	/^	void SpriterDocumentLoader::getAtlasFromElement(SpriterFileElementWrapper *spriterDataElement, /;"	f	class:SpriterEngine::SpriterDocumentLoader	typeref:typename:void
getCharacterMapsFromEntityElement	dependencies/spriter/spriterengine/loading/spriterdocumentloader.cpp	/^	void SpriterDocumentLoader::getCharacterMapsFromEntityElement(SpriterFileElementWrapper *entity/;"	f	class:SpriterEngine::SpriterDocumentLoader	typeref:typename:void
getCloneElement	dependencies/spriter/spriterengine/override/spriterfileelementwrapper.cpp	/^	SpriterFileElementWrapper * SpriterFileElementWrapper::getCloneElement()$/;"	f	class:SpriterEngine::SpriterFileElementWrapper	typeref:typename:SpriterFileElementWrapper *
getCurrentTime	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	real EntityInstance::getCurrentTime()$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:real
getCurrentTime	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	real UniversalObjectInterface::getCurrentTime()$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:real
getDefaultValue	dependencies/spriter/spriterengine/variable/variable.cpp	/^	UniversalObjectInterface *Variable::getDefaultValue() const$/;"	f	class:SpriterEngine::Variable	typeref:typename:UniversalObjectInterface *
getEasedTime	dependencies/spriter/spriterengine/timeinfo/timeinfo.cpp	/^	real TimeInfo::getEasedTime(real currentTime)$/;"	f	class:SpriterEngine::TimeInfo	typeref:typename:real
getEasingCurveFromKeyElement	dependencies/spriter/spriterengine/loading/spriterdocumentloader.cpp	/^	EasingCurveInterface *SpriterDocumentLoader::getEasingCurveFromKeyElement(SpriterFileElementWra/;"	f	class:SpriterEngine::SpriterDocumentLoader	typeref:typename:EasingCurveInterface *
getEntitiesFromElement	dependencies/spriter/spriterengine/loading/spriterdocumentloader.cpp	/^	void SpriterDocumentLoader::getEntitiesFromElement(SpriterFileElementWrapper *spriterDataElemen/;"	f	class:SpriterEngine::SpriterDocumentLoader	typeref:typename:void
getEntity	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	EntityInstanceData * EntityInstance::getEntity(int entityId)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:EntityInstanceData *
getEntity	dependencies/spriter/spriterengine/model/spritermodel.cpp	/^	Entity * SpriterModel::getEntity(int entityId)$/;"	f	class:SpriterEngine::SpriterModel	typeref:typename:Entity *
getEntity	dependencies/spriter/spriterengine/model/spritermodel.cpp	/^	Entity * SpriterModel::getEntity(std::string entityName)$/;"	f	class:SpriterEngine::SpriterModel	typeref:typename:Entity *
getEntity	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	EntityInstanceData * UniversalObjectInterface::getEntity(int entityId)$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:EntityInstanceData *
getEventlinesFromAnimationElement	dependencies/spriter/spriterengine/loading/spriterdocumentloader.cpp	/^	void SpriterDocumentLoader::getEventlinesFromAnimationElement(SpriterFileElementWrapper *animat/;"	f	class:SpriterEngine::SpriterDocumentLoader	typeref:typename:void
getFile	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	FileReference *EntityInstance::getFile(int fileId)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:FileReference *
getFileAtIndex	dependencies/spriter/spriterengine/model/spritermodel.cpp	/^	File * SpriterModel::getFileAtIndex(int fileIndex)$/;"	f	class:SpriterEngine::SpriterModel	typeref:typename:File *
getFileFactory	dependencies/spriter/spriterengine/model/spritermodel.h	/^		FileFactory* getFileFactory() {$/;"	f	class:SpriterEngine::SpriterModel	typeref:typename:FileFactory *
getFirstAttribute	dependencies/spriter/spriterengine/override/spriterfileelementwrapper.cpp	/^	SpriterFileAttributeWrapper * SpriterFileElementWrapper::getFirstAttribute()$/;"	f	class:SpriterEngine::SpriterFileElementWrapper	typeref:typename:SpriterFileAttributeWrapper *
getFirstAttribute	dependencies/spriter/spriterengine/override/spriterfileelementwrapper.cpp	/^	SpriterFileAttributeWrapper * SpriterFileElementWrapper::getFirstAttribute(const std::string & /;"	f	class:SpriterEngine::SpriterFileElementWrapper	typeref:typename:SpriterFileAttributeWrapper *
getFirstChildElement	dependencies/spriter/spriterengine/override/spriterfiledocumentwrapper.cpp	/^	SpriterFileElementWrapper * SpriterFileDocumentWrapper::getFirstChildElement()$/;"	f	class:SpriterEngine::SpriterFileDocumentWrapper	typeref:typename:SpriterFileElementWrapper *
getFirstChildElement	dependencies/spriter/spriterengine/override/spriterfiledocumentwrapper.cpp	/^	SpriterFileElementWrapper * SpriterFileDocumentWrapper::getFirstChildElement(std::string elemen/;"	f	class:SpriterEngine::SpriterFileDocumentWrapper	typeref:typename:SpriterFileElementWrapper *
getFirstChildElement	dependencies/spriter/spriterengine/override/spriterfileelementwrapper.cpp	/^	SpriterFileElementWrapper * SpriterFileElementWrapper::getFirstChildElement()$/;"	f	class:SpriterEngine::SpriterFileElementWrapper	typeref:typename:SpriterFileElementWrapper *
getFirstChildElement	dependencies/spriter/spriterengine/override/spriterfileelementwrapper.cpp	/^	SpriterFileElementWrapper * SpriterFileElementWrapper::getFirstChildElement(const std::string &/;"	f	class:SpriterEngine::SpriterFileElementWrapper	typeref:typename:SpriterFileElementWrapper *
getFlattenedIndex	dependencies/spriter/spriterengine/loading/loadinghelpers.cpp	/^	int FileFlattener::getFlattenedIndex(int folderIndex, int fileIndex)$/;"	f	class:SpriterEngine::FileFlattener	typeref:typename:int
getFolderFileStructureFromElement	dependencies/spriter/spriterengine/loading/spriterdocumentloader.cpp	/^	void SpriterDocumentLoader::getFolderFileStructureFromElement(SpriterFileElementWrapper *sprite/;"	f	class:SpriterEngine::SpriterDocumentLoader	typeref:typename:void
getId	dependencies/spriter/spriterengine/entity/entity.cpp	/^	int Entity::getId()$/;"	f	class:SpriterEngine::Entity	typeref:typename:int
getId	dependencies/spriter/spriterengine/entity/object.cpp	/^	int Object::getId()$/;"	f	class:SpriterEngine::Object	typeref:typename:int
getImage	dependencies/spriter/spriterengine/objectinfo/spriteobjectinfo.cpp	/^	ImageFile *SpriteObjectInfo::getImage()$/;"	f	class:SpriterEngine::SpriteObjectInfo	typeref:typename:ImageFile *
getImage	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	ImageFile *UniversalObjectInterface::getImage()$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:ImageFile *
getInstance	include/SceneManager.h	/^	static SceneManager& getInstance() {$/;"	f	class:SceneManager	typeref:typename:SceneManager &
getInstance	src/GameData.cpp	/^GameData& GameData::getInstance() {$/;"	f	class:GameData	typeref:typename:GameData &
getIntValue	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	int EntityInstance::getIntValue(const std::string &objectName, const std::string &variableName)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:int
getIntValue	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	int EntityInstance::getIntValue(const std::string &variableName)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:int
getIntValue	dependencies/spriter/spriterengine/objectinfo/intvariableinfo.cpp	/^	int IntVariableInfo::getIntValue()$/;"	f	class:SpriterEngine::IntVariableInfo	typeref:typename:int
getIntValue	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	int UniversalObjectInterface::getIntValue()$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:int
getIntValue	dependencies/spriter/spriterengine/user_override/jsonspriterfileattributewrapper.cpp	/^	int JSONSpriterFileAttributeWrapper::getIntValue()$/;"	f	class:SpriterEngine::JSONSpriterFileAttributeWrapper	typeref:typename:int
getIsLooping	dependencies/spriter/spriterengine/animation/animation.cpp	/^	bool Animation::getIsLooping()$/;"	f	class:SpriterEngine::Animation	typeref:typename:bool
getKey	dependencies/spriter/spriterengine/objectref/objectref.cpp	/^	TimelineKey * ObjectRef::getKey()$/;"	f	class:SpriterEngine::ObjectRef	typeref:typename:TimelineKey *
getKey	dependencies/spriter/spriterengine/timeline/timeline.cpp	/^	TimelineKey *Timeline::getKey(int keyIndex)$/;"	f	class:SpriterEngine::Timeline	typeref:typename:TimelineKey *
getLastKey	dependencies/spriter/spriterengine/timeline/timeline.cpp	/^	TimelineKey *Timeline::getLastKey()$/;"	f	class:SpriterEngine::Timeline	typeref:typename:TimelineKey *
getLength	dependencies/spriter/spriterengine/animation/animation.cpp	/^	real Animation::getLength()$/;"	f	class:SpriterEngine::Animation	typeref:typename:real
getLength	include/Helpers.h	/^	inline float getLength(const sf::Vector2f & v) {$/;"	f	namespace:Helpers	typeref:typename:float
getMainlineFromAnimationElement	dependencies/spriter/spriterengine/loading/spriterdocumentloader.cpp	/^	void SpriterDocumentLoader::getMainlineFromAnimationElement(SpriterFileElementWrapper *animatio/;"	f	class:SpriterEngine::SpriterDocumentLoader	typeref:typename:void
getMetaDataFromElement	dependencies/spriter/spriterengine/loading/spriterdocumentloader.cpp	/^	void SpriterDocumentLoader::getMetaDataFromElement(SpriterFileElementWrapper *parentObjectEleme/;"	f	class:SpriterEngine::SpriterDocumentLoader	typeref:typename:void
getName	dependencies/spriter/spriterengine/animation/animation.cpp	/^	std::string Animation::getName()$/;"	f	class:SpriterEngine::Animation	typeref:typename:std::string
getName	dependencies/spriter/spriterengine/animation/animationinstance.cpp	/^	std::string AnimationInstance::getName()$/;"	f	class:SpriterEngine::AnimationInstance	typeref:typename:std::string
getName	dependencies/spriter/spriterengine/entity/entity.cpp	/^	std::string Entity::getName()$/;"	f	class:SpriterEngine::Entity	typeref:typename:std::string
getName	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	std::string EntityInstanceData::getName()$/;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:std::string
getName	dependencies/spriter/spriterengine/entity/object.cpp	/^	std::string Object::getName()$/;"	f	class:SpriterEngine::Object	typeref:typename:std::string
getName	dependencies/spriter/spriterengine/user_override/jsonspriterfileattributewrapper.cpp	/^	std::string JSONSpriterFileAttributeWrapper::getName()$/;"	f	class:SpriterEngine::JSONSpriterFileAttributeWrapper	typeref:typename:std::string
getName	dependencies/spriter/spriterengine/user_override/jsonspriterfileelementwrapper.cpp	/^	std::string JSONSpriterFileElementWrapper::getName()$/;"	f	class:SpriterEngine::JSONSpriterFileElementWrapper	typeref:typename:std::string
getName	dependencies/spriter/spriterengine/variable/variable.cpp	/^	std::string Variable::getName() const$/;"	f	class:SpriterEngine::Variable	typeref:typename:std::string
getNewAnimationFromAnimationElement	dependencies/spriter/spriterengine/loading/spriterdocumentloader.cpp	/^	Animation *SpriterDocumentLoader::getNewAnimationFromAnimationElement(SpriterFileElementWrapper/;"	f	class:SpriterEngine::SpriterDocumentLoader	typeref:typename:Animation *
getNewEasingCurve	dependencies/spriter/spriterengine/loading/loadinghelpers.cpp	/^	EasingCurveInterface *getNewEasingCurve(CurveType curveType, ControlPointArray *controlPoints)$/;"	f	namespace:SpriterEngine	typeref:typename:EasingCurveInterface *
getNewEntityFromEntityElement	dependencies/spriter/spriterengine/loading/spriterdocumentloader.cpp	/^	Entity *SpriterDocumentLoader::getNewEntityFromEntityElement(SpriterFileElementWrapper *entityE/;"	f	class:SpriterEngine::SpriterDocumentLoader	typeref:typename:Entity *
getNewEntityInstance	dependencies/spriter/spriterengine/entity/entity.cpp	/^	EntityInstance *Entity::getNewEntityInstance(SpriterModel *model, ObjectFactory *objectFactory)$/;"	f	class:SpriterEngine::Entity	typeref:typename:EntityInstance *
getNewEntityInstance	dependencies/spriter/spriterengine/model/spritermodel.cpp	/^	EntityInstance * SpriterModel::getNewEntityInstance(EntityIdVector * entityIds)$/;"	f	class:SpriterEngine::SpriterModel	typeref:typename:EntityInstance *
getNewEntityInstance	dependencies/spriter/spriterengine/model/spritermodel.cpp	/^	EntityInstance * SpriterModel::getNewEntityInstance(std::string entityName)$/;"	f	class:SpriterEngine::SpriterModel	typeref:typename:EntityInstance *
getNewEntityInstance	dependencies/spriter/spriterengine/model/spritermodel.cpp	/^	EntityInstance *SpriterModel::getNewEntityInstance(int entityId)$/;"	f	class:SpriterEngine::SpriterModel	typeref:typename:EntityInstance *
getNewObjectInfoInstance	dependencies/spriter/spriterengine/entity/entity.cpp	/^	UniversalObjectInterface *Entity::getNewObjectInfoInstance(int objectId)$/;"	f	class:SpriterEngine::Entity	typeref:typename:UniversalObjectInterface *
getNewObjectInfoInstance	dependencies/spriter/spriterengine/entity/object.cpp	/^	UniversalObjectInterface *Object::getNewObjectInfoInstance()$/;"	f	class:SpriterEngine::Object	typeref:typename:UniversalObjectInterface *
getNewObjectInfoInstance	dependencies/spriter/spriterengine/variable/variable.cpp	/^	UniversalObjectInterface *Variable::getNewObjectInfoInstance(bool forEntityInstance) const$/;"	f	class:SpriterEngine::Variable	typeref:typename:UniversalObjectInterface *
getNewObjectRefInstance	dependencies/spriter/spriterengine/objectref/objectref.cpp	/^	ObjectRefInstance *ObjectRef::getNewObjectRefInstance(EntityInstance *entityInstance, EntityIns/;"	f	class:SpriterEngine::ObjectRef	typeref:typename:ObjectRefInstance *
getNewSpecializedObjectRefInstance	dependencies/spriter/spriterengine/objectref/boneref.cpp	/^	ObjectRefInstance *BoneRef::getNewSpecializedObjectRefInstance(EntityInstance *entityInstance, /;"	f	class:SpriterEngine::BoneRef	typeref:typename:ObjectRefInstance *
getNewSpecializedObjectRefInstance	dependencies/spriter/spriterengine/objectref/entityref.cpp	/^	ObjectRefInstance *EntityRef::getNewSpecializedObjectRefInstance(EntityInstance *entityInstance/;"	f	class:SpriterEngine::EntityRef	typeref:typename:ObjectRefInstance *
getNewSpecializedObjectRefInstance	dependencies/spriter/spriterengine/objectref/objectref.cpp	/^	ObjectRefInstance *ObjectRef::getNewSpecializedObjectRefInstance(EntityInstance *entityInstance/;"	f	class:SpriterEngine::ObjectRef	typeref:typename:ObjectRefInstance *
getNewSpecializedObjectRefInstance	dependencies/spriter/spriterengine/objectref/spriteref.cpp	/^	ObjectRefInstance *SpriteRef::getNewSpecializedObjectRefInstance(EntityInstance *entityInstance/;"	f	class:SpriterEngine::SpriteRef	typeref:typename:ObjectRefInstance *
getNextSiblingElement	dependencies/spriter/spriterengine/override/spriterfileelementwrapper.cpp	/^	SpriterFileElementWrapper * SpriterFileElementWrapper::getNextSiblingElement()$/;"	f	class:SpriterEngine::SpriterFileElementWrapper	typeref:typename:SpriterFileElementWrapper *
getNextTime	dependencies/spriter/spriterengine/animation/mainlinekeyinstance.cpp	/^	real MainlineKeyInstance::getNextTime()$/;"	f	class:SpriterEngine::MainlineKeyInstance	typeref:typename:real
getNextTime	dependencies/spriter/spriterengine/timeinfo/timeinfo.cpp	/^	real TimeInfo::getNextTime()$/;"	f	class:SpriterEngine::TimeInfo	typeref:typename:real
getNextTime	dependencies/spriter/spriterengine/timeline/timelinekey.cpp	/^	real TimelineKey::getNextTime()$/;"	f	class:SpriterEngine::TimelineKey	typeref:typename:real
getObject	dependencies/spriter/spriterengine/entity/entity.cpp	/^	Object * Entity::getObject(int objectId)$/;"	f	class:SpriterEngine::Entity	typeref:typename:Object *
getObjectFromTimelineElement	dependencies/spriter/spriterengine/loading/spriterdocumentloader.cpp	/^	Object *SpriterDocumentLoader::getObjectFromTimelineElement(SpriterFileElementWrapper *timeline/;"	f	class:SpriterEngine::SpriterDocumentLoader	typeref:typename:Object *
getObjectId	dependencies/spriter/spriterengine/timeline/timeline.cpp	/^	int Timeline::getObjectId()$/;"	f	class:SpriterEngine::Timeline	typeref:typename:int
getObjectIdFromTimelineIndex	dependencies/spriter/spriterengine/animation/animation.cpp	/^	int Animation::getObjectIdFromTimelineIndex(int timelineIndex)$/;"	f	class:SpriterEngine::Animation	typeref:typename:int
getObjectInfo	dependencies/spriter/spriterengine/timeline/timelinekey.cpp	/^	UniversalObjectInterface *TimelineKey::getObjectInfo()$/;"	f	class:SpriterEngine::TimelineKey	typeref:typename:UniversalObjectInterface *
getObjectInfoFromEntityElement	dependencies/spriter/spriterengine/loading/spriterdocumentloader.cpp	/^	void SpriterDocumentLoader::getObjectInfoFromEntityElement(SpriterFileElementWrapper *entityEle/;"	f	class:SpriterEngine::SpriterDocumentLoader	typeref:typename:void
getObjectInfoFromTagKeyElement	dependencies/spriter/spriterengine/loading/spriterdocumentloader.cpp	/^	UniversalObjectInterface * SpriterDocumentLoader::getObjectInfoFromTagKeyElement(SpriterFileEle/;"	f	class:SpriterEngine::SpriterDocumentLoader	typeref:typename:UniversalObjectInterface *
getObjectInfoFromTimelineKeyElement	dependencies/spriter/spriterengine/loading/spriterdocumentloader.cpp	/^	UniversalObjectInterface *SpriterDocumentLoader::getObjectInfoFromTimelineKeyElement(SpriterFil/;"	f	class:SpriterEngine::SpriterDocumentLoader	typeref:typename:UniversalObjectInterface *
getObjectInfoFromVariableKeyElement	dependencies/spriter/spriterengine/loading/spriterdocumentloader.cpp	/^	UniversalObjectInterface *SpriterDocumentLoader::getObjectInfoFromVariableKeyElement(SpriterFil/;"	f	class:SpriterEngine::SpriterDocumentLoader	typeref:typename:UniversalObjectInterface *
getObjectInstance	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	UniversalObjectInterface *EntityInstance::getObjectInstance(const std::string &objectName)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:UniversalObjectInterface *
getObjectInstance	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	UniversalObjectInterface *EntityInstance::getObjectInstance(int objectId)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:UniversalObjectInterface *
getObjectInstance	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	UniversalObjectInterface *EntityInstanceData::getObjectInstance(const std::string &objectName)$/;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:UniversalObjectInterface *
getObjectInstance	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	UniversalObjectInterface *EntityInstanceData::getObjectInstance(int objectId)$/;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:UniversalObjectInterface *
getObjectTimelineKey	dependencies/spriter/spriterengine/animation/animation.cpp	/^	TimelineKey *Animation::getObjectTimelineKey(int timelineIndex, int keyIndex)$/;"	f	class:SpriterEngine::Animation	typeref:typename:TimelineKey *
getPanning	dependencies/spriter/spriterengine/objectinfo/soundobjectinfo.cpp	/^	real SoundObjectInfo::getPanning()$/;"	f	class:SpriterEngine::SoundObjectInfo	typeref:typename:real
getPanning	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	real UniversalObjectInterface::getPanning()$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:real
getPanning	dependencies/spriter/spriterengine/override/soundobjectinforeference.cpp	/^	real SoundObjectInfoReference::getPanning()$/;"	f	class:SpriterEngine::SoundObjectInfoReference	typeref:typename:real
getPivot	dependencies/spriter/spriterengine/objectinfo/boxinstanceinfo.cpp	/^	point BoxInstanceInfo::getPivot()$/;"	f	class:SpriterEngine::BoxInstanceInfo	typeref:typename:point
getPivot	dependencies/spriter/spriterengine/objectinfo/boxobjectinfo.cpp	/^	point BoxObjectInfo::getPivot()$/;"	f	class:SpriterEngine::BoxObjectInfo	typeref:typename:point
getPivot	dependencies/spriter/spriterengine/objectinfo/spriteobjectinfo.cpp	/^	point SpriteObjectInfo::getPivot()$/;"	f	class:SpriterEngine::SpriteObjectInfo	typeref:typename:point
getPivot	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	point UniversalObjectInterface::getPivot()$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:point
getPosition	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	point EntityInstance::getPosition()$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:point
getPosition	dependencies/spriter/spriterengine/objectinfo/boneinstanceinfo.cpp	/^	point BoneInstanceInfo::getPosition()$/;"	f	class:SpriterEngine::BoneInstanceInfo	typeref:typename:point
getPosition	dependencies/spriter/spriterengine/objectinfo/boneobjectinfo.cpp	/^	point BoneObjectInfo::getPosition()$/;"	f	class:SpriterEngine::BoneObjectInfo	typeref:typename:point
getPosition	dependencies/spriter/spriterengine/objectinfo/boxinstanceinfo.cpp	/^	point BoxInstanceInfo::getPosition()$/;"	f	class:SpriterEngine::BoxInstanceInfo	typeref:typename:point
getPosition	dependencies/spriter/spriterengine/objectinfo/boxobjectinfo.cpp	/^	point BoxObjectInfo::getPosition()$/;"	f	class:SpriterEngine::BoxObjectInfo	typeref:typename:point
getPosition	dependencies/spriter/spriterengine/objectinfo/entityobjectinfo.cpp	/^	point EntityObjectInfo::getPosition()$/;"	f	class:SpriterEngine::EntityObjectInfo	typeref:typename:point
getPosition	dependencies/spriter/spriterengine/objectinfo/pointinstanceinfo.cpp	/^	point PointInstanceInfo::getPosition()$/;"	f	class:SpriterEngine::PointInstanceInfo	typeref:typename:point
getPosition	dependencies/spriter/spriterengine/objectinfo/pointobjectinfo.cpp	/^	point PointObjectInfo::getPosition()$/;"	f	class:SpriterEngine::PointObjectInfo	typeref:typename:point
getPosition	dependencies/spriter/spriterengine/objectinfo/spriteobjectinfo.cpp	/^	point SpriteObjectInfo::getPosition()$/;"	f	class:SpriterEngine::SpriteObjectInfo	typeref:typename:point
getPosition	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	point UniversalObjectInterface::getPosition()$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:point
getRealValue	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	real EntityInstance::getRealValue(const std::string &objectName, const std::string &variableNam/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:real
getRealValue	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	real EntityInstance::getRealValue(const std::string &variableName)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:real
getRealValue	dependencies/spriter/spriterengine/objectinfo/realvariableinfo.cpp	/^	real RealVariableInfo::getRealValue()$/;"	f	class:SpriterEngine::RealVariableInfo	typeref:typename:real
getRealValue	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	real UniversalObjectInterface::getRealValue()$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:real
getRealValue	dependencies/spriter/spriterengine/user_override/jsonspriterfileattributewrapper.cpp	/^	real JSONSpriterFileAttributeWrapper::getRealValue()$/;"	f	class:SpriterEngine::JSONSpriterFileAttributeWrapper	typeref:typename:real
getRefsFromMainlineKeyElement	dependencies/spriter/spriterengine/loading/spriterdocumentloader.cpp	/^	void SpriterDocumentLoader::getRefsFromMainlineKeyElement(SpriterFileElementWrapper *keyElement/;"	f	class:SpriterEngine::SpriterDocumentLoader	typeref:typename:void
getRunning	src/SceneManager.cpp	/^bool SceneManager::getRunning() const {$/;"	f	class:SceneManager	typeref:typename:bool
getScale	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	point EntityInstance::getScale()$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:point
getScale	dependencies/spriter/spriterengine/objectinfo/boneinstanceinfo.cpp	/^	point BoneInstanceInfo::getScale()$/;"	f	class:SpriterEngine::BoneInstanceInfo	typeref:typename:point
getScale	dependencies/spriter/spriterengine/objectinfo/boneobjectinfo.cpp	/^	point BoneObjectInfo::getScale()$/;"	f	class:SpriterEngine::BoneObjectInfo	typeref:typename:point
getScale	dependencies/spriter/spriterengine/objectinfo/boxinstanceinfo.cpp	/^	point BoxInstanceInfo::getScale()$/;"	f	class:SpriterEngine::BoxInstanceInfo	typeref:typename:point
getScale	dependencies/spriter/spriterengine/objectinfo/boxobjectinfo.cpp	/^	point BoxObjectInfo::getScale()$/;"	f	class:SpriterEngine::BoxObjectInfo	typeref:typename:point
getScale	dependencies/spriter/spriterengine/objectinfo/entityobjectinfo.cpp	/^	point EntityObjectInfo::getScale()$/;"	f	class:SpriterEngine::EntityObjectInfo	typeref:typename:point
getScale	dependencies/spriter/spriterengine/objectinfo/pointinstanceinfo.cpp	/^	point PointInstanceInfo::getScale()$/;"	f	class:SpriterEngine::PointInstanceInfo	typeref:typename:point
getScale	dependencies/spriter/spriterengine/objectinfo/spriteobjectinfo.cpp	/^	point SpriteObjectInfo::getScale()$/;"	f	class:SpriterEngine::SpriteObjectInfo	typeref:typename:point
getScale	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	point UniversalObjectInterface::getScale()$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:point
getSize	dependencies/spriter/spriterengine/objectinfo/boneinstanceinfo.cpp	/^	point BoneInstanceInfo::getSize()$/;"	f	class:SpriterEngine::BoneInstanceInfo	typeref:typename:point
getSize	dependencies/spriter/spriterengine/objectinfo/boxinstanceinfo.cpp	/^	point BoxInstanceInfo::getSize()$/;"	f	class:SpriterEngine::BoxInstanceInfo	typeref:typename:point
getSize	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	point UniversalObjectInterface::getSize()$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:point
getSoundObject	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	UniversalObjectInterface *EntityInstance::getSoundObject(const std::string &soundName)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:UniversalObjectInterface *
getSoundObject	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	UniversalObjectInterface *EntityInstance::getSoundObject(int soundId)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:UniversalObjectInterface *
getSoundObject	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	UniversalObjectInterface *EntityInstanceData::getSoundObject(const std::string &soundName)$/;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:UniversalObjectInterface *
getSoundObject	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	UniversalObjectInterface *EntityInstanceData::getSoundObject(int soundId)$/;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:UniversalObjectInterface *
getSoundObjectInfoFromSoundlineKey	dependencies/spriter/spriterengine/loading/spriterdocumentloader.cpp	/^	UniversalObjectInterface *SpriterDocumentLoader::getSoundObjectInfoFromSoundlineKey(SpriterFile/;"	f	class:SpriterEngine::SpriterDocumentLoader	typeref:typename:UniversalObjectInterface *
getSoundlinesFromAnimationElement	dependencies/spriter/spriterengine/loading/spriterdocumentloader.cpp	/^	void SpriterDocumentLoader::getSoundlinesFromAnimationElement(SpriterFileElementWrapper *animat/;"	f	class:SpriterEngine::SpriterDocumentLoader	typeref:typename:void
getStringValue	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	std::string EntityInstance::getStringValue(const std::string &objectName, const std::string &va/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:std::string
getStringValue	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	std::string EntityInstance::getStringValue(const std::string &variableName)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:std::string
getStringValue	dependencies/spriter/spriterengine/objectinfo/stringvariableinfo.cpp	/^	std::string StringVariableInfo::getStringValue()$/;"	f	class:SpriterEngine::StringVariableInfo	typeref:typename:std::string
getStringValue	dependencies/spriter/spriterengine/objectinfo/stringvariableinforeference.cpp	/^	std::string StringVariableInfoReference::getStringValue()$/;"	f	class:SpriterEngine::StringVariableInfoReference	typeref:typename:std::string
getStringValue	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	std::string UniversalObjectInterface::getStringValue()$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:std::string
getStringValue	dependencies/spriter/spriterengine/user_override/jsonspriterfileattributewrapper.cpp	/^	std::string JSONSpriterFileAttributeWrapper::getStringValue()$/;"	f	class:SpriterEngine::JSONSpriterFileAttributeWrapper	typeref:typename:std::string
getTag	dependencies/spriter/spriterengine/model/spritermodel.cpp	/^	const std::string * SpriterModel::getTag(int tagIndex)$/;"	f	class:SpriterEngine::SpriterModel	typeref:typename:const std::string *
getTagListFromElement	dependencies/spriter/spriterengine/loading/spriterdocumentloader.cpp	/^	void SpriterDocumentLoader::getTagListFromElement(SpriterFileElementWrapper *spriterDataElement/;"	f	class:SpriterEngine::SpriterDocumentLoader	typeref:typename:void
getTaglinesFromMetaDataElement	dependencies/spriter/spriterengine/loading/spriterdocumentloader.cpp	/^	void SpriterDocumentLoader::getTaglinesFromMetaDataElement(SpriterFileElementWrapper *metaDataE/;"	f	class:SpriterEngine::SpriterDocumentLoader	typeref:typename:void
getTags	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	UniversalObjectInterface *EntityInstance::getTags() const$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:UniversalObjectInterface *
getTags	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	UniversalObjectInterface *EntityInstance::getTags(const std::string &objectName) const$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:UniversalObjectInterface *
getTags	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	UniversalObjectInterface *EntityInstance::getTags(int objectId) const$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:UniversalObjectInterface *
getTags	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	UniversalObjectInterface *EntityInstanceData::getTags() const$/;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:UniversalObjectInterface *
getTags	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	UniversalObjectInterface *EntityInstanceData::getTags(const std::string &objectName) const$/;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:UniversalObjectInterface *
getTags	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	UniversalObjectInterface *EntityInstanceData::getTags(int objectId) const$/;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:UniversalObjectInterface *
getTags	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	UniversalObjectInterface *UniversalObjectInterface::getTags() const$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:UniversalObjectInterface *
getTexture	dependencies/spriter/spriterengine/user_override/sfmlatlasfile.cpp	/^	const sf::Texture* SfmlAtlasFile::getTexture() const$/;"	f	class:SpriterEngine::SfmlAtlasFile	typeref:typename:const sf::Texture *
getTime	dependencies/spriter/spriterengine/animation/mainlinekey.cpp	/^	real MainlineKey::getTime()$/;"	f	class:SpriterEngine::MainlineKey	typeref:typename:real
getTime	dependencies/spriter/spriterengine/animation/mainlinekeyinstance.cpp	/^	real MainlineKeyInstance::getTime()$/;"	f	class:SpriterEngine::MainlineKeyInstance	typeref:typename:real
getTime	dependencies/spriter/spriterengine/timeinfo/timeinfo.cpp	/^	real TimeInfo::getTime()$/;"	f	class:SpriterEngine::TimeInfo	typeref:typename:real
getTime	dependencies/spriter/spriterengine/timeline/timelinekey.cpp	/^	real TimelineKey::getTime()$/;"	f	class:SpriterEngine::TimelineKey	typeref:typename:real
getTimeInfoFromElement	dependencies/spriter/spriterengine/loading/spriterdocumentloader.cpp	/^	TimeInfo *SpriterDocumentLoader::getTimeInfoFromElement(SpriterFileElementWrapper *validCurrent/;"	f	class:SpriterEngine::SpriterDocumentLoader	typeref:typename:TimeInfo *
getTimeRatio	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	real EntityInstance::getTimeRatio()$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:real
getTimeRatio	dependencies/spriter/spriterengine/objectinfo/entityobjectinfo.cpp	/^	real EntityObjectInfo::getTimeRatio()$/;"	f	class:SpriterEngine::EntityObjectInfo	typeref:typename:real
getTimeRatio	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	real UniversalObjectInterface::getTimeRatio()$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:real
getTimeRatio	dependencies/spriter/spriterengine/timeinfo/timeinfo.cpp	/^	real TimeInfo::getTimeRatio(real currentTime)$/;"	f	class:SpriterEngine::TimeInfo	typeref:typename:real
getTimelinesFromAnimationElement	dependencies/spriter/spriterengine/loading/spriterdocumentloader.cpp	/^	void SpriterDocumentLoader::getTimelinesFromAnimationElement(SpriterFileElementWrapper *animati/;"	f	class:SpriterEngine::SpriterDocumentLoader	typeref:typename:void
getTransformer	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	TransformProcessor *EntityInstanceData::getTransformer(int id)$/;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:TransformProcessor *
getTriggerCount	dependencies/spriter/spriterengine/objectinfo/soundobjectinfo.cpp	/^	int SoundObjectInfo::getTriggerCount()$/;"	f	class:SpriterEngine::SoundObjectInfo	typeref:typename:int
getTriggerCount	dependencies/spriter/spriterengine/objectinfo/triggerobjectinfo.cpp	/^	int TriggerObjectInfo::getTriggerCount()$/;"	f	class:SpriterEngine::TriggerObjectInfo	typeref:typename:int
getTriggerCount	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	int UniversalObjectInterface::getTriggerCount()$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:int
getTriggerCount	dependencies/spriter/spriterengine/override/soundobjectinforeference.cpp	/^	int SoundObjectInfoReference::getTriggerCount()$/;"	f	class:SpriterEngine::SoundObjectInfoReference	typeref:typename:int
getTriggerObject	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	UniversalObjectInterface *EntityInstance::getTriggerObject(const std::string &triggerName)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:UniversalObjectInterface *
getTriggerObject	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	UniversalObjectInterface *EntityInstance::getTriggerObject(int triggerId)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:UniversalObjectInterface *
getTriggerObject	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	UniversalObjectInterface *EntityInstanceData::getTriggerObject(const std::string &triggerName)$/;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:UniversalObjectInterface *
getTriggerObject	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	UniversalObjectInterface *EntityInstanceData::getTriggerObject(int triggerId)$/;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:UniversalObjectInterface *
getType	dependencies/spriter/spriterengine/entity/object.cpp	/^	Object::ObjectType Object::getType()$/;"	f	class:SpriterEngine::Object	typeref:typename:Object::ObjectType
getType	dependencies/spriter/spriterengine/variable/variable.cpp	/^	Variable::VariableType Variable::getType()$/;"	f	class:SpriterEngine::Variable	typeref:typename:Variable::VariableType
getType	include/Scene.h	/^	Type getType() const {$/;"	f	class:Scene	typeref:typename:Type
getVarDefArrayFromElement	dependencies/spriter/spriterengine/loading/spriterdocumentloader.cpp	/^	void SpriterDocumentLoader::getVarDefArrayFromElement(SpriterFileElementWrapper *parentObjectEl/;"	f	class:SpriterEngine::SpriterDocumentLoader	typeref:typename:void
getVariable	dependencies/spriter/spriterengine/entity/entity.cpp	/^	Variable * Entity::getVariable(int objectId, int variableId)$/;"	f	class:SpriterEngine::Entity	typeref:typename:Variable *
getVariable	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	UniversalObjectInterface *EntityInstance::getVariable(const std::string &objectName, const std:/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:UniversalObjectInterface *
getVariable	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	UniversalObjectInterface *EntityInstance::getVariable(const std::string &variableName)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:UniversalObjectInterface *
getVariable	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	UniversalObjectInterface *EntityInstance::getVariable(int objectId, int variableId)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:UniversalObjectInterface *
getVariable	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	UniversalObjectInterface *EntityInstance::getVariable(int variableId)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:UniversalObjectInterface *
getVariable	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	UniversalObjectInterface *EntityInstanceData::getVariable(const std::string &objectName, const /;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:UniversalObjectInterface *
getVariable	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	UniversalObjectInterface *EntityInstanceData::getVariable(const std::string &variableName)$/;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:UniversalObjectInterface *
getVariable	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	UniversalObjectInterface *EntityInstanceData::getVariable(int objectId, int variableId)$/;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:UniversalObjectInterface *
getVariable	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	UniversalObjectInterface *EntityInstanceData::getVariable(int variableId)$/;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:UniversalObjectInterface *
getVariable	dependencies/spriter/spriterengine/variable/variablecontainer.cpp	/^	Variable *VariableContainer::getVariable(int variableIndex)$/;"	f	class:SpriterEngine::VariableContainer	typeref:typename:Variable *
getVariable	dependencies/spriter/spriterengine/variable/variableinstancenameandidmap.cpp	/^	UniversalObjectInterface *VariableInstanceNameAndIdMap::getVariable(int variableIndex)$/;"	f	class:SpriterEngine::VariableInstanceNameAndIdMap	typeref:typename:UniversalObjectInterface *
getVariable	dependencies/spriter/spriterengine/variable/variableinstancenameandidmap.cpp	/^	UniversalObjectInterface *VariableInstanceNameAndIdMap::getVariable(std::string variableName)$/;"	f	class:SpriterEngine::VariableInstanceNameAndIdMap	typeref:typename:UniversalObjectInterface *
getVariableInstanceMap	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	VariableInstanceNameAndIdMap *EntityInstanceData::getVariableInstanceMap(int objectId, const st/;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:VariableInstanceNameAndIdMap *
getVariables	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	VariableInstanceNameAndIdMap *EntityInstance::getVariables()$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:VariableInstanceNameAndIdMap *
getVariables	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	VariableInstanceNameAndIdMap *EntityInstance::getVariables(const std::string &objectName)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:VariableInstanceNameAndIdMap *
getVariables	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	VariableInstanceNameAndIdMap *EntityInstance::getVariables(int objectId)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:VariableInstanceNameAndIdMap *
getVariables	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	VariableInstanceNameAndIdMap *EntityInstanceData::getVariables()$/;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:VariableInstanceNameAndIdMap *
getVariables	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	VariableInstanceNameAndIdMap *EntityInstanceData::getVariables(const std::string &objectName)$/;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:VariableInstanceNameAndIdMap *
getVariables	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	VariableInstanceNameAndIdMap *EntityInstanceData::getVariables(int objectId)$/;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:VariableInstanceNameAndIdMap *
getVariables	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	VariableInstanceNameAndIdMap *UniversalObjectInterface::getVariables()$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:VariableInstanceNameAndIdMap *
getVarlinesFromMetaDataElement	dependencies/spriter/spriterengine/loading/spriterdocumentloader.cpp	/^	void SpriterDocumentLoader::getVarlinesFromMetaDataElement(SpriterFileElementWrapper *animation/;"	f	class:SpriterEngine::SpriterDocumentLoader	typeref:typename:void
getVolume	dependencies/spriter/spriterengine/objectinfo/soundobjectinfo.cpp	/^	real SoundObjectInfo::getVolume()$/;"	f	class:SpriterEngine::SoundObjectInfo	typeref:typename:real
getVolume	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	real UniversalObjectInterface::getVolume()$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:real
getVolume	dependencies/spriter/spriterengine/override/soundobjectinforeference.cpp	/^	real SoundObjectInfoReference::getVolume()$/;"	f	class:SpriterEngine::SoundObjectInfoReference	typeref:typename:real
getZOrder	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	ObjectInterfaceVector * EntityInstance::getZOrder()$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:ObjectInterfaceVector *
getZOrder	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	ObjectInterfaceVector * UniversalObjectInterface::getZOrder()$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:ObjectInterfaceVector *
get_allocator	dependencies/nlohmann/json.hpp	/^    static allocator_type get_allocator()$/;"	f	class:nlohmann::basic_json	typeref:typename:allocator_type
get_allocator	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static allocator_type get_allocator() {$/;"	f	class:nlohmann::basic_json	typeref:typename:allocator_type
get_and_create	dependencies/nlohmann/json.hpp	/^    BasicJsonType& get_and_create(BasicJsonType& j) const$/;"	f	class:nlohmann::json_pointer	typeref:typename:BasicJsonType &
get_and_create	dependencies/spriter/spriterengine/user_override/json.hpp	/^		BasicJsonType& get_and_create(BasicJsonType& j) const {$/;"	f	class:nlohmann::json_pointer	typeref:typename:BasicJsonType &
get_arithmetic_value	dependencies/nlohmann/json.hpp	/^void get_arithmetic_value(const BasicJsonType& j, ArithmeticType& val)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
get_arithmetic_value	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void get_arithmetic_value(const BasicJsonType& j, ArithmeticType& val) {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
get_cached_power_for_binary_exponent	dependencies/nlohmann/json.hpp	/^inline cached_power get_cached_power_for_binary_exponent(int e)$/;"	f	namespace:nlohmann::detail::dtoa_impl	typeref:typename:cached_power
get_cached_power_for_binary_exponent	dependencies/spriter/spriterengine/user_override/json.hpp	/^			inline cached_power get_cached_power_for_binary_exponent(int e) {$/;"	f	namespace:nlohmann::detail::dtoa_impl	typeref:typename:cached_power
get_cbor_array	dependencies/nlohmann/json.hpp	/^    BasicJsonType get_cbor_array(const NumberType len)$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType
get_cbor_array	dependencies/spriter/spriterengine/user_override/json.hpp	/^			BasicJsonType get_cbor_array(const NumberType len) {$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType
get_cbor_float_prefix	dependencies/nlohmann/json.hpp	/^    static constexpr CharType get_cbor_float_prefix(double)$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:CharType
get_cbor_float_prefix	dependencies/nlohmann/json.hpp	/^    static constexpr CharType get_cbor_float_prefix(float)$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:CharType
get_cbor_float_prefix	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static constexpr CharType get_cbor_float_prefix(double) {$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:CharType
get_cbor_float_prefix	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static constexpr CharType get_cbor_float_prefix(float) {$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:CharType
get_cbor_object	dependencies/nlohmann/json.hpp	/^    BasicJsonType get_cbor_object(const NumberType len)$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType
get_cbor_object	dependencies/spriter/spriterengine/user_override/json.hpp	/^			BasicJsonType get_cbor_object(const NumberType len) {$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType
get_cbor_string	dependencies/nlohmann/json.hpp	/^    string_t get_cbor_string()$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:string_t
get_cbor_string	dependencies/spriter/spriterengine/user_override/json.hpp	/^			string_t get_cbor_string() {$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:string_t
get_character	dependencies/nlohmann/json.hpp	/^    std::char_traits<char>::int_type get_character() noexcept override$/;"	f	class:nlohmann::detail::input_buffer_adapter	typeref:typename:std::char_traits<char>::int_type
get_character	dependencies/nlohmann/json.hpp	/^    std::char_traits<char>::int_type get_character() override$/;"	f	class:nlohmann::detail::input_stream_adapter	typeref:typename:std::char_traits<char>::int_type
get_character	dependencies/spriter/spriterengine/user_override/json.hpp	/^			std::char_traits<char>::int_type get_character() noexcept override {$/;"	f	class:nlohmann::detail::input_buffer_adapter	typeref:typename:std::char_traits<char>::int_type
get_character	dependencies/spriter/spriterengine/user_override/json.hpp	/^			std::char_traits<char>::int_type get_character() override {$/;"	f	class:nlohmann::detail::input_stream_adapter	typeref:typename:std::char_traits<char>::int_type
get_checked	dependencies/nlohmann/json.hpp	/^    BasicJsonType& get_checked(BasicJsonType* ptr) const$/;"	f	class:nlohmann::json_pointer	typeref:typename:BasicJsonType &
get_checked	dependencies/nlohmann/json.hpp	/^    const BasicJsonType& get_checked(const BasicJsonType* ptr) const$/;"	f	class:nlohmann::json_pointer	typeref:typename:const BasicJsonType &
get_checked	dependencies/spriter/spriterengine/user_override/json.hpp	/^		BasicJsonType& get_checked(BasicJsonType* ptr) const {$/;"	f	class:nlohmann::json_pointer	typeref:typename:BasicJsonType &
get_checked	dependencies/spriter/spriterengine/user_override/json.hpp	/^		const BasicJsonType& get_checked(const BasicJsonType* ptr) const {$/;"	f	class:nlohmann::json_pointer	typeref:typename:const BasicJsonType &
get_codepoint	dependencies/nlohmann/json.hpp	/^    int get_codepoint()$/;"	f	class:nlohmann::detail::lexer	typeref:typename:int
get_codepoint	dependencies/spriter/spriterengine/user_override/json.hpp	/^			int get_codepoint() {$/;"	f	class:nlohmann::detail::lexer	typeref:typename:int
get_decimal_point	dependencies/nlohmann/json.hpp	/^    static char get_decimal_point() noexcept$/;"	f	class:nlohmann::detail::lexer	typeref:typename:char
get_decimal_point	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static char get_decimal_point() noexcept {$/;"	f	class:nlohmann::detail::lexer	typeref:typename:char
get_error_message	dependencies/nlohmann/json.hpp	/^    constexpr const char* get_error_message() const noexcept$/;"	f	class:nlohmann::detail::lexer	typeref:typename:const char *
get_error_message	dependencies/spriter/spriterengine/user_override/json.hpp	/^			constexpr const char* get_error_message() const noexcept {$/;"	f	class:nlohmann::detail::lexer	typeref:typename:const char *
get_ignore_noop	dependencies/nlohmann/json.hpp	/^    int get_ignore_noop()$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:int
get_ignore_noop	dependencies/spriter/spriterengine/user_override/json.hpp	/^			int get_ignore_noop() {$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:int
get_impl	dependencies/nlohmann/json.hpp	/^    boolean_t get_impl(boolean_t* \/*unused*\/) const$/;"	f	class:nlohmann::basic_json	typeref:typename:boolean_t
get_impl	dependencies/spriter/spriterengine/user_override/json.hpp	/^			boolean_t get_impl(boolean_t* \/*unused*\/) const {$/;"	f	class:nlohmann::basic_json	typeref:typename:boolean_t
get_impl_ptr	dependencies/nlohmann/json.hpp	/^    array_t* get_impl_ptr(array_t* \/*unused*\/) noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:array_t *
get_impl_ptr	dependencies/nlohmann/json.hpp	/^    boolean_t* get_impl_ptr(boolean_t* \/*unused*\/) noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:boolean_t *
get_impl_ptr	dependencies/nlohmann/json.hpp	/^    constexpr const array_t* get_impl_ptr(const array_t* \/*unused*\/) const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:const array_t *
get_impl_ptr	dependencies/nlohmann/json.hpp	/^    constexpr const boolean_t* get_impl_ptr(const boolean_t* \/*unused*\/) const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:const boolean_t *
get_impl_ptr	dependencies/nlohmann/json.hpp	/^    constexpr const number_float_t* get_impl_ptr(const number_float_t* \/*unused*\/) const noexc/;"	f	class:nlohmann::basic_json	typeref:typename:const number_float_t *
get_impl_ptr	dependencies/nlohmann/json.hpp	/^    constexpr const number_integer_t* get_impl_ptr(const number_integer_t* \/*unused*\/) const n/;"	f	class:nlohmann::basic_json	typeref:typename:const number_integer_t *
get_impl_ptr	dependencies/nlohmann/json.hpp	/^    constexpr const number_unsigned_t* get_impl_ptr(const number_unsigned_t* \/*unused*\/) const/;"	f	class:nlohmann::basic_json	typeref:typename:const number_unsigned_t *
get_impl_ptr	dependencies/nlohmann/json.hpp	/^    constexpr const object_t* get_impl_ptr(const object_t* \/*unused*\/) const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:const object_t *
get_impl_ptr	dependencies/nlohmann/json.hpp	/^    constexpr const string_t* get_impl_ptr(const string_t* \/*unused*\/) const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:const string_t *
get_impl_ptr	dependencies/nlohmann/json.hpp	/^    number_float_t* get_impl_ptr(number_float_t* \/*unused*\/) noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:number_float_t *
get_impl_ptr	dependencies/nlohmann/json.hpp	/^    number_integer_t* get_impl_ptr(number_integer_t* \/*unused*\/) noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:number_integer_t *
get_impl_ptr	dependencies/nlohmann/json.hpp	/^    number_unsigned_t* get_impl_ptr(number_unsigned_t* \/*unused*\/) noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:number_unsigned_t *
get_impl_ptr	dependencies/nlohmann/json.hpp	/^    object_t* get_impl_ptr(object_t* \/*unused*\/) noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:object_t *
get_impl_ptr	dependencies/nlohmann/json.hpp	/^    string_t* get_impl_ptr(string_t* \/*unused*\/) noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:string_t *
get_impl_ptr	dependencies/spriter/spriterengine/user_override/json.hpp	/^			array_t* get_impl_ptr(array_t* \/*unused*\/) noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:array_t *
get_impl_ptr	dependencies/spriter/spriterengine/user_override/json.hpp	/^			boolean_t* get_impl_ptr(boolean_t* \/*unused*\/) noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:boolean_t *
get_impl_ptr	dependencies/spriter/spriterengine/user_override/json.hpp	/^			constexpr const array_t* get_impl_ptr(const array_t* \/*unused*\/) const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:const array_t *
get_impl_ptr	dependencies/spriter/spriterengine/user_override/json.hpp	/^			constexpr const boolean_t* get_impl_ptr(const boolean_t* \/*unused*\/) const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:const boolean_t *
get_impl_ptr	dependencies/spriter/spriterengine/user_override/json.hpp	/^			constexpr const number_float_t* get_impl_ptr(const number_float_t* \/*unused*\/) const noexce/;"	f	class:nlohmann::basic_json	typeref:typename:const number_float_t *
get_impl_ptr	dependencies/spriter/spriterengine/user_override/json.hpp	/^			constexpr const number_integer_t* get_impl_ptr(const number_integer_t* \/*unused*\/) const no/;"	f	class:nlohmann::basic_json	typeref:typename:const number_integer_t *
get_impl_ptr	dependencies/spriter/spriterengine/user_override/json.hpp	/^			constexpr const number_unsigned_t* get_impl_ptr(const number_unsigned_t* \/*unused*\/) const /;"	f	class:nlohmann::basic_json	typeref:typename:const number_unsigned_t *
get_impl_ptr	dependencies/spriter/spriterengine/user_override/json.hpp	/^			constexpr const object_t* get_impl_ptr(const object_t* \/*unused*\/) const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:const object_t *
get_impl_ptr	dependencies/spriter/spriterengine/user_override/json.hpp	/^			constexpr const string_t* get_impl_ptr(const string_t* \/*unused*\/) const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:const string_t *
get_impl_ptr	dependencies/spriter/spriterengine/user_override/json.hpp	/^			number_float_t* get_impl_ptr(number_float_t* \/*unused*\/) noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:number_float_t *
get_impl_ptr	dependencies/spriter/spriterengine/user_override/json.hpp	/^			number_integer_t* get_impl_ptr(number_integer_t* \/*unused*\/) noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:number_integer_t *
get_impl_ptr	dependencies/spriter/spriterengine/user_override/json.hpp	/^			number_unsigned_t* get_impl_ptr(number_unsigned_t* \/*unused*\/) noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:number_unsigned_t *
get_impl_ptr	dependencies/spriter/spriterengine/user_override/json.hpp	/^			object_t* get_impl_ptr(object_t* \/*unused*\/) noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:object_t *
get_impl_ptr	dependencies/spriter/spriterengine/user_override/json.hpp	/^			string_t* get_impl_ptr(string_t* \/*unused*\/) noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:string_t *
get_msgpack_array	dependencies/nlohmann/json.hpp	/^    BasicJsonType get_msgpack_array(const NumberType len)$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType
get_msgpack_array	dependencies/spriter/spriterengine/user_override/json.hpp	/^			BasicJsonType get_msgpack_array(const NumberType len) {$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType
get_msgpack_float_prefix	dependencies/nlohmann/json.hpp	/^    static constexpr CharType get_msgpack_float_prefix(double)$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:CharType
get_msgpack_float_prefix	dependencies/nlohmann/json.hpp	/^    static constexpr CharType get_msgpack_float_prefix(float)$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:CharType
get_msgpack_float_prefix	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static constexpr CharType get_msgpack_float_prefix(double) {$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:CharType
get_msgpack_float_prefix	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static constexpr CharType get_msgpack_float_prefix(float) {$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:CharType
get_msgpack_object	dependencies/nlohmann/json.hpp	/^    BasicJsonType get_msgpack_object(const NumberType len)$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType
get_msgpack_object	dependencies/spriter/spriterengine/user_override/json.hpp	/^			BasicJsonType get_msgpack_object(const NumberType len) {$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType
get_msgpack_string	dependencies/nlohmann/json.hpp	/^    string_t get_msgpack_string()$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:string_t
get_msgpack_string	dependencies/spriter/spriterengine/user_override/json.hpp	/^			string_t get_msgpack_string() {$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:string_t
get_number	dependencies/nlohmann/json.hpp	/^    template<typename NumberType> NumberType get_number()$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:NumberType
get_number	dependencies/spriter/spriterengine/user_override/json.hpp	/^			template<typename NumberType> NumberType get_number() {$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:NumberType
get_number_float	dependencies/nlohmann/json.hpp	/^    constexpr number_float_t get_number_float() const noexcept$/;"	f	class:nlohmann::detail::lexer	typeref:typename:number_float_t
get_number_float	dependencies/spriter/spriterengine/user_override/json.hpp	/^			constexpr number_float_t get_number_float() const noexcept {$/;"	f	class:nlohmann::detail::lexer	typeref:typename:number_float_t
get_number_integer	dependencies/nlohmann/json.hpp	/^    constexpr number_integer_t get_number_integer() const noexcept$/;"	f	class:nlohmann::detail::lexer	typeref:typename:number_integer_t
get_number_integer	dependencies/spriter/spriterengine/user_override/json.hpp	/^			constexpr number_integer_t get_number_integer() const noexcept {$/;"	f	class:nlohmann::detail::lexer	typeref:typename:number_integer_t
get_number_unsigned	dependencies/nlohmann/json.hpp	/^    constexpr number_unsigned_t get_number_unsigned() const noexcept$/;"	f	class:nlohmann::detail::lexer	typeref:typename:number_unsigned_t
get_number_unsigned	dependencies/spriter/spriterengine/user_override/json.hpp	/^			constexpr number_unsigned_t get_number_unsigned() const noexcept {$/;"	f	class:nlohmann::detail::lexer	typeref:typename:number_unsigned_t
get_position	dependencies/nlohmann/json.hpp	/^    constexpr std::size_t get_position() const noexcept$/;"	f	class:nlohmann::detail::lexer	typeref:typename:std::size_t
get_position	dependencies/spriter/spriterengine/user_override/json.hpp	/^			constexpr std::size_t get_position() const noexcept {$/;"	f	class:nlohmann::detail::lexer	typeref:typename:std::size_t
get_ptr	dependencies/nlohmann/json.hpp	/^    PointerType get_ptr() noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:PointerType
get_ptr	dependencies/nlohmann/json.hpp	/^    constexpr const PointerType get_ptr() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:const PointerType
get_ptr	dependencies/spriter/spriterengine/user_override/json.hpp	/^				PointerType get_ptr() noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:PointerType
get_ptr	dependencies/spriter/spriterengine/user_override/json.hpp	/^				constexpr const PointerType get_ptr() const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:const PointerType
get_ref	dependencies/nlohmann/json.hpp	/^    ReferenceType get_ref() const$/;"	f	class:nlohmann::basic_json	typeref:typename:ReferenceType
get_ref	dependencies/nlohmann/json.hpp	/^    ReferenceType get_ref()$/;"	f	class:nlohmann::basic_json	typeref:typename:ReferenceType
get_ref	dependencies/spriter/spriterengine/user_override/json.hpp	/^				ReferenceType get_ref() const {$/;"	f	class:nlohmann::basic_json	typeref:typename:ReferenceType
get_ref	dependencies/spriter/spriterengine/user_override/json.hpp	/^				ReferenceType get_ref() {$/;"	f	class:nlohmann::basic_json	typeref:typename:ReferenceType
get_ref_impl	dependencies/nlohmann/json.hpp	/^    static ReferenceType get_ref_impl(ThisType& obj)$/;"	f	class:nlohmann::basic_json	typeref:typename:ReferenceType
get_ref_impl	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static ReferenceType get_ref_impl(ThisType& obj) {$/;"	f	class:nlohmann::basic_json	typeref:typename:ReferenceType
get_string	dependencies/nlohmann/json.hpp	/^    string_t get_string(const NumberType len)$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:string_t
get_string	dependencies/spriter/spriterengine/user_override/json.hpp	/^			string_t get_string(const NumberType len) {$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:string_t
get_token	dependencies/nlohmann/json.hpp	/^    token_type get_token()$/;"	f	class:nlohmann::detail::parser	typeref:typename:token_type
get_token	dependencies/spriter/spriterengine/user_override/json.hpp	/^			token_type get_token() {$/;"	f	class:nlohmann::detail::parser	typeref:typename:token_type
get_token_string	dependencies/nlohmann/json.hpp	/^    std::string get_token_string() const$/;"	f	class:nlohmann::detail::lexer	typeref:typename:std::string
get_token_string	dependencies/spriter/spriterengine/user_override/json.hpp	/^			std::string get_token_string() const {$/;"	f	class:nlohmann::detail::lexer	typeref:typename:std::string
get_ubjson_array	dependencies/nlohmann/json.hpp	/^    BasicJsonType get_ubjson_array()$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType
get_ubjson_array	dependencies/spriter/spriterengine/user_override/json.hpp	/^			BasicJsonType get_ubjson_array() {$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType
get_ubjson_float_prefix	dependencies/nlohmann/json.hpp	/^    static constexpr CharType get_ubjson_float_prefix(double)$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:CharType
get_ubjson_float_prefix	dependencies/nlohmann/json.hpp	/^    static constexpr CharType get_ubjson_float_prefix(float)$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:CharType
get_ubjson_float_prefix	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static constexpr CharType get_ubjson_float_prefix(double) {$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:CharType
get_ubjson_float_prefix	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static constexpr CharType get_ubjson_float_prefix(float) {$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:CharType
get_ubjson_object	dependencies/nlohmann/json.hpp	/^    BasicJsonType get_ubjson_object()$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType
get_ubjson_object	dependencies/spriter/spriterengine/user_override/json.hpp	/^			BasicJsonType get_ubjson_object() {$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType
get_ubjson_size_type	dependencies/nlohmann/json.hpp	/^    std::pair<std::size_t, int> get_ubjson_size_type()$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:std::pair<std::size_t,int>
get_ubjson_size_type	dependencies/spriter/spriterengine/user_override/json.hpp	/^			std::pair<std::size_t, int> get_ubjson_size_type() {$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:std::pair<std::size_t,int>
get_ubjson_string	dependencies/nlohmann/json.hpp	/^    string_t get_ubjson_string(const bool get_char = true)$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:string_t
get_ubjson_string	dependencies/spriter/spriterengine/user_override/json.hpp	/^			string_t get_ubjson_string(const bool get_char = true) {$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:string_t
get_ubjson_value	dependencies/nlohmann/json.hpp	/^    BasicJsonType get_ubjson_value(const int prefix)$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType
get_ubjson_value	dependencies/spriter/spriterengine/user_override/json.hpp	/^			BasicJsonType get_ubjson_value(const int prefix) {$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType
get_unchecked	dependencies/nlohmann/json.hpp	/^    BasicJsonType& get_unchecked(BasicJsonType* ptr) const$/;"	f	class:nlohmann::json_pointer	typeref:typename:BasicJsonType &
get_unchecked	dependencies/nlohmann/json.hpp	/^    const BasicJsonType& get_unchecked(const BasicJsonType* ptr) const$/;"	f	class:nlohmann::json_pointer	typeref:typename:const BasicJsonType &
get_unchecked	dependencies/spriter/spriterengine/user_override/json.hpp	/^		BasicJsonType& get_unchecked(BasicJsonType* ptr) const {$/;"	f	class:nlohmann::json_pointer	typeref:typename:BasicJsonType &
get_unchecked	dependencies/spriter/spriterengine/user_override/json.hpp	/^		const BasicJsonType& get_unchecked(const BasicJsonType* ptr) const {$/;"	f	class:nlohmann::json_pointer	typeref:typename:const BasicJsonType &
get_value	dependencies/nlohmann/json.hpp	/^    constexpr difference_type get_value() const noexcept$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:difference_type
get_value	dependencies/spriter/spriterengine/user_override/json.hpp	/^			constexpr difference_type get_value() const noexcept {$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:difference_type
glStatesSet	dependencies/sfml/include/SFML/Graphics/RenderTarget.hpp	/^        bool      glStatesSet;    \/\/\/< Are our internal GL states set yet?$/;"	m	struct:sf::RenderTarget::StatesCache	typeref:typename:bool
glyphs	dependencies/sfml/include/SFML/Graphics/Font.hpp	/^        GlyphTable       glyphs;  \/\/\/< Table mapping code points to their corresponding glyph$/;"	m	struct:sf::Font::Page	typeref:typename:GlyphTable
grisu2	dependencies/nlohmann/json.hpp	/^inline void grisu2(char* buf, int& len, int& decimal_exponent,$/;"	f	namespace:nlohmann::detail::dtoa_impl	typeref:typename:void
grisu2	dependencies/nlohmann/json.hpp	/^void grisu2(char* buf, int& len, int& decimal_exponent, FloatType value)$/;"	f	namespace:nlohmann::detail::dtoa_impl	typeref:typename:void
grisu2	dependencies/spriter/spriterengine/user_override/json.hpp	/^			inline void grisu2(char* buf, int& len, int& decimal_exponent,$/;"	f	namespace:nlohmann::detail::dtoa_impl	typeref:typename:void
grisu2	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void grisu2(char* buf, int& len, int& decimal_exponent, FloatType value) {$/;"	f	namespace:nlohmann::detail::dtoa_impl	typeref:typename:void
grisu2_digit_gen	dependencies/nlohmann/json.hpp	/^inline void grisu2_digit_gen(char* buffer, int& length, int& decimal_exponent,$/;"	f	namespace:nlohmann::detail::dtoa_impl	typeref:typename:void
grisu2_digit_gen	dependencies/spriter/spriterengine/user_override/json.hpp	/^			inline void grisu2_digit_gen(char* buffer, int& length, int& decimal_exponent,$/;"	f	namespace:nlohmann::detail::dtoa_impl	typeref:typename:void
grisu2_round	dependencies/nlohmann/json.hpp	/^inline void grisu2_round(char* buf, int len, uint64_t dist, uint64_t delta,$/;"	f	namespace:nlohmann::detail::dtoa_impl	typeref:typename:void
grisu2_round	dependencies/spriter/spriterengine/user_override/json.hpp	/^			inline void grisu2_round(char* buf, int len, uint64_t dist, uint64_t delta,$/;"	f	namespace:nlohmann::detail::dtoa_impl	typeref:typename:void
h	dependencies/spriter/spriterengine/global/atlas.h	/^                real h;$/;"	m	struct:SpriterEngine::atlasdata	typeref:typename:real
handleEvents	src/GameOverScene.cpp	/^void GameOverScene::handleEvents(const sf::Event& ev) {$/;"	f	class:GameOverScene	typeref:typename:void
handleEvents	src/GameScene.cpp	/^void GameScene::handleEvents(const sf::Event& ev) {$/;"	f	class:GameScene	typeref:typename:void
handleEvents	src/MenuScene.cpp	/^void MenuScene::handleEvents(const sf::Event& ev) {$/;"	f	class:MenuScene	typeref:typename:void
handleEvents	src/SceneManager.cpp	/^void SceneManager::handleEvents() {$/;"	f	class:SceneManager	typeref:typename:void
has_from_json	dependencies/nlohmann/json.hpp	/^struct has_from_json$/;"	s	namespace:nlohmann::detail
has_from_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^		struct has_from_json {$/;"	s	namespace:nlohmann::detail
has_non_default_from_json	dependencies/nlohmann/json.hpp	/^struct has_non_default_from_json$/;"	s	namespace:nlohmann::detail
has_non_default_from_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^		struct has_non_default_from_json {$/;"	s	namespace:nlohmann::detail
has_to_json	dependencies/nlohmann/json.hpp	/^struct has_to_json$/;"	s	namespace:nlohmann::detail
has_to_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^		struct has_to_json {$/;"	s	namespace:nlohmann::detail
hash	dependencies/nlohmann/json.hpp	/^struct hash<nlohmann::json>$/;"	s	namespace:std
hash	dependencies/spriter/spriterengine/user_override/json.hpp	/^	struct hash<nlohmann::json> {$/;"	s	namespace:std
height	dependencies/sfml/include/SFML/Graphics/Font.hpp	/^        unsigned int height; \/\/\/< Height of the row$/;"	m	struct:sf::Font::Row	typeref:typename:unsigned int
height	dependencies/sfml/include/SFML/Graphics/Rect.hpp	/^    T height; \/\/\/< Height of the rectangle$/;"	m	class:sf::Rect	typeref:typename:T
height	dependencies/sfml/include/SFML/Window/Event.hpp	/^        unsigned int height; \/\/\/< New height, in pixels$/;"	m	struct:sf::Event::SizeEvent	typeref:typename:unsigned int
height	dependencies/sfml/include/SFML/Window/VideoMode.hpp	/^    unsigned int height;       \/\/\/< Video mode height, in pixels$/;"	m	class:sf::VideoMode	typeref:typename:unsigned int
ia	dependencies/nlohmann/json.hpp	/^    detail::input_adapter_t ia = nullptr;$/;"	m	class:nlohmann::detail::lexer	typeref:typename:detail::input_adapter_t
ia	dependencies/nlohmann/json.hpp	/^    input_adapter_t ia = nullptr;$/;"	m	class:nlohmann::detail::binary_reader	typeref:typename:input_adapter_t
ia	dependencies/nlohmann/json.hpp	/^    input_adapter_t ia = nullptr;$/;"	m	class:nlohmann::detail::input_adapter	typeref:typename:input_adapter_t
ia	dependencies/spriter/spriterengine/user_override/json.hpp	/^			detail::input_adapter_t ia = nullptr;$/;"	m	class:nlohmann::detail::lexer	typeref:typename:detail::input_adapter_t
ia	dependencies/spriter/spriterengine/user_override/json.hpp	/^			input_adapter_t ia = nullptr;$/;"	m	class:nlohmann::detail::binary_reader	typeref:typename:input_adapter_t
ia	dependencies/spriter/spriterengine/user_override/json.hpp	/^			input_adapter_t ia = nullptr;$/;"	m	class:nlohmann::detail::input_adapter	typeref:typename:input_adapter_t
id	dependencies/nlohmann/json.hpp	/^    const int id;$/;"	m	class:nlohmann::detail::exception	typeref:typename:const int
id	dependencies/spriter/spriterengine/objectref/objectref.cpp	/^	int ObjectRef::id()$/;"	f	class:SpriterEngine::ObjectRef	typeref:typename:int
id	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const int id;$/;"	m	class:nlohmann::detail::exception	typeref:typename:const int
image	dependencies/spriter/spriterengine/file/filereference.cpp	/^	ImageFile *FileReference::image()$/;"	f	class:SpriterEngine::FileReference	typeref:typename:ImageFile *
imageFile	dependencies/spriter/spriterengine/file/file.cpp	/^	ImageFile *File::imageFile()$/;"	f	class:SpriterEngine::File	typeref:typename:ImageFile *
imageFile	dependencies/spriter/spriterengine/objectinfo/spriteobjectinfo.h	/^		ImageFile *imageFile;$/;"	m	class:SpriterEngine::SpriteObjectInfo	typeref:typename:ImageFile *
imageFile	dependencies/spriter/spriterengine/override/imagefile.cpp	/^	ImageFile *ImageFile::imageFile()$/;"	f	class:SpriterEngine::ImageFile	typeref:typename:ImageFile *
imageRef	dependencies/spriter/spriterengine/objectref/spriterefinstance.h	/^		FileReference *imageRef;$/;"	m	class:SpriterEngine::SpriteRefInstance	typeref:typename:FileReference *
indent_char	dependencies/nlohmann/json.hpp	/^    const char indent_char;$/;"	m	class:nlohmann::detail::serializer	typeref:typename:const char
indent_char	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const char indent_char;$/;"	m	class:nlohmann::detail::serializer	typeref:typename:const char
indent_string	dependencies/nlohmann/json.hpp	/^    string_t indent_string;$/;"	m	class:nlohmann::detail::serializer	typeref:typename:string_t
indent_string	dependencies/spriter/spriterengine/user_override/json.hpp	/^			string_t indent_string;$/;"	m	class:nlohmann::detail::serializer	typeref:typename:string_t
index_sequence	dependencies/nlohmann/json.hpp	/^struct index_sequence$/;"	s	namespace:nlohmann::detail
index_sequence	dependencies/spriter/spriterengine/user_override/json.hpp	/^		struct index_sequence {$/;"	s	namespace:nlohmann::detail
index_sequence_for	dependencies/nlohmann/json.hpp	/^using index_sequence_for = make_index_sequence<sizeof...(Ts)>;$/;"	t	namespace:nlohmann::detail
index_sequence_for	dependencies/spriter/spriterengine/user_override/json.hpp	/^		using index_sequence_for = make_index_sequence<sizeof...(Ts)>;$/;"	t	namespace:nlohmann::detail
initializationIds	dependencies/spriter/spriterengine/entity/object.h	/^		IdVector initializationIds;$/;"	m	class:SpriterEngine::Object	typeref:typename:IdVector
initializeFile	dependencies/spriter/spriterengine/user_override/sfmlatlasfile.cpp	/^	void SfmlAtlasFile::initializeFile()$/;"	f	class:SpriterEngine::SfmlAtlasFile	typeref:typename:void
initializeFile	dependencies/spriter/spriterengine/user_override/sfmlimagefile.cpp	/^	void SfmlImageFile::initializeFile()$/;"	f	class:SpriterEngine::SfmlImageFile	typeref:typename:void
initializeFile	dependencies/spriter/spriterengine/user_override/sfmlsoundfile.cpp	/^	void SfmlSoundFile::initializeFile()$/;"	f	class:SpriterEngine::SfmlSoundFile	typeref:typename:void
initializer_list_t	dependencies/nlohmann/json.hpp	/^    using initializer_list_t = std::initializer_list<detail::json_ref<basic_json>>;$/;"	t	class:nlohmann::basic_json	typeref:typename:std::initializer_list<detail::json_ref<basic_json>>
initializer_list_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using initializer_list_t = std::initializer_list<detail::json_ref<basic_json>>;$/;"	t	class:nlohmann::basic_json	typeref:typename:std::initializer_list<detail::json_ref<basic_json>>
input_adapter	dependencies/nlohmann/json.hpp	/^    input_adapter(CharT b)$/;"	f	class:nlohmann::detail::input_adapter
input_adapter	dependencies/nlohmann/json.hpp	/^    input_adapter(CharT b, std::size_t l)$/;"	f	class:nlohmann::detail::input_adapter
input_adapter	dependencies/nlohmann/json.hpp	/^    input_adapter(IteratorType first, IteratorType last)$/;"	f	class:nlohmann::detail::input_adapter
input_adapter	dependencies/nlohmann/json.hpp	/^    input_adapter(T (&array)[N])$/;"	f	class:nlohmann::detail::input_adapter
input_adapter	dependencies/nlohmann/json.hpp	/^    input_adapter(const ContiguousContainer& c)$/;"	f	class:nlohmann::detail::input_adapter
input_adapter	dependencies/nlohmann/json.hpp	/^    input_adapter(std::istream& i)$/;"	f	class:nlohmann::detail::input_adapter
input_adapter	dependencies/nlohmann/json.hpp	/^    input_adapter(std::istream&& i)$/;"	f	class:nlohmann::detail::input_adapter
input_adapter	dependencies/nlohmann/json.hpp	/^class input_adapter$/;"	c	namespace:nlohmann::detail
input_adapter	dependencies/spriter/spriterengine/user_override/json.hpp	/^				input_adapter(CharT b)$/;"	f	class:nlohmann::detail::input_adapter
input_adapter	dependencies/spriter/spriterengine/user_override/json.hpp	/^				input_adapter(CharT b, std::size_t l)$/;"	f	class:nlohmann::detail::input_adapter
input_adapter	dependencies/spriter/spriterengine/user_override/json.hpp	/^				input_adapter(IteratorType first, IteratorType last) {$/;"	f	class:nlohmann::detail::input_adapter
input_adapter	dependencies/spriter/spriterengine/user_override/json.hpp	/^				input_adapter(const ContiguousContainer& c)$/;"	f	class:nlohmann::detail::input_adapter
input_adapter	dependencies/spriter/spriterengine/user_override/json.hpp	/^			input_adapter(T(&array)[N])$/;"	f	class:nlohmann::detail::input_adapter
input_adapter	dependencies/spriter/spriterengine/user_override/json.hpp	/^			input_adapter(std::istream& i)$/;"	f	class:nlohmann::detail::input_adapter
input_adapter	dependencies/spriter/spriterengine/user_override/json.hpp	/^			input_adapter(std::istream&& i)$/;"	f	class:nlohmann::detail::input_adapter
input_adapter	dependencies/spriter/spriterengine/user_override/json.hpp	/^		class input_adapter {$/;"	c	namespace:nlohmann::detail
input_adapter_protocol	dependencies/nlohmann/json.hpp	/^struct input_adapter_protocol$/;"	s	namespace:nlohmann::detail
input_adapter_protocol	dependencies/spriter/spriterengine/user_override/json.hpp	/^		struct input_adapter_protocol {$/;"	s	namespace:nlohmann::detail
input_adapter_t	dependencies/nlohmann/json.hpp	/^using input_adapter_t = std::shared_ptr<input_adapter_protocol>;$/;"	t	namespace:nlohmann::detail	typeref:typename:std::shared_ptr<input_adapter_protocol>
input_adapter_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^		using input_adapter_t = std::shared_ptr<input_adapter_protocol>;$/;"	t	namespace:nlohmann::detail	typeref:typename:std::shared_ptr<input_adapter_protocol>
input_buffer_adapter	dependencies/nlohmann/json.hpp	/^    input_buffer_adapter(const char* b, const std::size_t l)$/;"	f	class:nlohmann::detail::input_buffer_adapter
input_buffer_adapter	dependencies/nlohmann/json.hpp	/^class input_buffer_adapter : public input_adapter_protocol$/;"	c	namespace:nlohmann::detail
input_buffer_adapter	dependencies/spriter/spriterengine/user_override/json.hpp	/^			input_buffer_adapter(const char* b, const std::size_t l)$/;"	f	class:nlohmann::detail::input_buffer_adapter
input_buffer_adapter	dependencies/spriter/spriterengine/user_override/json.hpp	/^		class input_buffer_adapter : public input_adapter_protocol {$/;"	c	namespace:nlohmann::detail
input_stream_adapter	dependencies/nlohmann/json.hpp	/^    explicit input_stream_adapter(std::istream& i)$/;"	f	class:nlohmann::detail::input_stream_adapter
input_stream_adapter	dependencies/nlohmann/json.hpp	/^class input_stream_adapter : public input_adapter_protocol$/;"	c	namespace:nlohmann::detail
input_stream_adapter	dependencies/spriter/spriterengine/user_override/json.hpp	/^			explicit input_stream_adapter(std::istream& i)$/;"	f	class:nlohmann::detail::input_stream_adapter
input_stream_adapter	dependencies/spriter/spriterengine/user_override/json.hpp	/^		class input_stream_adapter : public input_adapter_protocol {$/;"	c	namespace:nlohmann::detail
insert	dependencies/nlohmann/json.hpp	/^    iterator insert(const_iterator pos, basic_json&& val)$/;"	f	class:nlohmann::basic_json	typeref:typename:iterator
insert	dependencies/nlohmann/json.hpp	/^    iterator insert(const_iterator pos, const basic_json& val)$/;"	f	class:nlohmann::basic_json	typeref:typename:iterator
insert	dependencies/nlohmann/json.hpp	/^    iterator insert(const_iterator pos, const_iterator first, const_iterator last)$/;"	f	class:nlohmann::basic_json	typeref:typename:iterator
insert	dependencies/nlohmann/json.hpp	/^    iterator insert(const_iterator pos, initializer_list_t ilist)$/;"	f	class:nlohmann::basic_json	typeref:typename:iterator
insert	dependencies/nlohmann/json.hpp	/^    iterator insert(const_iterator pos, size_type cnt, const basic_json& val)$/;"	f	class:nlohmann::basic_json	typeref:typename:iterator
insert	dependencies/nlohmann/json.hpp	/^    void insert(const_iterator first, const_iterator last)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
insert	dependencies/spriter/spriterengine/user_override/json.hpp	/^			iterator insert(const_iterator pos, basic_json&& val) {$/;"	f	class:nlohmann::basic_json	typeref:typename:iterator
insert	dependencies/spriter/spriterengine/user_override/json.hpp	/^			iterator insert(const_iterator pos, const basic_json& val) {$/;"	f	class:nlohmann::basic_json	typeref:typename:iterator
insert	dependencies/spriter/spriterengine/user_override/json.hpp	/^			iterator insert(const_iterator pos, const_iterator first, const_iterator last) {$/;"	f	class:nlohmann::basic_json	typeref:typename:iterator
insert	dependencies/spriter/spriterengine/user_override/json.hpp	/^			iterator insert(const_iterator pos, initializer_list_t ilist) {$/;"	f	class:nlohmann::basic_json	typeref:typename:iterator
insert	dependencies/spriter/spriterengine/user_override/json.hpp	/^			iterator insert(const_iterator pos, size_type cnt, const basic_json& val) {$/;"	f	class:nlohmann::basic_json	typeref:typename:iterator
insert	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void insert(const_iterator first, const_iterator last) {$/;"	f	class:nlohmann::basic_json	typeref:typename:void
internal_iterator	dependencies/nlohmann/json.hpp	/^    using internal_iterator = ::nlohmann::detail::internal_iterator<BasicJsonType>;$/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::internal_iterator<BasicJsonType>
internal_iterator	dependencies/nlohmann/json.hpp	/^template<typename BasicJsonType> struct internal_iterator$/;"	s	namespace:nlohmann::detail
internal_iterator	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using internal_iterator = ::nlohmann::detail::internal_iterator<BasicJsonType>;$/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::internal_iterator<BasicJsonType>
internal_iterator	dependencies/spriter/spriterengine/user_override/json.hpp	/^		template<typename BasicJsonType> struct internal_iterator {$/;"	s	namespace:nlohmann::detail
intersects	dependencies/sfml/include/SFML/Graphics/Rect.inl	/^bool Rect<T>::intersects(const Rect<T>& rectangle) const$/;"	f	class:Rect	typeref:typename:bool
intersects	dependencies/sfml/include/SFML/Graphics/Rect.inl	/^bool Rect<T>::intersects(const Rect<T>& rectangle, Rect<T>& intersection) const$/;"	f	class:Rect	typeref:typename:bool
invalid	dependencies/nlohmann/json.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:nlohmann::basic_json::patch::patch_operations
invalid	dependencies/spriter/spriterengine/user_override/json.hpp	/^				enum class patch_operations { add, remove, replace, move, copy, test, invalid };$/;"	e	enum:nlohmann::basic_json::patch::patch_operations
invalid_iterator	dependencies/nlohmann/json.hpp	/^    invalid_iterator(int id_, const char* what_arg)$/;"	f	class:nlohmann::detail::invalid_iterator
invalid_iterator	dependencies/nlohmann/json.hpp	/^    using invalid_iterator = detail::invalid_iterator;$/;"	t	class:nlohmann::basic_json	typeref:typename:detail::invalid_iterator
invalid_iterator	dependencies/nlohmann/json.hpp	/^class invalid_iterator : public exception$/;"	c	namespace:nlohmann::detail
invalid_iterator	dependencies/spriter/spriterengine/user_override/json.hpp	/^			invalid_iterator(int id_, const char* what_arg)$/;"	f	class:nlohmann::detail::invalid_iterator
invalid_iterator	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using invalid_iterator = detail::invalid_iterator;$/;"	t	class:nlohmann::basic_json	typeref:typename:detail::invalid_iterator
invalid_iterator	dependencies/spriter/spriterengine/user_override/json.hpp	/^		class invalid_iterator : public exception {$/;"	c	namespace:nlohmann::detail
inverseLinear	dependencies/spriter/spriterengine/global/global.h	/^	inline real inverseLinear(real a, real b, real x)$/;"	f	namespace:SpriterEngine	typeref:typename:real
is	dependencies/nlohmann/json.hpp	/^    std::istream& is;$/;"	m	class:nlohmann::detail::input_stream_adapter	typeref:typename:std::istream &
is	dependencies/spriter/spriterengine/user_override/json.hpp	/^			std::istream& is;$/;"	m	class:nlohmann::detail::input_stream_adapter	typeref:typename:std::istream &
isEmpty	dependencies/spriter/spriterengine/variable/variableinstancenameandidmap.cpp	/^	bool VariableInstanceNameAndIdMap::isEmpty()$/;"	f	class:SpriterEngine::VariableInstanceNameAndIdMap	typeref:typename:bool
isLooping	dependencies/spriter/spriterengine/animation/animation.h	/^		bool isLooping;$/;"	m	class:SpriterEngine::Animation	typeref:typename:bool
isLooping	dependencies/spriter/spriterengine/animation/animationinstance.h	/^		bool isLooping;$/;"	m	class:SpriterEngine::AnimationInstance	typeref:typename:bool
isPlaying	dependencies/spriter/spriterengine/entity/entityinstance.h	/^		bool isPlaying;$/;"	m	class:SpriterEngine::EntityInstance	typeref:typename:bool
isValid	dependencies/spriter/spriterengine/user_override/jsonspriterfileattributewrapper.cpp	/^	bool JSONSpriterFileAttributeWrapper::isValid()$/;"	f	class:SpriterEngine::JSONSpriterFileAttributeWrapper	typeref:typename:bool
isValid	dependencies/spriter/spriterengine/user_override/jsonspriterfileelementwrapper.cpp	/^	bool JSONSpriterFileElementWrapper::isValid()$/;"	f	class:SpriterEngine::JSONSpriterFileElementWrapper	typeref:typename:bool
is_array	dependencies/nlohmann/json.hpp	/^    constexpr bool is_array() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_array	dependencies/spriter/spriterengine/user_override/json.hpp	/^			constexpr bool is_array() const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_basic_json	dependencies/nlohmann/json.hpp	/^struct is_basic_json<NLOHMANN_BASIC_JSON_TPL> : std::true_type {};$/;"	s	namespace:nlohmann::detail
is_basic_json	dependencies/nlohmann/json.hpp	/^template<typename> struct is_basic_json : std::false_type {};$/;"	s	namespace:nlohmann::detail
is_basic_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^			struct is_basic_json<NLOHMANN_BASIC_JSON_TPL> : std::true_type {};$/;"	s	namespace:nlohmann::detail
is_basic_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^		template<typename> struct is_basic_json : std::false_type {};$/;"	s	namespace:nlohmann::detail
is_basic_json_nested_type	dependencies/nlohmann/json.hpp	/^struct is_basic_json_nested_type$/;"	s	namespace:nlohmann::detail
is_basic_json_nested_type	dependencies/spriter/spriterengine/user_override/json.hpp	/^		struct is_basic_json_nested_type {$/;"	s	namespace:nlohmann::detail
is_begin	dependencies/nlohmann/json.hpp	/^    constexpr bool is_begin() const noexcept$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:bool
is_begin	dependencies/spriter/spriterengine/user_override/json.hpp	/^			constexpr bool is_begin() const noexcept {$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:bool
is_boolean	dependencies/nlohmann/json.hpp	/^    constexpr bool is_boolean() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_boolean	dependencies/spriter/spriterengine/user_override/json.hpp	/^			constexpr bool is_boolean() const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_compatible_array_type	dependencies/nlohmann/json.hpp	/^struct is_compatible_array_type$/;"	s	namespace:nlohmann::detail
is_compatible_array_type	dependencies/spriter/spriterengine/user_override/json.hpp	/^		struct is_compatible_array_type {$/;"	s	namespace:nlohmann::detail
is_compatible_complete_type	dependencies/nlohmann/json.hpp	/^struct is_compatible_complete_type$/;"	s	namespace:nlohmann::detail
is_compatible_complete_type	dependencies/spriter/spriterengine/user_override/json.hpp	/^		struct is_compatible_complete_type {$/;"	s	namespace:nlohmann::detail
is_compatible_integer_type	dependencies/nlohmann/json.hpp	/^struct is_compatible_integer_type$/;"	s	namespace:nlohmann::detail
is_compatible_integer_type	dependencies/spriter/spriterengine/user_override/json.hpp	/^		struct is_compatible_integer_type {$/;"	s	namespace:nlohmann::detail
is_compatible_integer_type_impl	dependencies/nlohmann/json.hpp	/^struct is_compatible_integer_type_impl : std::false_type {};$/;"	s	namespace:nlohmann::detail
is_compatible_integer_type_impl	dependencies/nlohmann/json.hpp	/^struct is_compatible_integer_type_impl<true, RealIntegerType, CompatibleNumberIntegerType>$/;"	s	namespace:nlohmann::detail
is_compatible_integer_type_impl	dependencies/spriter/spriterengine/user_override/json.hpp	/^		struct is_compatible_integer_type_impl : std::false_type {};$/;"	s	namespace:nlohmann::detail
is_compatible_integer_type_impl	dependencies/spriter/spriterengine/user_override/json.hpp	/^		struct is_compatible_integer_type_impl<true, RealIntegerType, CompatibleNumberIntegerType> {$/;"	s	namespace:nlohmann::detail
is_compatible_object_type	dependencies/nlohmann/json.hpp	/^struct is_compatible_object_type$/;"	s	namespace:nlohmann::detail
is_compatible_object_type	dependencies/spriter/spriterengine/user_override/json.hpp	/^		struct is_compatible_object_type {$/;"	s	namespace:nlohmann::detail
is_compatible_object_type_impl	dependencies/nlohmann/json.hpp	/^struct is_compatible_object_type_impl : std::false_type {};$/;"	s	namespace:nlohmann::detail
is_compatible_object_type_impl	dependencies/nlohmann/json.hpp	/^struct is_compatible_object_type_impl<true, RealType, CompatibleObjectType>$/;"	s	namespace:nlohmann::detail
is_compatible_object_type_impl	dependencies/spriter/spriterengine/user_override/json.hpp	/^		struct is_compatible_object_type_impl : std::false_type {};$/;"	s	namespace:nlohmann::detail
is_compatible_object_type_impl	dependencies/spriter/spriterengine/user_override/json.hpp	/^		struct is_compatible_object_type_impl<true, RealType, CompatibleObjectType> {$/;"	s	namespace:nlohmann::detail
is_compatible_type	dependencies/nlohmann/json.hpp	/^struct is_compatible_type$/;"	s	namespace:nlohmann::detail
is_compatible_type	dependencies/spriter/spriterengine/user_override/json.hpp	/^		struct is_compatible_type$/;"	s	namespace:nlohmann::detail
is_complete_type	dependencies/nlohmann/json.hpp	/^struct is_complete_type : std::false_type {};$/;"	s	namespace:nlohmann::detail
is_complete_type	dependencies/nlohmann/json.hpp	/^struct is_complete_type<T, decltype(void(sizeof(T)))> : std::true_type {};$/;"	s	namespace:nlohmann::detail
is_complete_type	dependencies/spriter/spriterengine/user_override/json.hpp	/^		struct is_complete_type : std::false_type {};$/;"	s	namespace:nlohmann::detail
is_complete_type	dependencies/spriter/spriterengine/user_override/json.hpp	/^		struct is_complete_type<T, decltype(void(sizeof(T)))> : std::true_type {};$/;"	s	namespace:nlohmann::detail
is_discarded	dependencies/nlohmann/json.hpp	/^    constexpr bool is_discarded() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_discarded	dependencies/spriter/spriterengine/user_override/json.hpp	/^			constexpr bool is_discarded() const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_end	dependencies/nlohmann/json.hpp	/^    constexpr bool is_end() const noexcept$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:bool
is_end	dependencies/spriter/spriterengine/user_override/json.hpp	/^			constexpr bool is_end() const noexcept {$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:bool
is_little_endian	dependencies/nlohmann/json.hpp	/^    const bool is_little_endian = binary_reader<BasicJsonType>::little_endianess();$/;"	m	class:nlohmann::detail::binary_writer	typeref:typename:const bool
is_little_endian	dependencies/nlohmann/json.hpp	/^    const bool is_little_endian = little_endianess();$/;"	m	class:nlohmann::detail::binary_reader	typeref:typename:const bool
is_little_endian	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const bool is_little_endian = binary_reader<BasicJsonType>::little_endianess();$/;"	m	class:nlohmann::detail::binary_writer	typeref:typename:const bool
is_little_endian	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const bool is_little_endian = little_endianess();$/;"	m	class:nlohmann::detail::binary_reader	typeref:typename:const bool
is_null	dependencies/nlohmann/json.hpp	/^    constexpr bool is_null() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_null	dependencies/spriter/spriterengine/user_override/json.hpp	/^			constexpr bool is_null() const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_number	dependencies/nlohmann/json.hpp	/^    constexpr bool is_number() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_number	dependencies/spriter/spriterengine/user_override/json.hpp	/^			constexpr bool is_number() const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_number_float	dependencies/nlohmann/json.hpp	/^    constexpr bool is_number_float() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_number_float	dependencies/spriter/spriterengine/user_override/json.hpp	/^			constexpr bool is_number_float() const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_number_integer	dependencies/nlohmann/json.hpp	/^    constexpr bool is_number_integer() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_number_integer	dependencies/spriter/spriterengine/user_override/json.hpp	/^			constexpr bool is_number_integer() const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_number_unsigned	dependencies/nlohmann/json.hpp	/^    constexpr bool is_number_unsigned() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_number_unsigned	dependencies/spriter/spriterengine/user_override/json.hpp	/^			constexpr bool is_number_unsigned() const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_object	dependencies/nlohmann/json.hpp	/^    constexpr bool is_object() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_object	dependencies/spriter/spriterengine/user_override/json.hpp	/^			constexpr bool is_object() const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_primitive	dependencies/nlohmann/json.hpp	/^    constexpr bool is_primitive() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_primitive	dependencies/spriter/spriterengine/user_override/json.hpp	/^			constexpr bool is_primitive() const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_root	dependencies/nlohmann/json.hpp	/^    bool is_root() const$/;"	f	class:nlohmann::json_pointer	typeref:typename:bool
is_root	dependencies/spriter/spriterengine/user_override/json.hpp	/^		bool is_root() const {$/;"	f	class:nlohmann::json_pointer	typeref:typename:bool
is_rvalue	dependencies/nlohmann/json.hpp	/^    const bool is_rvalue;$/;"	m	class:nlohmann::detail::json_ref	typeref:typename:const bool
is_rvalue	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const bool is_rvalue;$/;"	m	class:nlohmann::detail::json_ref	typeref:typename:const bool
is_string	dependencies/nlohmann/json.hpp	/^    constexpr bool is_string() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_string	dependencies/spriter/spriterengine/user_override/json.hpp	/^			constexpr bool is_string() const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_structured	dependencies/nlohmann/json.hpp	/^    constexpr bool is_structured() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
is_structured	dependencies/spriter/spriterengine/user_override/json.hpp	/^			constexpr bool is_structured() const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:bool
isfinite	dependencies/nlohmann/json.hpp	/^        if (not std::isfinite(x))$/;"	m	class:nlohmann::detail::serializer::dump_float::std	typeref:typename:not	file:
isfinite	dependencies/spriter/spriterengine/user_override/json.hpp	/^				if (not std::isfinite(x)) {$/;"	m	class:nlohmann::detail::serializer::dump_float::std	typeref:typename:not	file:
items	dependencies/nlohmann/json.hpp	/^    iteration_proxy<const_iterator> items() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:iteration_proxy<const_iterator>
items	dependencies/nlohmann/json.hpp	/^    iteration_proxy<iterator> items() noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:iteration_proxy<iterator>
items	dependencies/spriter/spriterengine/user_override/json.hpp	/^			iteration_proxy<const_iterator> items() const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:iteration_proxy<const_iterator>
items	dependencies/spriter/spriterengine/user_override/json.hpp	/^			iteration_proxy<iterator> items() noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:iteration_proxy<iterator>
iter_impl	dependencies/nlohmann/json.hpp	/^    explicit iter_impl(pointer object) noexcept : m_object(object)$/;"	f	class:nlohmann::detail::iter_impl
iter_impl	dependencies/nlohmann/json.hpp	/^    iter_impl(const iter_impl<typename std::remove_const<BasicJsonType>::type>& other) noexcept$/;"	f	class:nlohmann::detail::iter_impl
iter_impl	dependencies/nlohmann/json.hpp	/^    using iter_impl = ::nlohmann::detail::iter_impl<BasicJsonType>;$/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::iter_impl<BasicJsonType>
iter_impl	dependencies/nlohmann/json.hpp	/^class iter_impl$/;"	c	namespace:nlohmann::detail
iter_impl	dependencies/spriter/spriterengine/user_override/json.hpp	/^			explicit iter_impl(pointer object) noexcept : m_object(object) {$/;"	f	class:nlohmann::detail::iter_impl
iter_impl	dependencies/spriter/spriterengine/user_override/json.hpp	/^			iter_impl(const iter_impl<typename std::remove_const<BasicJsonType>::type>& other) noexcept$/;"	f	class:nlohmann::detail::iter_impl
iter_impl	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using iter_impl = ::nlohmann::detail::iter_impl<BasicJsonType>;$/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::iter_impl<BasicJsonType>
iter_impl	dependencies/spriter/spriterengine/user_override/json.hpp	/^		class iter_impl {$/;"	c	namespace:nlohmann::detail
iteration_proxy	dependencies/nlohmann/json.hpp	/^    explicit iteration_proxy(typename IteratorType::reference cont) noexcept$/;"	f	class:nlohmann::detail::iteration_proxy
iteration_proxy	dependencies/nlohmann/json.hpp	/^    using iteration_proxy = ::nlohmann::detail::iteration_proxy<Iterator>;$/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::iteration_proxy<Iterator>
iteration_proxy	dependencies/nlohmann/json.hpp	/^template<typename IteratorType> class iteration_proxy$/;"	c	namespace:nlohmann::detail
iteration_proxy	dependencies/spriter/spriterengine/user_override/json.hpp	/^			explicit iteration_proxy(typename IteratorType::reference cont) noexcept$/;"	f	class:nlohmann::detail::iteration_proxy
iteration_proxy	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using iteration_proxy = ::nlohmann::detail::iteration_proxy<Iterator>;$/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::iteration_proxy<Iterator>
iteration_proxy	dependencies/spriter/spriterengine/user_override/json.hpp	/^		template<typename IteratorType> class iteration_proxy {$/;"	c	namespace:nlohmann::detail
iteration_proxy_internal	dependencies/nlohmann/json.hpp	/^        explicit iteration_proxy_internal(IteratorType it) noexcept : anchor(it) {}$/;"	f	class:nlohmann::detail::iteration_proxy::iteration_proxy_internal
iteration_proxy_internal	dependencies/nlohmann/json.hpp	/^    class iteration_proxy_internal$/;"	c	class:nlohmann::detail::iteration_proxy
iteration_proxy_internal	dependencies/spriter/spriterengine/user_override/json.hpp	/^				explicit iteration_proxy_internal(IteratorType it) noexcept : anchor(it) {}$/;"	f	class:nlohmann::detail::iteration_proxy::iteration_proxy_internal
iteration_proxy_internal	dependencies/spriter/spriterengine/user_override/json.hpp	/^			class iteration_proxy_internal {$/;"	c	class:nlohmann::detail::iteration_proxy
iterator	dependencies/nlohmann/json.hpp	/^    using iterator = iter_impl<basic_json>;$/;"	t	class:nlohmann::basic_json	typeref:typename:iter_impl<basic_json>
iterator	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using iterator = iter_impl<basic_json>;$/;"	t	class:nlohmann::basic_json	typeref:typename:iter_impl<basic_json>
iterator_category	dependencies/nlohmann/json.hpp	/^    using iterator_category = std::bidirectional_iterator_tag;$/;"	t	class:nlohmann::detail::iter_impl	typeref:typename:std::bidirectional_iterator_tag
iterator_category	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using iterator_category = std::bidirectional_iterator_tag;$/;"	t	class:nlohmann::detail::iter_impl	typeref:typename:std::bidirectional_iterator_tag
iterator_wrapper	dependencies/nlohmann/json.hpp	/^    static iteration_proxy<const_iterator> iterator_wrapper(const_reference ref) noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:JSON_DEPRECATED iteration_proxy<const_iterator>
iterator_wrapper	dependencies/nlohmann/json.hpp	/^    static iteration_proxy<iterator> iterator_wrapper(reference ref) noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:JSON_DEPRECATED iteration_proxy<iterator>
iterator_wrapper	dependencies/spriter/spriterengine/user_override/json.hpp	/^				static iteration_proxy<const_iterator> iterator_wrapper(const_reference ref) noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:JSON_DEPRECATED iteration_proxy<const_iterator>
iterator_wrapper	dependencies/spriter/spriterengine/user_override/json.hpp	/^				static iteration_proxy<iterator> iterator_wrapper(reference ref) noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:JSON_DEPRECATED iteration_proxy<iterator>
joystickButton	dependencies/sfml/include/SFML/Window/Event.hpp	/^        JoystickButtonEvent   joystickButton;    \/\/\/< Joystick button event parameters (Event/;"	m	union:sf::Event::__anon4b0d4c8f010a	typeref:typename:JoystickButtonEvent
joystickConnect	dependencies/sfml/include/SFML/Window/Event.hpp	/^        JoystickConnectEvent  joystickConnect;   \/\/\/< Joystick (dis)connect event parameters /;"	m	union:sf::Event::__anon4b0d4c8f010a	typeref:typename:JoystickConnectEvent
joystickId	dependencies/sfml/include/SFML/Window/Event.hpp	/^        unsigned int   joystickId; \/\/\/< Index of the joystick (in range [0 .. Joystick::Count/;"	m	struct:sf::Event::JoystickMoveEvent	typeref:typename:unsigned int
joystickId	dependencies/sfml/include/SFML/Window/Event.hpp	/^        unsigned int joystickId; \/\/\/< Index of the joystick (in range [0 .. Joystick::Count -/;"	m	struct:sf::Event::JoystickButtonEvent	typeref:typename:unsigned int
joystickId	dependencies/sfml/include/SFML/Window/Event.hpp	/^        unsigned int joystickId; \/\/\/< Index of the joystick (in range [0 .. Joystick::Count -/;"	m	struct:sf::Event::JoystickConnectEvent	typeref:typename:unsigned int
joystickMove	dependencies/sfml/include/SFML/Window/Event.hpp	/^        JoystickMoveEvent     joystickMove;      \/\/\/< Joystick move event parameters (Event::/;"	m	union:sf::Event::__anon4b0d4c8f010a	typeref:typename:JoystickMoveEvent
json	dependencies/nlohmann/json.hpp	/^using json = basic_json<>;$/;"	t	namespace:nlohmann	typeref:typename:basic_json<>
json	dependencies/spriter/spriterengine/user_override/json.hpp	/^	using json = basic_json<>;$/;"	t	namespace:nlohmann	typeref:typename:basic_json<>
json	dependencies/spriter/spriterengine/user_override/jsonspriterfileattributewrapper.h	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json
json	dependencies/spriter/spriterengine/user_override/jsonspriterfiledocumentwrapper.h	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json
json	dependencies/spriter/spriterengine/user_override/jsonspriterfileelementwrapper.h	/^using json = nlohmann::json;$/;"	t	typeref:typename:nlohmann::json
json_pointer	dependencies/nlohmann/json.hpp	/^    explicit json_pointer(const std::string& s = "")$/;"	f	class:nlohmann::json_pointer
json_pointer	dependencies/nlohmann/json.hpp	/^    using json_pointer = ::nlohmann::json_pointer<basic_json>;$/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::json_pointer<basic_json>
json_pointer	dependencies/nlohmann/json.hpp	/^class json_pointer$/;"	c	namespace:nlohmann
json_pointer	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using json_pointer = ::nlohmann::json_pointer<basic_json>;$/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::json_pointer<basic_json>
json_pointer	dependencies/spriter/spriterengine/user_override/json.hpp	/^		explicit json_pointer(const std::string& s = "")$/;"	f	class:nlohmann::json_pointer
json_pointer	dependencies/spriter/spriterengine/user_override/json.hpp	/^	class json_pointer {$/;"	c	namespace:nlohmann
json_ref	dependencies/nlohmann/json.hpp	/^    json_ref(Args&& ... args)$/;"	f	class:nlohmann::detail::json_ref
json_ref	dependencies/nlohmann/json.hpp	/^    json_ref(const value_type& value)$/;"	f	class:nlohmann::detail::json_ref
json_ref	dependencies/nlohmann/json.hpp	/^    json_ref(std::initializer_list<json_ref> init)$/;"	f	class:nlohmann::detail::json_ref
json_ref	dependencies/nlohmann/json.hpp	/^    json_ref(value_type&& value)$/;"	f	class:nlohmann::detail::json_ref
json_ref	dependencies/nlohmann/json.hpp	/^class json_ref$/;"	c	namespace:nlohmann::detail
json_ref	dependencies/spriter/spriterengine/user_override/json.hpp	/^			json_ref(Args&& ... args)$/;"	f	class:nlohmann::detail::json_ref
json_ref	dependencies/spriter/spriterengine/user_override/json.hpp	/^			json_ref(const value_type& value)$/;"	f	class:nlohmann::detail::json_ref
json_ref	dependencies/spriter/spriterengine/user_override/json.hpp	/^			json_ref(std::initializer_list<json_ref> init)$/;"	f	class:nlohmann::detail::json_ref
json_ref	dependencies/spriter/spriterengine/user_override/json.hpp	/^			json_ref(value_type&& value)$/;"	f	class:nlohmann::detail::json_ref
json_ref	dependencies/spriter/spriterengine/user_override/json.hpp	/^		class json_ref {$/;"	c	namespace:nlohmann::detail
json_reverse_iterator	dependencies/nlohmann/json.hpp	/^    json_reverse_iterator(const base_iterator& it) noexcept : base_iterator(it) {}$/;"	f	class:nlohmann::detail::json_reverse_iterator
json_reverse_iterator	dependencies/nlohmann/json.hpp	/^    json_reverse_iterator(const typename base_iterator::iterator_type& it) noexcept$/;"	f	class:nlohmann::detail::json_reverse_iterator
json_reverse_iterator	dependencies/nlohmann/json.hpp	/^    template<typename Base> using json_reverse_iterator = ::nlohmann::detail::json_reverse_itera/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::json_reverse_iterator<Base>
json_reverse_iterator	dependencies/nlohmann/json.hpp	/^class json_reverse_iterator : public std::reverse_iterator<Base>$/;"	c	namespace:nlohmann::detail
json_reverse_iterator	dependencies/spriter/spriterengine/user_override/json.hpp	/^			json_reverse_iterator(const base_iterator& it) noexcept : base_iterator(it) {}$/;"	f	class:nlohmann::detail::json_reverse_iterator
json_reverse_iterator	dependencies/spriter/spriterengine/user_override/json.hpp	/^			json_reverse_iterator(const typename base_iterator::iterator_type& it) noexcept$/;"	f	class:nlohmann::detail::json_reverse_iterator
json_reverse_iterator	dependencies/spriter/spriterengine/user_override/json.hpp	/^			template<typename Base> using json_reverse_iterator = ::nlohmann::detail::json_reverse_iterat/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::json_reverse_iterator<Base>
json_reverse_iterator	dependencies/spriter/spriterengine/user_override/json.hpp	/^		class json_reverse_iterator : public std::reverse_iterator<Base> {$/;"	c	namespace:nlohmann::detail
json_serializer	dependencies/nlohmann/json.hpp	/^    using json_serializer = JSONSerializer<T, SFINAE>;$/;"	t	class:nlohmann::basic_json	typeref:typename:JSONSerializer<T,SFINAE>
json_serializer	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using json_serializer = JSONSerializer<T, SFINAE>;$/;"	t	class:nlohmann::basic_json	typeref:typename:JSONSerializer<T,SFINAE>
json_value	dependencies/nlohmann/json.hpp	/^        json_value(array_t&& value)$/;"	f	union:nlohmann::basic_json::json_value
json_value	dependencies/nlohmann/json.hpp	/^        json_value(boolean_t v) noexcept : boolean(v) {}$/;"	f	union:nlohmann::basic_json::json_value
json_value	dependencies/nlohmann/json.hpp	/^        json_value(const array_t& value)$/;"	f	union:nlohmann::basic_json::json_value
json_value	dependencies/nlohmann/json.hpp	/^        json_value(const object_t& value)$/;"	f	union:nlohmann::basic_json::json_value
json_value	dependencies/nlohmann/json.hpp	/^        json_value(const string_t& value)$/;"	f	union:nlohmann::basic_json::json_value
json_value	dependencies/nlohmann/json.hpp	/^        json_value(number_float_t v) noexcept : number_float(v) {}$/;"	f	union:nlohmann::basic_json::json_value
json_value	dependencies/nlohmann/json.hpp	/^        json_value(number_integer_t v) noexcept : number_integer(v) {}$/;"	f	union:nlohmann::basic_json::json_value
json_value	dependencies/nlohmann/json.hpp	/^        json_value(number_unsigned_t v) noexcept : number_unsigned(v) {}$/;"	f	union:nlohmann::basic_json::json_value
json_value	dependencies/nlohmann/json.hpp	/^        json_value(object_t&& value)$/;"	f	union:nlohmann::basic_json::json_value
json_value	dependencies/nlohmann/json.hpp	/^        json_value(string_t&& value)$/;"	f	union:nlohmann::basic_json::json_value
json_value	dependencies/nlohmann/json.hpp	/^        json_value(value_t t)$/;"	f	union:nlohmann::basic_json::json_value
json_value	dependencies/nlohmann/json.hpp	/^    union json_value$/;"	u	class:nlohmann::basic_json
json_value	dependencies/spriter/spriterengine/user_override/json.hpp	/^				json_value(array_t&& value) {$/;"	f	union:nlohmann::basic_json::json_value
json_value	dependencies/spriter/spriterengine/user_override/json.hpp	/^				json_value(boolean_t v) noexcept : boolean(v) {}$/;"	f	union:nlohmann::basic_json::json_value
json_value	dependencies/spriter/spriterengine/user_override/json.hpp	/^				json_value(const array_t& value) {$/;"	f	union:nlohmann::basic_json::json_value
json_value	dependencies/spriter/spriterengine/user_override/json.hpp	/^				json_value(const object_t& value) {$/;"	f	union:nlohmann::basic_json::json_value
json_value	dependencies/spriter/spriterengine/user_override/json.hpp	/^				json_value(const string_t& value) {$/;"	f	union:nlohmann::basic_json::json_value
json_value	dependencies/spriter/spriterengine/user_override/json.hpp	/^				json_value(number_float_t v) noexcept : number_float(v) {}$/;"	f	union:nlohmann::basic_json::json_value
json_value	dependencies/spriter/spriterengine/user_override/json.hpp	/^				json_value(number_integer_t v) noexcept : number_integer(v) {}$/;"	f	union:nlohmann::basic_json::json_value
json_value	dependencies/spriter/spriterengine/user_override/json.hpp	/^				json_value(number_unsigned_t v) noexcept : number_unsigned(v) {}$/;"	f	union:nlohmann::basic_json::json_value
json_value	dependencies/spriter/spriterengine/user_override/json.hpp	/^				json_value(object_t&& value) {$/;"	f	union:nlohmann::basic_json::json_value
json_value	dependencies/spriter/spriterengine/user_override/json.hpp	/^				json_value(string_t&& value) {$/;"	f	union:nlohmann::basic_json::json_value
json_value	dependencies/spriter/spriterengine/user_override/json.hpp	/^				json_value(value_t t) {$/;"	f	union:nlohmann::basic_json::json_value
json_value	dependencies/spriter/spriterengine/user_override/json.hpp	/^			union json_value {$/;"	u	class:nlohmann::basic_json
justFinished	dependencies/spriter/spriterengine/entity/entityinstance.h	/^		bool justFinished;$/;"	m	class:SpriterEngine::EntityInstance	typeref:typename:bool
k	dependencies/nlohmann/json.hpp	/^    int k;$/;"	m	struct:nlohmann::detail::dtoa_impl::cached_power	typeref:typename:int
k	dependencies/spriter/spriterengine/user_override/json.hpp	/^				int k;$/;"	m	struct:nlohmann::detail::dtoa_impl::cached_power	typeref:typename:int
kAlpha	dependencies/nlohmann/json.hpp	/^constexpr int kAlpha = -60;$/;"	v	namespace:nlohmann::detail::dtoa_impl	typeref:typename:int
kAlpha	dependencies/spriter/spriterengine/user_override/json.hpp	/^			constexpr int kAlpha = -60;$/;"	v	namespace:nlohmann::detail::dtoa_impl	typeref:typename:int
kGamma	dependencies/nlohmann/json.hpp	/^constexpr int kGamma = -32;$/;"	v	namespace:nlohmann::detail::dtoa_impl	typeref:typename:int
kGamma	dependencies/spriter/spriterengine/user_override/json.hpp	/^			constexpr int kGamma = -32;$/;"	v	namespace:nlohmann::detail::dtoa_impl	typeref:typename:int
kPrecision	dependencies/nlohmann/json.hpp	/^    static constexpr int kPrecision = 64; \/\/ = q$/;"	m	struct:nlohmann::detail::dtoa_impl::diyfp	typeref:typename:int
kPrecision	dependencies/spriter/spriterengine/user_override/json.hpp	/^				static constexpr int kPrecision = 64; \/\/ = q$/;"	m	struct:nlohmann::detail::dtoa_impl::diyfp	typeref:typename:int
key	dependencies/nlohmann/json.hpp	/^        key,$/;"	e	enum:nlohmann::detail::parser::parse_event_t
key	dependencies/nlohmann/json.hpp	/^        std::string key() const$/;"	f	class:nlohmann::detail::iteration_proxy::iteration_proxy_internal	typeref:typename:std::string
key	dependencies/nlohmann/json.hpp	/^    auto key() const -> decltype(std::declval<Base>().key())$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:decltype (std::declval<Base> ().key ())
key	dependencies/nlohmann/json.hpp	/^    typename object_t::key_type key() const$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:object_t::key_type
key	dependencies/sfml/include/SFML/Window/Event.hpp	/^        KeyEvent              key;               \/\/\/< Key event parameters (Event::KeyPressed/;"	m	union:sf::Event::__anon4b0d4c8f010a	typeref:typename:KeyEvent
key	dependencies/spriter/spriterengine/objectref/objectref.h	/^		TimelineKey *key;$/;"	m	class:SpriterEngine::ObjectRef	typeref:typename:TimelineKey *
key	dependencies/spriter/spriterengine/objectref/objectrefinstance.h	/^		TimelineKey *key;$/;"	m	class:SpriterEngine::ObjectRefInstance	typeref:typename:TimelineKey *
key	dependencies/spriter/spriterengine/user_override/json.hpp	/^				key,$/;"	e	enum:nlohmann::detail::parser::parse_event_t
key	dependencies/spriter/spriterengine/user_override/json.hpp	/^				std::string key() const {$/;"	f	class:nlohmann::detail::iteration_proxy::iteration_proxy_internal	typeref:typename:std::string
key	dependencies/spriter/spriterengine/user_override/json.hpp	/^			auto key() const -> decltype(std::declval<Base>().key()) {$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:decltype (std::declval<Base> ().key ())
key	dependencies/spriter/spriterengine/user_override/json.hpp	/^			typename object_t::key_type key() const {$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:object_t::key_type
keys	dependencies/spriter/spriterengine/timeline/timeline.h	/^		TimelineKeyVector keys;$/;"	m	class:SpriterEngine::Timeline	typeref:typename:TimelineKeyVector
lastBlendMode	dependencies/sfml/include/SFML/Graphics/RenderTarget.hpp	/^        BlendMode lastBlendMode;  \/\/\/< Cached blending mode$/;"	m	struct:sf::RenderTarget::StatesCache	typeref:typename:BlendMode
lastTextureId	dependencies/sfml/include/SFML/Graphics/RenderTarget.hpp	/^        Uint64    lastTextureId;  \/\/\/< Cached texture$/;"	m	struct:sf::RenderTarget::StatesCache	typeref:typename:Uint64
last_token	dependencies/nlohmann/json.hpp	/^    token_type last_token = token_type::uninitialized;$/;"	m	class:nlohmann::detail::parser	typeref:typename:token_type
last_token	dependencies/spriter/spriterengine/user_override/json.hpp	/^			token_type last_token = token_type::uninitialized;$/;"	m	class:nlohmann::detail::parser	typeref:typename:token_type
left	dependencies/sfml/include/SFML/Graphics/Rect.hpp	/^    T left;   \/\/\/< Left coordinate of the rectangle$/;"	m	class:sf::Rect	typeref:typename:T
length	dependencies/spriter/spriterengine/animation/animationinstance.cpp	/^	real AnimationInstance::length()$/;"	f	class:SpriterEngine::AnimationInstance	typeref:typename:real
less	dependencies/nlohmann/json.hpp	/^struct less< ::nlohmann::detail::value_t>$/;"	s	namespace:std
less	dependencies/spriter/spriterengine/user_override/json.hpp	/^	struct less< ::nlohmann::detail::value_t> {$/;"	s	namespace:std
lexer	dependencies/nlohmann/json.hpp	/^    explicit lexer(detail::input_adapter_t adapter)$/;"	f	class:nlohmann::detail::lexer
lexer	dependencies/nlohmann/json.hpp	/^    using lexer = ::nlohmann::detail::lexer<basic_json>;$/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::lexer<basic_json>
lexer	dependencies/nlohmann/json.hpp	/^class lexer$/;"	c	namespace:nlohmann::detail
lexer	dependencies/spriter/spriterengine/user_override/json.hpp	/^			explicit lexer(detail::input_adapter_t adapter)$/;"	f	class:nlohmann::detail::lexer
lexer	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using lexer = ::nlohmann::detail::lexer<basic_json>;$/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::lexer<basic_json>
lexer	dependencies/spriter/spriterengine/user_override/json.hpp	/^		class lexer {$/;"	c	namespace:nlohmann::detail
lexer_t	dependencies/nlohmann/json.hpp	/^    using lexer_t = lexer<BasicJsonType>;$/;"	t	class:nlohmann::detail::parser	typeref:typename:lexer<BasicJsonType>
lexer_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using lexer_t = lexer<BasicJsonType>;$/;"	t	class:nlohmann::detail::parser	typeref:typename:lexer<BasicJsonType>
limit	dependencies/nlohmann/json.hpp	/^    const char* limit;$/;"	m	class:nlohmann::detail::input_buffer_adapter	typeref:typename:const char *
limit	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const char* limit;$/;"	m	class:nlohmann::detail::input_buffer_adapter	typeref:typename:const char *
limit	include/Helpers.h	/^	inline void limit(sf::Vector2f& v, float max) {$/;"	f	namespace:Helpers	typeref:typename:void
linear	dependencies/spriter/spriterengine/global/global.h	/^	inline point linear(const point &a, const point &b, real t)$/;"	f	namespace:SpriterEngine	typeref:typename:point
linear	dependencies/spriter/spriterengine/global/global.h	/^	inline real linear(real a, real b, real t)$/;"	f	namespace:SpriterEngine	typeref:typename:real
literal_false	dependencies/nlohmann/json.hpp	/^        literal_false,    \/\/\/< the `false` literal$/;"	e	enum:nlohmann::detail::lexer::token_type
literal_false	dependencies/spriter/spriterengine/user_override/json.hpp	/^				literal_false,    \/\/\/< the `false` literal$/;"	e	enum:nlohmann::detail::lexer::token_type
literal_null	dependencies/nlohmann/json.hpp	/^        literal_null,     \/\/\/< the `null` literal$/;"	e	enum:nlohmann::detail::lexer::token_type
literal_null	dependencies/spriter/spriterengine/user_override/json.hpp	/^				literal_null,     \/\/\/< the `null` literal$/;"	e	enum:nlohmann::detail::lexer::token_type
literal_or_value	dependencies/nlohmann/json.hpp	/^        literal_or_value  \/\/\/< a literal or the begin of a value (only for diagnostics)$/;"	e	enum:nlohmann::detail::lexer::token_type
literal_or_value	dependencies/spriter/spriterengine/user_override/json.hpp	/^				literal_or_value  \/\/\/< a literal or the begin of a value (only for diagnostics)$/;"	e	enum:nlohmann::detail::lexer::token_type
literal_true	dependencies/nlohmann/json.hpp	/^        literal_true,     \/\/\/< the `true` literal$/;"	e	enum:nlohmann::detail::lexer::token_type
literal_true	dependencies/spriter/spriterengine/user_override/json.hpp	/^				literal_true,     \/\/\/< the `true` literal$/;"	e	enum:nlohmann::detail::lexer::token_type
little_endianess	dependencies/nlohmann/json.hpp	/^    static constexpr bool little_endianess(int num = 1) noexcept$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:bool
little_endianess	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static constexpr bool little_endianess(int num = 1) noexcept {$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:bool
load	src/GameData.cpp	/^void GameData::load(sf::RenderWindow* _window) {$/;"	f	class:GameData	typeref:typename:void
loadFile	dependencies/spriter/spriterengine/loading/loader.cpp	/^	void Loader::loadFile(SpriterModel * model, const std::string &fileName)$/;"	f	class:SpriterEngine::Loader	typeref:typename:void
loadFile	dependencies/spriter/spriterengine/loading/spriterdocumentloader.cpp	/^	void SpriterDocumentLoader::loadFile(SpriterModel *model, SpriterFileDocumentWrapper *documentW/;"	f	class:SpriterEngine::SpriterDocumentLoader	typeref:typename:void
loadFile	dependencies/spriter/spriterengine/model/spritermodel.cpp	/^	void SpriterModel::loadFile(const std::string & fileName)$/;"	f	class:SpriterEngine::SpriterModel	typeref:typename:void
loadFile	dependencies/spriter/spriterengine/user_override/jsonspriterfiledocumentwrapper.cpp	/^	void JSONSpriterFileDocumentWrapper::loadFile(std::string fileName)$/;"	f	class:SpriterEngine::JSONSpriterFileDocumentWrapper	typeref:typename:void
loaded	dependencies/spriter/spriterengine/user_override/sfmlatlasfile.h	/^		bool loaded() {return m_loaded;}$/;"	f	class:SpriterEngine::SfmlAtlasFile	typeref:typename:bool
loader	dependencies/spriter/spriterengine/model/spritermodel.h	/^		Loader loader;$/;"	m	class:SpriterEngine::SpriterModel	typeref:typename:Loader
loc	dependencies/nlohmann/json.hpp	/^    const std::lconv* loc = nullptr;$/;"	m	class:nlohmann::detail::serializer	typeref:typename:const std::lconv *
loc	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const std::lconv* loc = nullptr;$/;"	m	class:nlohmann::detail::serializer	typeref:typename:const std::lconv *
looping	dependencies/spriter/spriterengine/animation/animationinstance.cpp	/^	bool AnimationInstance::looping()$/;"	f	class:SpriterEngine::AnimationInstance	typeref:typename:bool
m	dependencies/nlohmann/json.hpp	/^    std::runtime_error m;$/;"	m	class:nlohmann::detail::exception	typeref:typename:std::runtime_error
m	dependencies/spriter/spriterengine/user_override/json.hpp	/^			std::runtime_error m;$/;"	m	class:nlohmann::detail::exception	typeref:typename:std::runtime_error
m_actualSize	dependencies/sfml/include/SFML/Graphics/Texture.hpp	/^    Vector2u     m_actualSize;    \/\/\/< Actual texture size (can be greater than public size b/;"	m	class:sf::Texture	typeref:typename:Vector2u
m_address	dependencies/sfml/include/SFML/Network/IpAddress.hpp	/^    Uint32 m_address; \/\/\/< Address stored as an unsigned 32 bits integer$/;"	m	class:sf::IpAddress	typeref:typename:Uint32
m_arg	dependencies/sfml/include/SFML/System/Thread.inl	/^    A m_arg;$/;"	m	struct:priv::ThreadFunctorWithArg	typeref:typename:A	file:
m_array	dependencies/spriter/spriterengine/user_override/jsonspriterfileelementwrapper.h	/^		json m_array; \/\/ Array of elements with the same name$/;"	m	class:SpriterEngine::JSONSpriterFileElementWrapper	typeref:typename:json
m_background	include/GameOverScene.h	/^	sf::Sprite m_background;$/;"	m	class:GameOverScene	typeref:typename:sf::Sprite
m_background	include/MenuScene.h	/^	sf::Sprite m_background;$/;"	m	class:MenuScene	typeref:typename:sf::Sprite
m_body	dependencies/sfml/include/SFML/Network/Http.hpp	/^        std::string  m_body;         \/\/\/< Body of the request$/;"	m	class:sf::Http::Request	typeref:typename:std::string
m_body	dependencies/sfml/include/SFML/Network/Http.hpp	/^        std::string  m_body;         \/\/\/< Body of the response$/;"	m	class:sf::Http::Response	typeref:typename:std::string
m_bounds	dependencies/sfml/include/SFML/Graphics/Shape.hpp	/^    FloatRect      m_bounds;           \/\/\/< Bounding rectangle of the whole shape (outline + /;"	m	class:sf::Shape	typeref:typename:FloatRect
m_bounds	dependencies/sfml/include/SFML/Graphics/Text.hpp	/^    mutable FloatRect   m_bounds;             \/\/\/< Bounding rectangle of the text (in local c/;"	m	class:sf::Text	typeref:typename:FloatRect
m_buffer	dependencies/sfml/include/SFML/Audio/Sound.hpp	/^    const SoundBuffer* m_buffer; \/\/\/< Sound buffer bound to the source$/;"	m	class:sf::Sound	typeref:typename:const SoundBuffer *
m_buffer	dependencies/sfml/include/SFML/Audio/SoundBuffer.hpp	/^    unsigned int       m_buffer;   \/\/\/< OpenAL buffer identifier$/;"	m	class:sf::SoundBuffer	typeref:typename:unsigned int
m_buffer	dependencies/sfml/include/SFML/Audio/SoundBufferRecorder.hpp	/^    SoundBuffer        m_buffer;  \/\/\/< Sound buffer that will contain the recorded data$/;"	m	class:sf::SoundBufferRecorder	typeref:typename:SoundBuffer
m_buffer	dependencies/sfml/include/SFML/Network/UdpSocket.hpp	/^    std::vector<char> m_buffer; \/\/\/< Temporary buffer holding the received data in Receive(Pa/;"	m	class:sf::UdpSocket	typeref:typename:std::vector<char>
m_buffers	dependencies/sfml/include/SFML/Audio/SoundStream.hpp	/^    unsigned int  m_buffers[BufferCount];    \/\/\/< Sound buffers used to store temporary audio/;"	m	class:sf::SoundStream	typeref:typename:unsigned int[]
m_cache	dependencies/sfml/include/SFML/Graphics/RenderTarget.hpp	/^    StatesCache m_cache;       \/\/\/< Render states cache$/;"	m	class:sf::RenderTarget	typeref:typename:StatesCache
m_cacheId	dependencies/sfml/include/SFML/Graphics/Texture.hpp	/^    Uint64       m_cacheId;       \/\/\/< Unique number that identifies the texture to the rende/;"	m	class:sf::Texture	typeref:typename:Uint64
m_center	dependencies/sfml/include/SFML/Graphics/View.hpp	/^    Vector2f          m_center;              \/\/\/< Center of the view, in scene coordinates$/;"	m	class:sf::View	typeref:typename:Vector2f
m_channelCount	dependencies/sfml/include/SFML/Audio/InputSoundFile.hpp	/^    unsigned int     m_channelCount; \/\/\/< Number of channels of the sound$/;"	m	class:sf::InputSoundFile	typeref:typename:unsigned int
m_channelCount	dependencies/sfml/include/SFML/Audio/SoundRecorder.hpp	/^    unsigned int       m_channelCount;       \/\/\/< Number of recording channels$/;"	m	class:sf::SoundRecorder	typeref:typename:unsigned int
m_channelCount	dependencies/sfml/include/SFML/Audio/SoundStream.hpp	/^    unsigned int  m_channelCount;            \/\/\/< Number of channels (1 = mono, 2 = stereo, ./;"	m	class:sf::SoundStream	typeref:typename:unsigned int
m_characterSize	dependencies/sfml/include/SFML/Graphics/Text.hpp	/^    unsigned int        m_characterSize;      \/\/\/< Base size of characters, in pixels$/;"	m	class:sf::Text	typeref:typename:unsigned int
m_clock	dependencies/sfml/include/SFML/Window/Window.hpp	/^    Clock             m_clock;          \/\/\/< Clock for measuring the elapsed time between fra/;"	m	class:sf::Window	typeref:typename:Clock
m_clock	include/SceneManager.h	/^	sf::Clock m_clock;$/;"	m	class:SceneManager	typeref:typename:sf::Clock
m_commandSocket	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^    TcpSocket   m_commandSocket; \/\/\/< Socket holding the control connection with the server$/;"	m	class:sf::Ftp	typeref:typename:TcpSocket
m_connection	dependencies/sfml/include/SFML/Network/Http.hpp	/^    TcpSocket      m_connection; \/\/\/< Connection to the host$/;"	m	class:sf::Http	typeref:typename:TcpSocket
m_context	dependencies/sfml/include/SFML/Window/Context.hpp	/^    priv::GlContext* m_context; \/\/\/< Internal OpenGL context$/;"	m	class:sf::Context	typeref:typename:priv::GlContext *
m_context	dependencies/sfml/include/SFML/Window/GlResource.hpp	/^        Context* m_context; \/\/\/< Temporary context, in case we needed to create one$/;"	m	class:sf::GlResource::TransientContextLock	typeref:typename:Context *
m_context	dependencies/sfml/include/SFML/Window/Window.hpp	/^    priv::GlContext*  m_context;        \/\/\/< Platform-specific implementation of the OpenGL c/;"	m	class:sf::Window	typeref:typename:priv::GlContext *
m_currentScene	include/SceneManager.h	/^	Scene* m_currentScene;$/;"	m	class:SceneManager	typeref:typename:Scene *
m_currentTexture	dependencies/sfml/include/SFML/Graphics/Shader.hpp	/^    int          m_currentTexture; \/\/\/< Location of the current texture in the shader$/;"	m	class:sf::Shader	typeref:typename:int
m_data	dependencies/sfml/include/SFML/Network/Packet.hpp	/^    std::vector<char> m_data;    \/\/\/< Data stored in the packet$/;"	m	class:sf::Packet	typeref:typename:std::vector<char>
m_data	dependencies/sfml/include/SFML/System/MemoryInputStream.hpp	/^    const char* m_data;   \/\/\/< Pointer to the data in memory$/;"	m	class:sf::MemoryInputStream	typeref:typename:const char *
m_defaultView	dependencies/sfml/include/SFML/Graphics/RenderTarget.hpp	/^    View        m_defaultView; \/\/\/< Default view$/;"	m	class:sf::RenderTarget	typeref:typename:View
m_deviceName	dependencies/sfml/include/SFML/Audio/SoundRecorder.hpp	/^    std::string        m_deviceName;         \/\/\/< Name of the audio capture device$/;"	m	class:sf::SoundRecorder	typeref:typename:std::string
m_directory	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^        std::string m_directory; \/\/\/< Directory extracted from the response message$/;"	m	class:sf::Ftp::DirectoryResponse	typeref:typename:std::string
m_duration	dependencies/sfml/include/SFML/Audio/Music.hpp	/^    Time               m_duration; \/\/\/< Music duration$/;"	m	class:sf::Music	typeref:typename:Time
m_duration	dependencies/sfml/include/SFML/Audio/SoundBuffer.hpp	/^    Time               m_duration; \/\/\/< Sound duration$/;"	m	class:sf::SoundBuffer	typeref:typename:Time
m_endBuffers	dependencies/sfml/include/SFML/Audio/SoundStream.hpp	/^    bool          m_endBuffers[BufferCount]; \/\/\/< Each buffer is marked as "end buffer" or no/;"	m	class:sf::SoundStream	typeref:typename:bool[]
m_entryPoint	dependencies/sfml/include/SFML/System/Thread.hpp	/^    priv::ThreadFunc* m_entryPoint; \/\/\/< Abstraction of the function to run$/;"	m	class:sf::Thread	typeref:typename:priv::ThreadFunc *
m_face	dependencies/sfml/include/SFML/Graphics/Font.hpp	/^    void*                      m_face;        \/\/\/< Pointer to the internal font face (it is t/;"	m	class:sf::Font	typeref:typename:void *
m_fboAttachment	dependencies/sfml/include/SFML/Graphics/Texture.hpp	/^    bool         m_fboAttachment; \/\/\/< Is this texture owned by a framebuffer object?$/;"	m	class:sf::Texture	typeref:typename:bool
m_fields	dependencies/sfml/include/SFML/Network/Http.hpp	/^        FieldTable   m_fields;       \/\/\/< Fields of the header associated to their value$/;"	m	class:sf::Http::Request	typeref:typename:FieldTable
m_fields	dependencies/sfml/include/SFML/Network/Http.hpp	/^        FieldTable   m_fields;       \/\/\/< Fields of the header$/;"	m	class:sf::Http::Response	typeref:typename:FieldTable
m_file	dependencies/sfml/include/SFML/Audio/Music.hpp	/^    InputSoundFile     m_file;     \/\/\/< The streamed music file$/;"	m	class:sf::Music	typeref:typename:InputSoundFile
m_file	dependencies/sfml/include/SFML/System/FileInputStream.hpp	/^    priv::ResourceStream* m_file;$/;"	m	class:sf::FileInputStream	typeref:typename:priv::ResourceStream *
m_fillColor	dependencies/sfml/include/SFML/Graphics/Shape.hpp	/^    Color          m_fillColor;        \/\/\/< Fill color$/;"	m	class:sf::Shape	typeref:typename:Color
m_fillColor	dependencies/sfml/include/SFML/Graphics/Text.hpp	/^    Color               m_fillColor;          \/\/\/< Text fill color$/;"	m	class:sf::Text	typeref:typename:Color
m_font	dependencies/sfml/include/SFML/Graphics/Text.hpp	/^    const Font*         m_font;               \/\/\/< Font used to display the string$/;"	m	class:sf::Text	typeref:typename:const Font *
m_format	dependencies/sfml/include/SFML/Audio/SoundStream.hpp	/^    Uint32        m_format;                  \/\/\/< Format of the internal sound buffers$/;"	m	class:sf::SoundStream	typeref:typename:Uint32
m_frameTimeLimit	dependencies/sfml/include/SFML/Window/Window.hpp	/^    Time              m_frameTimeLimit; \/\/\/< Current framerate limit$/;"	m	class:sf::Window	typeref:typename:Time
m_function	dependencies/sfml/include/SFML/System/Thread.inl	/^    F m_function;$/;"	m	struct:priv::ThreadFunctorWithArg	typeref:typename:F	file:
m_functor	dependencies/sfml/include/SFML/System/Thread.inl	/^    T m_functor;$/;"	m	struct:priv::ThreadFunctor	typeref:typename:T	file:
m_geometryNeedUpdate	dependencies/sfml/include/SFML/Graphics/Text.hpp	/^    mutable bool        m_geometryNeedUpdate; \/\/\/< Does the geometry need to be recomputed?$/;"	m	class:sf::Text	typeref:typename:bool
m_hasMipmap	dependencies/sfml/include/SFML/Graphics/Texture.hpp	/^    bool         m_hasMipmap;     \/\/\/< Has the mipmap been generated?$/;"	m	class:sf::Texture	typeref:typename:bool
m_host	dependencies/sfml/include/SFML/Network/Http.hpp	/^    IpAddress      m_host;       \/\/\/< Web host address$/;"	m	class:sf::Http	typeref:typename:IpAddress
m_hostName	dependencies/sfml/include/SFML/Network/Http.hpp	/^    std::string    m_hostName;   \/\/\/< Web host name$/;"	m	class:sf::Http	typeref:typename:std::string
m_impl	dependencies/sfml/include/SFML/Graphics/RenderTexture.hpp	/^    priv::RenderTextureImpl* m_impl;    \/\/\/< Platform\/hardware specific implementation$/;"	m	class:sf::RenderTexture	typeref:typename:priv::RenderTextureImpl *
m_impl	dependencies/sfml/include/SFML/Network/SocketSelector.hpp	/^    SocketSelectorImpl* m_impl; \/\/\/< Opaque pointer to the implementation (which requires OS-/;"	m	class:sf::SocketSelector	typeref:typename:SocketSelectorImpl *
m_impl	dependencies/sfml/include/SFML/System/Thread.hpp	/^    priv::ThreadImpl* m_impl;       \/\/\/< OS-specific implementation of the thread$/;"	m	class:sf::Thread	typeref:typename:priv::ThreadImpl *
m_impl	dependencies/sfml/include/SFML/System/ThreadLocal.hpp	/^    priv::ThreadLocalImpl* m_impl; \/\/\/< Pointer to the OS specific implementation$/;"	m	class:sf::ThreadLocal	typeref:typename:priv::ThreadLocalImpl *
m_impl	dependencies/sfml/include/SFML/Window/Window.hpp	/^    priv::WindowImpl* m_impl;           \/\/\/< Platform-specific implementation of the window$/;"	m	class:sf::Window	typeref:typename:priv::WindowImpl *
m_index	dependencies/spriter/spriterengine/user_override/jsonspriterfileelementwrapper.h	/^		int m_index; \/\/ Index of the current element$/;"	m	class:SpriterEngine::JSONSpriterFileElementWrapper	typeref:typename:int
m_info	dependencies/sfml/include/SFML/Graphics/Font.hpp	/^    Info                       m_info;        \/\/\/< Information about the font$/;"	m	class:sf::Font	typeref:typename:Info
m_insideBounds	dependencies/sfml/include/SFML/Graphics/Shape.hpp	/^    FloatRect      m_insideBounds;     \/\/\/< Bounding rectangle of the inside (fill)$/;"	m	class:sf::Shape	typeref:typename:FloatRect
m_invTransformUpdated	dependencies/sfml/include/SFML/Graphics/View.hpp	/^    mutable bool      m_invTransformUpdated; \/\/\/< Internal state telling if the inverse trans/;"	m	class:sf::View	typeref:typename:bool
m_inverseTransform	dependencies/sfml/include/SFML/Graphics/Transformable.hpp	/^    mutable Transform m_inverseTransform;           \/\/\/< Combined transformation of the objec/;"	m	class:sf::Transformable	typeref:typename:Transform
m_inverseTransform	dependencies/sfml/include/SFML/Graphics/View.hpp	/^    mutable Transform m_inverseTransform;    \/\/\/< Precomputed inverse projection transform co/;"	m	class:sf::View	typeref:typename:Transform
m_inverseTransformNeedUpdate	dependencies/sfml/include/SFML/Graphics/Transformable.hpp	/^    mutable bool      m_inverseTransformNeedUpdate; \/\/\/< Does the transform need to be recomp/;"	m	class:sf::Transformable	typeref:typename:bool
m_isBlocking	dependencies/sfml/include/SFML/Network/Socket.hpp	/^    bool         m_isBlocking; \/\/\/< Current blocking mode of the socket$/;"	m	class:sf::Socket	typeref:typename:bool
m_isCapturing	dependencies/sfml/include/SFML/Audio/SoundRecorder.hpp	/^    bool               m_isCapturing;        \/\/\/< Capturing state$/;"	m	class:sf::SoundRecorder	typeref:typename:bool
m_isRepeated	dependencies/sfml/include/SFML/Graphics/Texture.hpp	/^    bool         m_isRepeated;    \/\/\/< Is the texture in repeat mode?$/;"	m	class:sf::Texture	typeref:typename:bool
m_isSmooth	dependencies/sfml/include/SFML/Graphics/Texture.hpp	/^    bool         m_isSmooth;      \/\/\/< Status of the smooth filter$/;"	m	class:sf::Texture	typeref:typename:bool
m_isStreaming	dependencies/sfml/include/SFML/Audio/SoundStream.hpp	/^    bool          m_isStreaming;             \/\/\/< Streaming state (true = playing, false = st/;"	m	class:sf::SoundStream	typeref:typename:bool
m_isValid	dependencies/sfml/include/SFML/Network/Packet.hpp	/^    bool              m_isValid; \/\/\/< Reading state of the packet$/;"	m	class:sf::Packet	typeref:typename:bool
m_it	dependencies/nlohmann/json.hpp	/^    difference_type m_it = (std::numeric_limits<std::ptrdiff_t>::min)();$/;"	m	class:nlohmann::detail::primitive_iterator_t	typeref:typename:difference_type
m_it	dependencies/nlohmann/json.hpp	/^    internal_iterator<typename std::remove_const<BasicJsonType>::type> m_it;$/;"	m	class:nlohmann::detail::iter_impl	typeref:typename:internal_iterator<typename std::remove_const<BasicJsonType>::type>
m_it	dependencies/spriter/spriterengine/user_override/json.hpp	/^			difference_type m_it = (std::numeric_limits<std::ptrdiff_t>::min)();$/;"	m	class:nlohmann::detail::primitive_iterator_t	typeref:typename:difference_type
m_it	dependencies/spriter/spriterengine/user_override/json.hpp	/^			internal_iterator<typename std::remove_const<BasicJsonType>::type> m_it;$/;"	m	class:nlohmann::detail::iter_impl	typeref:typename:internal_iterator<typename std::remove_const<BasicJsonType>::type>
m_json	dependencies/spriter/spriterengine/user_override/jsonspriterfiledocumentwrapper.h	/^		json m_json;$/;"	m	class:SpriterEngine::JSONSpriterFileDocumentWrapper	typeref:typename:json
m_lexer	dependencies/nlohmann/json.hpp	/^    lexer_t m_lexer;$/;"	m	class:nlohmann::detail::parser	typeref:typename:lexer_t
m_lexer	dependencies/spriter/spriterengine/user_override/json.hpp	/^			lexer_t m_lexer;$/;"	m	class:nlohmann::detail::parser	typeref:typename:lexer_t
m_library	dependencies/sfml/include/SFML/Graphics/Font.hpp	/^    void*                      m_library;     \/\/\/< Pointer to the internal library interface /;"	m	class:sf::Font	typeref:typename:void *
m_listing	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^        std::vector<std::string> m_listing; \/\/\/< Directory\/file names extracted from the dat/;"	m	class:sf::Ftp::ListingResponse	typeref:typename:std::vector<std::string>
m_loaded	dependencies/spriter/spriterengine/user_override/sfmlatlasfile.h	/^		bool m_loaded;$/;"	m	class:SpriterEngine::SfmlAtlasFile	typeref:typename:bool
m_loop	dependencies/sfml/include/SFML/Audio/SoundStream.hpp	/^    bool          m_loop;                    \/\/\/< Loop flag (true to loop, false to play once/;"	m	class:sf::SoundStream	typeref:typename:bool
m_majorVersion	dependencies/sfml/include/SFML/Network/Http.hpp	/^        unsigned int m_majorVersion; \/\/\/< Major HTTP version$/;"	m	class:sf::Http::Request	typeref:typename:unsigned int
m_majorVersion	dependencies/sfml/include/SFML/Network/Http.hpp	/^        unsigned int m_majorVersion; \/\/\/< Major HTTP version$/;"	m	class:sf::Http::Response	typeref:typename:unsigned int
m_matrix	dependencies/sfml/include/SFML/Graphics/Transform.hpp	/^    float m_matrix[16]; \/\/\/< 4x4 matrix defining the transformation$/;"	m	class:sf::Transform	typeref:typename:float[16]
m_message	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^        std::string m_message; \/\/\/< Last message received from the server$/;"	m	class:sf::Ftp::Response	typeref:typename:std::string
m_method	dependencies/sfml/include/SFML/Network/Http.hpp	/^        Method       m_method;       \/\/\/< Method to use for the request$/;"	m	class:sf::Http::Request	typeref:typename:Method
m_microseconds	dependencies/sfml/include/SFML/System/Time.hpp	/^    Int64 m_microseconds; \/\/\/< Time value stored as microseconds$/;"	m	class:sf::Time	typeref:typename:Int64
m_minorVersion	dependencies/sfml/include/SFML/Network/Http.hpp	/^        unsigned int m_minorVersion; \/\/\/< Minor HTTP version$/;"	m	class:sf::Http::Request	typeref:typename:unsigned int
m_minorVersion	dependencies/sfml/include/SFML/Network/Http.hpp	/^        unsigned int m_minorVersion; \/\/\/< Minor HTTP version$/;"	m	class:sf::Http::Response	typeref:typename:unsigned int
m_mutex	dependencies/sfml/include/SFML/Audio/Music.hpp	/^    Mutex              m_mutex;    \/\/\/< Mutex protecting the data$/;"	m	class:sf::Music	typeref:typename:Mutex
m_mutex	dependencies/sfml/include/SFML/System/Lock.hpp	/^    Mutex& m_mutex; \/\/\/< Mutex to lock \/ unlock$/;"	m	class:sf::Lock	typeref:typename:Mutex &
m_mutexImpl	dependencies/sfml/include/SFML/System/Mutex.hpp	/^    priv::MutexImpl* m_mutexImpl; \/\/\/< OS-specific implementation$/;"	m	class:sf::Mutex	typeref:typename:priv::MutexImpl *
m_name	dependencies/spriter/spriterengine/user_override/jsonspriterfileattributewrapper.h	/^		std::string m_name;$/;"	m	class:SpriterEngine::JSONSpriterFileAttributeWrapper	typeref:typename:std::string
m_name	dependencies/spriter/spriterengine/user_override/jsonspriterfileelementwrapper.h	/^		std::string m_name;$/;"	m	class:SpriterEngine::JSONSpriterFileElementWrapper	typeref:typename:std::string
m_object	dependencies/nlohmann/json.hpp	/^    pointer m_object = nullptr;$/;"	m	class:nlohmann::detail::iter_impl	typeref:typename:pointer
m_object	dependencies/sfml/include/SFML/System/Thread.inl	/^    C* m_object;$/;"	m	struct:priv::ThreadMemberFunc	typeref:typename:C *	file:
m_object	dependencies/spriter/spriterengine/user_override/json.hpp	/^			pointer m_object = nullptr;$/;"	m	class:nlohmann::detail::iter_impl	typeref:typename:pointer
m_offset	dependencies/sfml/include/SFML/System/MemoryInputStream.hpp	/^    Int64       m_offset; \/\/\/< Current reading position$/;"	m	class:sf::MemoryInputStream	typeref:typename:Int64
m_origin	dependencies/sfml/include/SFML/Graphics/Transformable.hpp	/^    Vector2f          m_origin;                     \/\/\/< Origin of translation\/rotation\/sca/;"	m	class:sf::Transformable	typeref:typename:Vector2f
m_outlineColor	dependencies/sfml/include/SFML/Graphics/Shape.hpp	/^    Color          m_outlineColor;     \/\/\/< Outline color$/;"	m	class:sf::Shape	typeref:typename:Color
m_outlineColor	dependencies/sfml/include/SFML/Graphics/Text.hpp	/^    Color               m_outlineColor;       \/\/\/< Text outline color$/;"	m	class:sf::Text	typeref:typename:Color
m_outlineThickness	dependencies/sfml/include/SFML/Graphics/Shape.hpp	/^    float          m_outlineThickness; \/\/\/< Thickness of the shape's outline$/;"	m	class:sf::Shape	typeref:typename:float
m_outlineThickness	dependencies/sfml/include/SFML/Graphics/Text.hpp	/^    float               m_outlineThickness;   \/\/\/< Thickness of the text's outline$/;"	m	class:sf::Text	typeref:typename:float
m_outlineVertices	dependencies/sfml/include/SFML/Graphics/Shape.hpp	/^    VertexArray    m_outlineVertices;  \/\/\/< Vertex array containing the outline geometry$/;"	m	class:sf::Shape	typeref:typename:VertexArray
m_outlineVertices	dependencies/sfml/include/SFML/Graphics/Text.hpp	/^    mutable VertexArray m_outlineVertices;    \/\/\/< Vertex array containing the outline geomet/;"	m	class:sf::Text	typeref:typename:VertexArray
m_pages	dependencies/sfml/include/SFML/Graphics/Font.hpp	/^    mutable PageTable          m_pages;       \/\/\/< Table containing the glyphs pages by chara/;"	m	class:sf::Font	typeref:typename:PageTable
m_parent	dependencies/spriter/spriterengine/user_override/jsonspriterfileelementwrapper.h	/^		JSONSpriterFileElementWrapper *m_parent;$/;"	m	class:SpriterEngine::JSONSpriterFileElementWrapper	typeref:typename:JSONSpriterFileElementWrapper *
m_parent_object	dependencies/spriter/spriterengine/user_override/jsonspriterfileattributewrapper.h	/^		JSONSpriterFileElementWrapper* m_parent_object;$/;"	m	class:SpriterEngine::JSONSpriterFileAttributeWrapper	typeref:typename:JSONSpriterFileElementWrapper *
m_pause	include/SceneManager.h	/^	bool m_pause;$/;"	m	class:SceneManager	typeref:typename:bool
m_pendingPacket	dependencies/sfml/include/SFML/Network/TcpSocket.hpp	/^    PendingPacket m_pendingPacket; \/\/\/< Temporary data of the packet currently being received$/;"	m	class:sf::TcpSocket	typeref:typename:PendingPacket
m_pixelBuffer	dependencies/sfml/include/SFML/Graphics/Font.hpp	/^    mutable std::vector<Uint8> m_pixelBuffer; \/\/\/< Pixel buffer holding a glyph's pixels befo/;"	m	class:sf::Font	typeref:typename:std::vector<Uint8>
m_pixels	dependencies/sfml/include/SFML/Graphics/Image.hpp	/^    std::vector<Uint8> m_pixels; \/\/\/< Pixels of the image$/;"	m	class:sf::Image	typeref:typename:std::vector<Uint8>
m_pixelsFlipped	dependencies/sfml/include/SFML/Graphics/Texture.hpp	/^    mutable bool m_pixelsFlipped; \/\/\/< To work around the inconsistency in Y orientation$/;"	m	class:sf::Texture	typeref:typename:bool
m_playerEntity	include/GameScene.h	/^	SpriterEngine::EntityInstance* m_playerEntity;$/;"	m	class:GameScene	typeref:typename:SpriterEngine::EntityInstance *
m_pointCount	dependencies/sfml/include/SFML/Graphics/CircleShape.hpp	/^    std::size_t m_pointCount; \/\/\/< Number of points composing the circle$/;"	m	class:sf::CircleShape	typeref:typename:std::size_t
m_points	dependencies/sfml/include/SFML/Graphics/ConvexShape.hpp	/^    std::vector<Vector2f> m_points; \/\/\/< Points composing the convex polygon$/;"	m	class:sf::ConvexShape	typeref:typename:std::vector<Vector2f>
m_port	dependencies/sfml/include/SFML/Network/Http.hpp	/^    unsigned short m_port;       \/\/\/< Port used for connection with host$/;"	m	class:sf::Http	typeref:typename:unsigned short
m_position	dependencies/sfml/include/SFML/Graphics/Transformable.hpp	/^    Vector2f          m_position;                   \/\/\/< Position of the object in the 2D wor/;"	m	class:sf::Transformable	typeref:typename:Vector2f
m_primitiveType	dependencies/sfml/include/SFML/Graphics/VertexArray.hpp	/^    PrimitiveType       m_primitiveType; \/\/\/< Type of primitives to draw$/;"	m	class:sf::VertexArray	typeref:typename:PrimitiveType
m_processingInterval	dependencies/sfml/include/SFML/Audio/SoundRecorder.hpp	/^    Time               m_processingInterval; \/\/\/< Time period between calls to onProcessSampl/;"	m	class:sf::SoundRecorder	typeref:typename:Time
m_radius	dependencies/sfml/include/SFML/Graphics/CircleShape.hpp	/^    float       m_radius;     \/\/\/< Radius of the circle$/;"	m	class:sf::CircleShape	typeref:typename:float
m_readPos	dependencies/sfml/include/SFML/Network/Packet.hpp	/^    std::size_t       m_readPos; \/\/\/< Current reading position in the packet$/;"	m	class:sf::Packet	typeref:typename:std::size_t
m_reader	dependencies/sfml/include/SFML/Audio/InputSoundFile.hpp	/^    SoundFileReader* m_reader;       \/\/\/< Reader that handles I\/O on the file's format$/;"	m	class:sf::InputSoundFile	typeref:typename:SoundFileReader *
m_receiveBuffer	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^    std::string m_receiveBuffer; \/\/\/< Received command data that is yet to be processed$/;"	m	class:sf::Ftp	typeref:typename:std::string
m_refCount	dependencies/sfml/include/SFML/Graphics/Font.hpp	/^    int*                       m_refCount;    \/\/\/< Reference counter used by implicit sharing$/;"	m	class:sf::Font	typeref:typename:int *
m_rotation	dependencies/sfml/include/SFML/Graphics/Transformable.hpp	/^    float             m_rotation;                   \/\/\/< Orientation of the object, in degree/;"	m	class:sf::Transformable	typeref:typename:float
m_rotation	dependencies/sfml/include/SFML/Graphics/View.hpp	/^    float             m_rotation;            \/\/\/< Angle of rotation of the view rectangle, in/;"	m	class:sf::View	typeref:typename:float
m_running	include/SceneManager.h	/^	bool m_running;$/;"	m	class:SceneManager	typeref:typename:bool
m_sRgb	dependencies/sfml/include/SFML/Graphics/Texture.hpp	/^    bool         m_sRgb;          \/\/\/< Should the texture source be converted from sRGB?$/;"	m	class:sf::Texture	typeref:typename:bool
m_sampleCount	dependencies/sfml/include/SFML/Audio/InputSoundFile.hpp	/^    Uint64           m_sampleCount;  \/\/\/< Total number of samples in the file$/;"	m	class:sf::InputSoundFile	typeref:typename:Uint64
m_sampleRate	dependencies/sfml/include/SFML/Audio/InputSoundFile.hpp	/^    unsigned int     m_sampleRate;   \/\/\/< Number of samples per second$/;"	m	class:sf::InputSoundFile	typeref:typename:unsigned int
m_sampleRate	dependencies/sfml/include/SFML/Audio/SoundRecorder.hpp	/^    unsigned int       m_sampleRate;         \/\/\/< Sample rate$/;"	m	class:sf::SoundRecorder	typeref:typename:unsigned int
m_sampleRate	dependencies/sfml/include/SFML/Audio/SoundStream.hpp	/^    unsigned int  m_sampleRate;              \/\/\/< Frequency (samples \/ second)$/;"	m	class:sf::SoundStream	typeref:typename:unsigned int
m_samples	dependencies/sfml/include/SFML/Audio/Music.hpp	/^    std::vector<Int16> m_samples;  \/\/\/< Temporary buffer of samples$/;"	m	class:sf::Music	typeref:typename:std::vector<Int16>
m_samples	dependencies/sfml/include/SFML/Audio/SoundBuffer.hpp	/^    std::vector<Int16> m_samples;  \/\/\/< Samples buffer$/;"	m	class:sf::SoundBuffer	typeref:typename:std::vector<Int16>
m_samples	dependencies/sfml/include/SFML/Audio/SoundBufferRecorder.hpp	/^    std::vector<Int16> m_samples; \/\/\/< Temporary sample buffer to hold the recorded data$/;"	m	class:sf::SoundBufferRecorder	typeref:typename:std::vector<Int16>
m_samples	dependencies/sfml/include/SFML/Audio/SoundRecorder.hpp	/^    std::vector<Int16> m_samples;            \/\/\/< Buffer to store captured samples$/;"	m	class:sf::SoundRecorder	typeref:typename:std::vector<Int16>
m_samplesProcessed	dependencies/sfml/include/SFML/Audio/SoundStream.hpp	/^    Uint64        m_samplesProcessed;        \/\/\/< Number of buffers processed since beginning/;"	m	class:sf::SoundStream	typeref:typename:Uint64
m_scale	dependencies/sfml/include/SFML/Graphics/Transformable.hpp	/^    Vector2f          m_scale;                      \/\/\/< Scale of the object$/;"	m	class:sf::Transformable	typeref:typename:Vector2f
m_scenes	include/SceneManager.h	/^	std::vector<Scene*> m_scenes;$/;"	m	class:SceneManager	typeref:typename:std::vector<Scene * >
m_sendPos	dependencies/sfml/include/SFML/Network/Packet.hpp	/^    std::size_t       m_sendPos; \/\/\/< Current send position in the packet (for handling parti/;"	m	class:sf::Packet	typeref:typename:std::size_t
m_shaderProgram	dependencies/sfml/include/SFML/Graphics/Shader.hpp	/^    unsigned int m_shaderProgram;  \/\/\/< OpenGL identifier for the program$/;"	m	class:sf::Shader	typeref:typename:unsigned int
m_size	dependencies/sfml/include/SFML/Graphics/Image.hpp	/^    Vector2u           m_size;   \/\/\/< Image size$/;"	m	class:sf::Image	typeref:typename:Vector2u
m_size	dependencies/sfml/include/SFML/Graphics/RectangleShape.hpp	/^    Vector2f m_size; \/\/\/< Size of the rectangle$/;"	m	class:sf::RectangleShape	typeref:typename:Vector2f
m_size	dependencies/sfml/include/SFML/Graphics/Texture.hpp	/^    Vector2u     m_size;          \/\/\/< Public texture size$/;"	m	class:sf::Texture	typeref:typename:Vector2u
m_size	dependencies/sfml/include/SFML/Graphics/View.hpp	/^    Vector2f          m_size;                \/\/\/< Size of the view, in scene coordinates$/;"	m	class:sf::View	typeref:typename:Vector2f
m_size	dependencies/sfml/include/SFML/System/MemoryInputStream.hpp	/^    Int64       m_size;   \/\/\/< Total size of the data$/;"	m	class:sf::MemoryInputStream	typeref:typename:Int64
m_size	dependencies/sfml/include/SFML/Window/Window.hpp	/^    Vector2u          m_size;           \/\/\/< Current size of the window$/;"	m	class:sf::Window	typeref:typename:Vector2u
m_socket	dependencies/sfml/include/SFML/Network/Socket.hpp	/^    SocketHandle m_socket;     \/\/\/< Socket descriptor$/;"	m	class:sf::Socket	typeref:typename:SocketHandle
m_sounds	dependencies/sfml/include/SFML/Audio/SoundBuffer.hpp	/^    mutable SoundList  m_sounds;   \/\/\/< List of sounds that are using this buffer$/;"	m	class:sf::SoundBuffer	typeref:typename:SoundList
m_source	dependencies/sfml/include/SFML/Audio/SoundSource.hpp	/^    unsigned int m_source; \/\/\/< OpenAL source identifier$/;"	m	class:sf::SoundSource	typeref:typename:unsigned int
m_startTime	dependencies/sfml/include/SFML/System/Clock.hpp	/^    Time m_startTime; \/\/\/< Time of last reset, in microseconds$/;"	m	class:sf::Clock	typeref:typename:Time
m_status	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^        Status      m_status;  \/\/\/< Status code returned from the server$/;"	m	class:sf::Ftp::Response	typeref:typename:Status
m_status	dependencies/sfml/include/SFML/Network/Http.hpp	/^        Status       m_status;       \/\/\/< Status code$/;"	m	class:sf::Http::Response	typeref:typename:Status
m_stream	dependencies/sfml/include/SFML/Audio/InputSoundFile.hpp	/^    InputStream*     m_stream;       \/\/\/< Input stream used to access the file's data$/;"	m	class:sf::InputSoundFile	typeref:typename:InputStream *
m_stream	dependencies/sfml/include/SFML/Graphics/Font.hpp	/^    void*                      m_stream; \/\/\/< Asset file streamer (if loaded from file)$/;"	m	class:sf::Font	typeref:typename:void *
m_stream	dependencies/sfml/include/SFML/Graphics/Image.hpp	/^    void*              m_stream; \/\/\/< Asset file streamer (if loaded from file)$/;"	m	class:sf::Image	typeref:typename:void *
m_streamOwned	dependencies/sfml/include/SFML/Audio/InputSoundFile.hpp	/^    bool             m_streamOwned;  \/\/\/< Is the stream internal or external?$/;"	m	class:sf::InputSoundFile	typeref:typename:bool
m_streamRec	dependencies/sfml/include/SFML/Graphics/Font.hpp	/^    void*                      m_streamRec;   \/\/\/< Pointer to the stream rec instance (it is /;"	m	class:sf::Font	typeref:typename:void *
m_string	dependencies/sfml/include/SFML/Graphics/Text.hpp	/^    String              m_string;             \/\/\/< String to display$/;"	m	class:sf::Text	typeref:typename:String
m_string	dependencies/sfml/include/SFML/System/String.hpp	/^    std::basic_string<Uint32> m_string; \/\/\/< Internal string of UTF-32 characters$/;"	m	class:sf::String	typeref:typename:std::basic_string<Uint32>
m_stroker	dependencies/sfml/include/SFML/Graphics/Font.hpp	/^    void*                      m_stroker;     \/\/\/< Pointer to the stroker (it is typeless to /;"	m	class:sf::Font	typeref:typename:void *
m_style	dependencies/sfml/include/SFML/Graphics/Text.hpp	/^    Uint32              m_style;              \/\/\/< Text style (see Style enum)$/;"	m	class:sf::Text	typeref:typename:Uint32
m_texture	dependencies/sfml/include/SFML/Graphics/RenderTexture.hpp	/^    Texture                  m_texture; \/\/\/< Target texture to draw on$/;"	m	class:sf::RenderTexture	typeref:typename:Texture
m_texture	dependencies/sfml/include/SFML/Graphics/Shape.hpp	/^    const Texture* m_texture;          \/\/\/< Texture of the shape$/;"	m	class:sf::Shape	typeref:typename:const Texture *
m_texture	dependencies/sfml/include/SFML/Graphics/Sprite.hpp	/^    const Texture* m_texture;     \/\/\/< Texture of the sprite$/;"	m	class:sf::Sprite	typeref:typename:const Texture *
m_texture	dependencies/sfml/include/SFML/Graphics/Texture.hpp	/^    unsigned int m_texture;       \/\/\/< Internal texture identifier$/;"	m	class:sf::Texture	typeref:typename:unsigned int
m_textureRect	dependencies/sfml/include/SFML/Graphics/Shape.hpp	/^    IntRect        m_textureRect;      \/\/\/< Rectangle defining the area of the source texture/;"	m	class:sf::Shape	typeref:typename:IntRect
m_textureRect	dependencies/sfml/include/SFML/Graphics/Sprite.hpp	/^    IntRect        m_textureRect; \/\/\/< Rectangle defining the area of the source texture to d/;"	m	class:sf::Sprite	typeref:typename:IntRect
m_textures	dependencies/sfml/include/SFML/Graphics/Shader.hpp	/^    TextureTable m_textures;       \/\/\/< Texture variables in the shader, mapped to their loca/;"	m	class:sf::Shader	typeref:typename:TextureTable
m_thread	dependencies/sfml/include/SFML/Audio/SoundRecorder.hpp	/^    Thread             m_thread;             \/\/\/< Thread running the background recording tas/;"	m	class:sf::SoundRecorder	typeref:typename:Thread
m_thread	dependencies/sfml/include/SFML/Audio/SoundStream.hpp	/^    Thread        m_thread;                  \/\/\/< Thread running the background tasks$/;"	m	class:sf::SoundStream	typeref:typename:Thread
m_threadMutex	dependencies/sfml/include/SFML/Audio/SoundStream.hpp	/^    mutable Mutex m_threadMutex;             \/\/\/< Thread mutex$/;"	m	class:sf::SoundStream	typeref:typename:Mutex
m_threadStartState	dependencies/sfml/include/SFML/Audio/SoundStream.hpp	/^    Status        m_threadStartState;        \/\/\/< State the thread starts in (Playing, Paused/;"	m	class:sf::SoundStream	typeref:typename:Status
m_transform	dependencies/sfml/include/SFML/Graphics/Transformable.hpp	/^    mutable Transform m_transform;                  \/\/\/< Combined transformation of the objec/;"	m	class:sf::Transformable	typeref:typename:Transform
m_transform	dependencies/sfml/include/SFML/Graphics/View.hpp	/^    mutable Transform m_transform;           \/\/\/< Precomputed projection transform correspond/;"	m	class:sf::View	typeref:typename:Transform
m_transformNeedUpdate	dependencies/sfml/include/SFML/Graphics/Transformable.hpp	/^    mutable bool      m_transformNeedUpdate;        \/\/\/< Does the transform need to be recomp/;"	m	class:sf::Transformable	typeref:typename:bool
m_transformUpdated	dependencies/sfml/include/SFML/Graphics/View.hpp	/^    mutable bool      m_transformUpdated;    \/\/\/< Internal state telling if the transform nee/;"	m	class:sf::View	typeref:typename:bool
m_type	dependencies/nlohmann/json.hpp	/^    value_t m_type = value_t::null;$/;"	m	class:nlohmann::basic_json	typeref:typename:value_t
m_type	dependencies/sfml/include/SFML/Network/Socket.hpp	/^    Type         m_type;       \/\/\/< Type of the socket (TCP or UDP)$/;"	m	class:sf::Socket	typeref:typename:Type
m_type	dependencies/spriter/spriterengine/user_override/json.hpp	/^			value_t m_type = value_t::null;$/;"	m	class:nlohmann::basic_json	typeref:typename:value_t
m_type	include/Scene.h	/^	Type m_type;$/;"	m	class:Scene	typeref:typename:Type
m_uniforms	dependencies/sfml/include/SFML/Graphics/Shader.hpp	/^    UniformTable m_uniforms;       \/\/\/< Parameters location cache$/;"	m	class:sf::Shader	typeref:typename:UniformTable
m_uri	dependencies/sfml/include/SFML/Network/Http.hpp	/^        std::string  m_uri;          \/\/\/< Target URI of the request$/;"	m	class:sf::Http::Request	typeref:typename:std::string
m_valid	dependencies/sfml/include/SFML/Network/IpAddress.hpp	/^    bool   m_valid;   \/\/\/< Is the address valid?$/;"	m	class:sf::IpAddress	typeref:typename:bool
m_value	dependencies/spriter/spriterengine/user_override/jsonspriterfileattributewrapper.h	/^		json m_value;$/;"	m	class:SpriterEngine::JSONSpriterFileAttributeWrapper	typeref:typename:json
m_vertices	dependencies/sfml/include/SFML/Graphics/Shape.hpp	/^    VertexArray    m_vertices;         \/\/\/< Vertex array containing the fill geometry$/;"	m	class:sf::Shape	typeref:typename:VertexArray
m_vertices	dependencies/sfml/include/SFML/Graphics/Sprite.hpp	/^    Vertex         m_vertices[4]; \/\/\/< Vertices defining the sprite's geometry$/;"	m	class:sf::Sprite	typeref:typename:Vertex[4]
m_vertices	dependencies/sfml/include/SFML/Graphics/Text.hpp	/^    mutable VertexArray m_vertices;           \/\/\/< Vertex array containing the fill geometry$/;"	m	class:sf::Text	typeref:typename:VertexArray
m_vertices	dependencies/sfml/include/SFML/Graphics/VertexArray.hpp	/^    std::vector<Vertex> m_vertices;      \/\/\/< Vertices contained in the array$/;"	m	class:sf::VertexArray	typeref:typename:std::vector<Vertex>
m_view	dependencies/sfml/include/SFML/Graphics/RenderTarget.hpp	/^    View        m_view;        \/\/\/< Current view$/;"	m	class:sf::RenderTarget	typeref:typename:View
m_viewport	dependencies/sfml/include/SFML/Graphics/View.hpp	/^    FloatRect         m_viewport;            \/\/\/< Viewport rectangle, expressed as a factor o/;"	m	class:sf::View	typeref:typename:FloatRect
m_window	include/SceneManager.h	/^	sf::RenderWindow m_window;$/;"	m	class:SceneManager	typeref:typename:sf::RenderWindow
m_writer	dependencies/sfml/include/SFML/Audio/OutputSoundFile.hpp	/^    SoundFileWriter* m_writer; \/\/\/< Writer that handles I\/O on the file's format$/;"	m	class:sf::OutputSoundFile	typeref:typename:SoundFileWriter *
main	dependencies/sfml/include/SFML/Main.hpp	/^    #define main /;"	d
main	src/main.cpp	/^int main() {$/;"	f	typeref:typename:int
mainlineKeyAtIndex	dependencies/spriter/spriterengine/animation/animationinstance.cpp	/^	MainlineKeyInstance * AnimationInstance::mainlineKeyAtIndex(int index)$/;"	f	class:SpriterEngine::AnimationInstance	typeref:typename:MainlineKeyInstance *
mainlineKeyCount	dependencies/spriter/spriterengine/animation/animationinstance.cpp	/^	int AnimationInstance::mainlineKeyCount()$/;"	f	class:SpriterEngine::AnimationInstance	typeref:typename:int
mainlineKeyIterator	dependencies/spriter/spriterengine/animation/animationinstance.h	/^		MainlineKeyInstanceVectorIterator mainlineKeyIterator;$/;"	m	class:SpriterEngine::AnimationInstance	typeref:typename:MainlineKeyInstanceVectorIterator
mainlineKeys	dependencies/spriter/spriterengine/animation/animation.h	/^		MainlineKeyVector mainlineKeys;$/;"	m	class:SpriterEngine::Animation	typeref:typename:MainlineKeyVector
mainlineKeys	dependencies/spriter/spriterengine/animation/animationinstance.h	/^		MainlineKeyInstanceVector mainlineKeys;$/;"	m	class:SpriterEngine::AnimationInstance	typeref:typename:MainlineKeyInstanceVector
majorVersion	dependencies/sfml/include/SFML/Window/ContextSettings.hpp	/^    unsigned int majorVersion;      \/\/\/< Major number of the context version to create$/;"	m	struct:sf::ContextSettings	typeref:typename:unsigned int
make_index_sequence	dependencies/nlohmann/json.hpp	/^struct make_index_sequence$/;"	s	namespace:nlohmann::detail
make_index_sequence	dependencies/nlohmann/json.hpp	/^template<> struct make_index_sequence<0> : index_sequence<> {};$/;"	s	namespace:nlohmann::detail
make_index_sequence	dependencies/nlohmann/json.hpp	/^template<> struct make_index_sequence<1> : index_sequence<0> {};$/;"	s	namespace:nlohmann::detail
make_index_sequence	dependencies/spriter/spriterengine/user_override/json.hpp	/^		struct make_index_sequence$/;"	s	namespace:nlohmann::detail
make_index_sequence	dependencies/spriter/spriterengine/user_override/json.hpp	/^		template<> struct make_index_sequence<0> : index_sequence<> {};$/;"	s	namespace:nlohmann::detail
make_index_sequence	dependencies/spriter/spriterengine/user_override/json.hpp	/^		template<> struct make_index_sequence<1> : index_sequence<0> {};$/;"	s	namespace:nlohmann::detail
mapInstructions	dependencies/spriter/spriterengine/charactermap/charactermap.h	/^		CharacterMapInstructionVector mapInstructions;$/;"	m	class:SpriterEngine::CharacterMap	typeref:typename:CharacterMapInstructionVector
max_size	dependencies/nlohmann/json.hpp	/^    size_type max_size() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:size_type
max_size	dependencies/spriter/spriterengine/user_override/json.hpp	/^			size_type max_size() const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:size_type
merge_patch	dependencies/nlohmann/json.hpp	/^    void merge_patch(const basic_json& patch)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
merge_patch	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void merge_patch(const basic_json& patch) {$/;"	f	class:nlohmann::basic_json	typeref:typename:void
meta	dependencies/nlohmann/json.hpp	/^    static basic_json meta()$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
meta	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static basic_json meta() {$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
minorVersion	dependencies/sfml/include/SFML/Window/ContextSettings.hpp	/^    unsigned int minorVersion;      \/\/\/< Minor number of the context version to create$/;"	m	struct:sf::ContextSettings	typeref:typename:unsigned int
minus	dependencies/nlohmann/json.hpp	/^    diyfp minus;$/;"	m	struct:nlohmann::detail::dtoa_impl::boundaries	typeref:typename:diyfp
minus	dependencies/spriter/spriterengine/user_override/json.hpp	/^				diyfp minus;$/;"	m	struct:nlohmann::detail::dtoa_impl::boundaries	typeref:typename:diyfp
mouseButton	dependencies/sfml/include/SFML/Window/Event.hpp	/^        MouseButtonEvent      mouseButton;       \/\/\/< Mouse button event parameters (Event::M/;"	m	union:sf::Event::__anon4b0d4c8f010a	typeref:typename:MouseButtonEvent
mouseMove	dependencies/sfml/include/SFML/Window/Event.hpp	/^        MouseMoveEvent        mouseMove;         \/\/\/< Mouse move event parameters (Event::Mou/;"	m	union:sf::Event::__anon4b0d4c8f010a	typeref:typename:MouseMoveEvent
mouseWheel	dependencies/sfml/include/SFML/Window/Event.hpp	/^        MouseWheelEvent       mouseWheel;        \/\/\/< Mouse wheel event parameters (Event::Mo/;"	m	union:sf::Event::__anon4b0d4c8f010a	typeref:typename:MouseWheelEvent
mouseWheelScroll	dependencies/sfml/include/SFML/Window/Event.hpp	/^        MouseWheelScrollEvent mouseWheelScroll;  \/\/\/< Mouse wheel event parameters (Event::Mo/;"	m	union:sf::Event::__anon4b0d4c8f010a	typeref:typename:MouseWheelScrollEvent
move	dependencies/nlohmann/json.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:nlohmann::basic_json::patch::patch_operations
move	dependencies/spriter/spriterengine/user_override/json.hpp	/^				enum class patch_operations { add, remove, replace, move, copy, test, invalid };$/;"	e	enum:nlohmann::basic_json::patch::patch_operations
move_string	dependencies/nlohmann/json.hpp	/^    string_t&& move_string()$/;"	f	class:nlohmann::detail::lexer	typeref:typename:string_t &&
move_string	dependencies/spriter/spriterengine/user_override/json.hpp	/^			string_t&& move_string() {$/;"	f	class:nlohmann::detail::lexer	typeref:typename:string_t &&
moved_or_copied	dependencies/nlohmann/json.hpp	/^    value_type moved_or_copied() const$/;"	f	class:nlohmann::detail::json_ref	typeref:typename:value_type
moved_or_copied	dependencies/spriter/spriterengine/user_override/json.hpp	/^			value_type moved_or_copied() const {$/;"	f	class:nlohmann::detail::json_ref	typeref:typename:value_type
mul	dependencies/nlohmann/json.hpp	/^    static diyfp mul(const diyfp& x, const diyfp& y) noexcept$/;"	f	struct:nlohmann::detail::dtoa_impl::diyfp	typeref:typename:diyfp
mul	dependencies/spriter/spriterengine/user_override/json.hpp	/^				static diyfp mul(const diyfp& x, const diyfp& y) noexcept {$/;"	f	struct:nlohmann::detail::dtoa_impl::diyfp	typeref:typename:diyfp
multiply	dependencies/spriter/spriterengine/global/global.h	/^	inline point multiply(const point &a, const point &b)$/;"	f	namespace:SpriterEngine	typeref:typename:point
name	dependencies/nlohmann/json.hpp	/^    static std::string name(const std::string& ename, int id_)$/;"	f	class:nlohmann::detail::exception	typeref:typename:std::string
name	dependencies/sfml/include/SFML/Window/Joystick.hpp	/^        String       name;      \/\/\/< Name of the joystick$/;"	m	struct:sf::Joystick::Identification	typeref:typename:String
name	dependencies/spriter/spriterengine/animation/animation.h	/^		std::string name;$/;"	m	class:SpriterEngine::Animation	typeref:typename:std::string
name	dependencies/spriter/spriterengine/animation/animationinstance.h	/^		std::string name;$/;"	m	class:SpriterEngine::AnimationInstance	typeref:typename:std::string
name	dependencies/spriter/spriterengine/entity/entity.h	/^		std::string name;$/;"	m	class:SpriterEngine::Entity	typeref:typename:std::string
name	dependencies/spriter/spriterengine/entity/object.h	/^		std::string name;$/;"	m	class:SpriterEngine::Object	typeref:typename:std::string
name	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static std::string name(const std::string& ename, int id_) {$/;"	f	class:nlohmann::detail::exception	typeref:typename:std::string
name	dependencies/spriter/spriterengine/variable/variable.h	/^		std::string name;$/;"	m	class:SpriterEngine::Variable	typeref:typename:std::string
name_separator	dependencies/nlohmann/json.hpp	/^        name_separator,   \/\/\/< the name separator `:`$/;"	e	enum:nlohmann::detail::lexer::token_type
name_separator	dependencies/spriter/spriterengine/user_override/json.hpp	/^				name_separator,   \/\/\/< the name separator `:`$/;"	e	enum:nlohmann::detail::lexer::token_type
negation	dependencies/nlohmann/json.hpp	/^template<class B> struct negation : std::integral_constant<bool, not B::value> {};$/;"	s	namespace:nlohmann::detail
negation	dependencies/spriter/spriterengine/user_override/json.hpp	/^		template<class B> struct negation : std::integral_constant<bool, not B::value> {};$/;"	s	namespace:nlohmann::detail
newAtlasFile	dependencies/spriter/spriterengine/override/filefactory.cpp	/^	AtlasFile *FileFactory::newAtlasFile(const std::string &initialFilePath)$/;"	f	class:SpriterEngine::FileFactory	typeref:typename:AtlasFile *
newAtlasFile	dependencies/spriter/spriterengine/user_override/examplefilefactory.cpp	/^	AtlasFile *ExampleFileFactory::newAtlasFile(const std::string &initialFilePath)$/;"	f	class:SpriterEngine::ExampleFileFactory	typeref:typename:AtlasFile *
newAttributeWrapperFromFirstAttribute	dependencies/spriter/spriterengine/user_override/jsonspriterfileelementwrapper.cpp	/^	SpriterFileAttributeWrapper * JSONSpriterFileElementWrapper::newAttributeWrapperFromFirstAttrib/;"	f	class:SpriterEngine::JSONSpriterFileElementWrapper	typeref:typename:SpriterFileAttributeWrapper *
newBoneInstanceInfo	dependencies/spriter/spriterengine/override/objectfactory.cpp	/^	BoneInstanceInfo * ObjectFactory::newBoneInstanceInfo(point size)$/;"	f	class:SpriterEngine::ObjectFactory	typeref:typename:BoneInstanceInfo *
newBoneInstanceInfo	dependencies/spriter/spriterengine/user_override/exampleobjectfactory.cpp	/^	BoneInstanceInfo * ExampleObjectFactory::newBoneInstanceInfo(point size)$/;"	f	class:SpriterEngine::ExampleObjectFactory	typeref:typename:BoneInstanceInfo *
newBoxInstanceInfo	dependencies/spriter/spriterengine/override/objectfactory.cpp	/^	BoxInstanceInfo * ObjectFactory::newBoxInstanceInfo(point size)$/;"	f	class:SpriterEngine::ObjectFactory	typeref:typename:BoxInstanceInfo *
newBoxInstanceInfo	dependencies/spriter/spriterengine/user_override/exampleobjectfactory.cpp	/^	BoxInstanceInfo * ExampleObjectFactory::newBoxInstanceInfo(point size)$/;"	f	class:SpriterEngine::ExampleObjectFactory	typeref:typename:BoxInstanceInfo *
newElementClone	dependencies/spriter/spriterengine/user_override/jsonspriterfileelementwrapper.cpp	/^	SpriterFileElementWrapper * JSONSpriterFileElementWrapper::newElementClone()$/;"	f	class:SpriterEngine::JSONSpriterFileElementWrapper	typeref:typename:SpriterFileElementWrapper *
newElementWrapperFromFirstElement	dependencies/spriter/spriterengine/user_override/jsonspriterfiledocumentwrapper.cpp	/^	SpriterFileElementWrapper * JSONSpriterFileDocumentWrapper::newElementWrapperFromFirstElement()$/;"	f	class:SpriterEngine::JSONSpriterFileDocumentWrapper	typeref:typename:SpriterFileElementWrapper *
newElementWrapperFromFirstElement	dependencies/spriter/spriterengine/user_override/jsonspriterfiledocumentwrapper.cpp	/^	SpriterFileElementWrapper * JSONSpriterFileDocumentWrapper::newElementWrapperFromFirstElement(c/;"	f	class:SpriterEngine::JSONSpriterFileDocumentWrapper	typeref:typename:SpriterFileElementWrapper *
newElementWrapperFromFirstElement	dependencies/spriter/spriterengine/user_override/jsonspriterfileelementwrapper.cpp	/^	SpriterFileElementWrapper * JSONSpriterFileElementWrapper::newElementWrapperFromFirstElement()$/;"	f	class:SpriterEngine::JSONSpriterFileElementWrapper	typeref:typename:SpriterFileElementWrapper *
newElementWrapperFromFirstElement	dependencies/spriter/spriterengine/user_override/jsonspriterfileelementwrapper.cpp	/^	SpriterFileElementWrapper * JSONSpriterFileElementWrapper::newElementWrapperFromFirstElement(co/;"	f	class:SpriterEngine::JSONSpriterFileElementWrapper	typeref:typename:SpriterFileElementWrapper *
newElementWrapperFromNextSiblingElement	dependencies/spriter/spriterengine/user_override/jsonspriterfileelementwrapper.cpp	/^	SpriterFileElementWrapper * JSONSpriterFileElementWrapper::newElementWrapperFromNextSiblingElem/;"	f	class:SpriterEngine::JSONSpriterFileElementWrapper	typeref:typename:SpriterFileElementWrapper *
newImageFile	dependencies/spriter/spriterengine/override/filefactory.cpp	/^	ImageFile * FileFactory::newImageFile(const std::string &initialFilePath, point initialDefaultP/;"	f	class:SpriterEngine::FileFactory	typeref:typename:ImageFile *
newImageFile	dependencies/spriter/spriterengine/user_override/examplefilefactory.cpp	/^	ImageFile * ExampleFileFactory::newImageFile(const std::string &initialFilePath, point initialD/;"	f	class:SpriterEngine::ExampleFileFactory	typeref:typename:ImageFile *
newPointInstanceInfo	dependencies/spriter/spriterengine/override/objectfactory.cpp	/^	PointInstanceInfo * ObjectFactory::newPointInstanceInfo()$/;"	f	class:SpriterEngine::ObjectFactory	typeref:typename:PointInstanceInfo *
newPointInstanceInfo	dependencies/spriter/spriterengine/user_override/exampleobjectfactory.cpp	/^	PointInstanceInfo * ExampleObjectFactory::newPointInstanceInfo()$/;"	f	class:SpriterEngine::ExampleObjectFactory	typeref:typename:PointInstanceInfo *
newProxyKey	dependencies/spriter/spriterengine/timeline/timelinekey.cpp	/^	TimelineKey * TimelineKey::newProxyKey(real newTime, real newNextTime, bool makeInstant)$/;"	f	class:SpriterEngine::TimelineKey	typeref:typename:TimelineKey *
newScmlDocumentWrapper	dependencies/spriter/spriterengine/override/filefactory.cpp	/^	SpriterFileDocumentWrapper * FileFactory::newScmlDocumentWrapper()$/;"	f	class:SpriterEngine::FileFactory	typeref:typename:SpriterFileDocumentWrapper *
newScmlDocumentWrapper	dependencies/spriter/spriterengine/user_override/examplefilefactory.cpp	/^	SpriterFileDocumentWrapper * ExampleFileFactory::newScmlDocumentWrapper()$/;"	f	class:SpriterEngine::ExampleFileFactory	typeref:typename:SpriterFileDocumentWrapper *
newSconDocumentWrapper	dependencies/spriter/spriterengine/override/filefactory.cpp	/^	SpriterFileDocumentWrapper * FileFactory::newSconDocumentWrapper()$/;"	f	class:SpriterEngine::FileFactory	typeref:typename:SpriterFileDocumentWrapper *
newSconDocumentWrapper	dependencies/spriter/spriterengine/user_override/examplefilefactory.cpp	/^	SpriterFileDocumentWrapper *ExampleFileFactory::newSconDocumentWrapper()$/;"	f	class:SpriterEngine::ExampleFileFactory	typeref:typename:SpriterFileDocumentWrapper *
newSoundFile	dependencies/spriter/spriterengine/override/filefactory.cpp	/^	SoundFile * FileFactory::newSoundFile(const std::string &initialFilePath)$/;"	f	class:SpriterEngine::FileFactory	typeref:typename:SoundFile *
newSoundFile	dependencies/spriter/spriterengine/user_override/examplefilefactory.cpp	/^	SoundFile * ExampleFileFactory::newSoundFile(const std::string & initialFilePath)$/;"	f	class:SpriterEngine::ExampleFileFactory	typeref:typename:SoundFile *
newSoundInfoReference	dependencies/spriter/spriterengine/override/soundfile.cpp	/^	SoundObjectInfoReference * SoundFile::newSoundInfoReference()$/;"	f	class:SpriterEngine::SoundFile	typeref:typename:SoundObjectInfoReference *
newSoundInfoReference	dependencies/spriter/spriterengine/user_override/sfmlsoundfile.cpp	/^	SoundObjectInfoReference * SfmlSoundFile::newSoundInfoReference()$/;"	f	class:SpriterEngine::SfmlSoundFile	typeref:typename:SoundObjectInfoReference *
newSpriteObjectinfo	dependencies/spriter/spriterengine/override/objectfactory.cpp	/^	SpriteObjectInfo *ObjectFactory::newSpriteObjectinfo()$/;"	f	class:SpriterEngine::ObjectFactory	typeref:typename:SpriteObjectInfo *
newTriggerObjectInfo	dependencies/spriter/spriterengine/override/objectfactory.cpp	/^	TriggerObjectInfo * ObjectFactory::newTriggerObjectInfo(std::string newTriggerName)$/;"	f	class:SpriterEngine::ObjectFactory	typeref:typename:TriggerObjectInfo *
next	dependencies/sfml/include/SFML/System/Utf.inl	/^In Utf<16>::next(In begin, In end)$/;"	f	class:Utf	typeref:typename:In
next	dependencies/sfml/include/SFML/System/Utf.inl	/^In Utf<32>::next(In begin, In \/*end*\/)$/;"	f	class:Utf	typeref:typename:In
next	dependencies/sfml/include/SFML/System/Utf.inl	/^In Utf<8>::next(In begin, In end)$/;"	f	class:Utf	typeref:typename:In
nextObjectInfo	dependencies/spriter/spriterengine/timeline/timelinekey.h	/^		UniversalObjectInterface *nextObjectInfo;$/;"	m	class:SpriterEngine::TimelineKey	typeref:typename:UniversalObjectInterface *
nextRow	dependencies/sfml/include/SFML/Graphics/Font.hpp	/^        unsigned int     nextRow; \/\/\/< Y position of the next new row in the texture$/;"	m	struct:sf::Font::Page	typeref:typename:unsigned int
nextTime	dependencies/spriter/spriterengine/timeinfo/timeinfo.h	/^		real nextTime;$/;"	m	class:SpriterEngine::TimeInfo	typeref:typename:real
next_byte_in_range	dependencies/nlohmann/json.hpp	/^    bool next_byte_in_range(std::initializer_list<int> ranges)$/;"	f	class:nlohmann::detail::lexer	typeref:typename:bool
next_byte_in_range	dependencies/spriter/spriterengine/user_override/json.hpp	/^			bool next_byte_in_range(std::initializer_list<int> ranges) {$/;"	f	class:nlohmann::detail::lexer	typeref:typename:bool
nlohmann	dependencies/nlohmann/json.hpp	/^namespace nlohmann$/;"	n
nlohmann	dependencies/spriter/spriterengine/user_override/json.hpp	/^namespace nlohmann {$/;"	n
normalise	include/Helpers.h	/^	inline void normalise(sf::Vector2f & v) {$/;"	f	namespace:Helpers	typeref:typename:void
normaliseCopy	include/Helpers.h	/^	inline sf::Vector2f normaliseCopy(const sf::Vector2f & v) {$/;"	f	namespace:Helpers	typeref:typename:sf::Vector2f
normalize	dependencies/nlohmann/json.hpp	/^    static diyfp normalize(diyfp x) noexcept$/;"	f	struct:nlohmann::detail::dtoa_impl::diyfp	typeref:typename:diyfp
normalize	dependencies/spriter/spriterengine/user_override/json.hpp	/^				static diyfp normalize(diyfp x) noexcept {$/;"	f	struct:nlohmann::detail::dtoa_impl::diyfp	typeref:typename:diyfp
normalize_to	dependencies/nlohmann/json.hpp	/^    static diyfp normalize_to(const diyfp& x, const int target_exponent) noexcept$/;"	f	struct:nlohmann::detail::dtoa_impl::diyfp	typeref:typename:diyfp
normalize_to	dependencies/spriter/spriterengine/user_override/json.hpp	/^				static diyfp normalize_to(const diyfp& x, const int target_exponent) noexcept {$/;"	f	struct:nlohmann::detail::dtoa_impl::diyfp	typeref:typename:diyfp
null	dependencies/nlohmann/json.hpp	/^    null,             \/\/\/< null value$/;"	e	enum:nlohmann::detail::value_t
null	dependencies/spriter/spriterengine/user_override/json.hpp	/^			null,             \/\/\/< null value$/;"	e	enum:nlohmann::detail::value_t
nullError	dependencies/spriter/spriterengine/global/settings.cpp	/^	void Settings::nullError(const std::string &errorMessage)$/;"	f	class:SpriterEngine::Settings	typeref:typename:void
number_buffer	dependencies/nlohmann/json.hpp	/^    std::array<char, 64> number_buffer{{}};$/;"	m	class:nlohmann::detail::serializer	typeref:typename:std::array<char,64>
number_buffer	dependencies/spriter/spriterengine/user_override/json.hpp	/^			std::array<char, 64> number_buffer{ {} };$/;"	m	class:nlohmann::detail::serializer	typeref:typename:std::array<char,64>
number_float	dependencies/nlohmann/json.hpp	/^        number_float_t number_float;$/;"	m	union:nlohmann::basic_json::json_value	typeref:typename:number_float_t
number_float	dependencies/nlohmann/json.hpp	/^    number_float,     \/\/\/< number value (floating-point)$/;"	e	enum:nlohmann::detail::value_t
number_float	dependencies/spriter/spriterengine/user_override/json.hpp	/^				number_float_t number_float;$/;"	m	union:nlohmann::basic_json::json_value	typeref:typename:number_float_t
number_float	dependencies/spriter/spriterengine/user_override/json.hpp	/^			number_float,     \/\/\/< number value (floating-point)$/;"	e	enum:nlohmann::detail::value_t
number_float_t	dependencies/nlohmann/json.hpp	/^    using number_float_t = NumberFloatType;$/;"	t	class:nlohmann::basic_json	typeref:typename:NumberFloatType
number_float_t	dependencies/nlohmann/json.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:nlohmann::detail::lexer	typeref:typename:BasicJsonType::number_float_t
number_float_t	dependencies/nlohmann/json.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:nlohmann::detail::parser	typeref:typename:BasicJsonType::number_float_t
number_float_t	dependencies/nlohmann/json.hpp	/^    using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:nlohmann::detail::serializer	typeref:typename:BasicJsonType::number_float_t
number_float_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using number_float_t = NumberFloatType;$/;"	t	class:nlohmann::basic_json	typeref:typename:NumberFloatType
number_float_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:nlohmann::detail::lexer	typeref:typename:BasicJsonType::number_float_t
number_float_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:nlohmann::detail::parser	typeref:typename:BasicJsonType::number_float_t
number_float_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using number_float_t = typename BasicJsonType::number_float_t;$/;"	t	class:nlohmann::detail::serializer	typeref:typename:BasicJsonType::number_float_t
number_integer	dependencies/nlohmann/json.hpp	/^        number_integer_t number_integer;$/;"	m	union:nlohmann::basic_json::json_value	typeref:typename:number_integer_t
number_integer	dependencies/nlohmann/json.hpp	/^    number_integer,   \/\/\/< number value (signed integer)$/;"	e	enum:nlohmann::detail::value_t
number_integer	dependencies/spriter/spriterengine/user_override/json.hpp	/^				number_integer_t number_integer;$/;"	m	union:nlohmann::basic_json::json_value	typeref:typename:number_integer_t
number_integer	dependencies/spriter/spriterengine/user_override/json.hpp	/^			number_integer,   \/\/\/< number value (signed integer)$/;"	e	enum:nlohmann::detail::value_t
number_integer_t	dependencies/nlohmann/json.hpp	/^    using number_integer_t = NumberIntegerType;$/;"	t	class:nlohmann::basic_json	typeref:typename:NumberIntegerType
number_integer_t	dependencies/nlohmann/json.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	dependencies/nlohmann/json.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:nlohmann::detail::lexer	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	dependencies/nlohmann/json.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:nlohmann::detail::parser	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	dependencies/nlohmann/json.hpp	/^    using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:nlohmann::detail::serializer	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using number_integer_t = NumberIntegerType;$/;"	t	class:nlohmann::basic_json	typeref:typename:NumberIntegerType
number_integer_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:nlohmann::detail::lexer	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:nlohmann::detail::parser	typeref:typename:BasicJsonType::number_integer_t
number_integer_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	class:nlohmann::detail::serializer	typeref:typename:BasicJsonType::number_integer_t
number_unsigned	dependencies/nlohmann/json.hpp	/^        number_unsigned_t number_unsigned;$/;"	m	union:nlohmann::basic_json::json_value	typeref:typename:number_unsigned_t
number_unsigned	dependencies/nlohmann/json.hpp	/^    number_unsigned,  \/\/\/< number value (unsigned integer)$/;"	e	enum:nlohmann::detail::value_t
number_unsigned	dependencies/spriter/spriterengine/user_override/json.hpp	/^				number_unsigned_t number_unsigned;$/;"	m	union:nlohmann::basic_json::json_value	typeref:typename:number_unsigned_t
number_unsigned	dependencies/spriter/spriterengine/user_override/json.hpp	/^			number_unsigned,  \/\/\/< number value (unsigned integer)$/;"	e	enum:nlohmann::detail::value_t
number_unsigned_t	dependencies/nlohmann/json.hpp	/^    using number_unsigned_t = NumberUnsignedType;$/;"	t	class:nlohmann::basic_json	typeref:typename:NumberUnsignedType
number_unsigned_t	dependencies/nlohmann/json.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	dependencies/nlohmann/json.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:nlohmann::detail::lexer	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	dependencies/nlohmann/json.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:nlohmann::detail::parser	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	dependencies/nlohmann/json.hpp	/^    using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:nlohmann::detail::serializer	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using number_unsigned_t = NumberUnsignedType;$/;"	t	class:nlohmann::basic_json	typeref:typename:NumberUnsignedType
number_unsigned_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:nlohmann::detail::lexer	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:nlohmann::detail::parser	typeref:typename:BasicJsonType::number_unsigned_t
number_unsigned_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	class:nlohmann::detail::serializer	typeref:typename:BasicJsonType::number_unsigned_t
o	dependencies/nlohmann/json.hpp	/^    output_adapter_t<char> o = nullptr;$/;"	m	class:nlohmann::detail::serializer	typeref:typename:output_adapter_t<char>
o	dependencies/spriter/spriterengine/user_override/json.hpp	/^			output_adapter_t<char> o = nullptr;$/;"	m	class:nlohmann::detail::serializer	typeref:typename:output_adapter_t<char>
oa	dependencies/nlohmann/json.hpp	/^    output_adapter_t<CharType> oa = nullptr;$/;"	m	class:nlohmann::detail::binary_writer	typeref:typename:output_adapter_t<CharType>
oa	dependencies/nlohmann/json.hpp	/^    output_adapter_t<CharType> oa = nullptr;$/;"	m	class:nlohmann::detail::output_adapter	typeref:typename:output_adapter_t<CharType>
oa	dependencies/spriter/spriterengine/user_override/json.hpp	/^			output_adapter_t<CharType> oa = nullptr;$/;"	m	class:nlohmann::detail::binary_writer	typeref:typename:output_adapter_t<CharType>
oa	dependencies/spriter/spriterengine/user_override/json.hpp	/^			output_adapter_t<CharType> oa = nullptr;$/;"	m	class:nlohmann::detail::output_adapter	typeref:typename:output_adapter_t<CharType>
object	dependencies/nlohmann/json.hpp	/^        object_t* object;$/;"	m	union:nlohmann::basic_json::json_value	typeref:typename:object_t *
object	dependencies/nlohmann/json.hpp	/^    object,           \/\/\/< object (unordered set of name\/value pairs)$/;"	e	enum:nlohmann::detail::value_t
object	dependencies/nlohmann/json.hpp	/^    static basic_json object(initializer_list_t init = {})$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
object	dependencies/spriter/spriterengine/user_override/json.hpp	/^				object_t* object;$/;"	m	union:nlohmann::basic_json::json_value	typeref:typename:object_t *
object	dependencies/spriter/spriterengine/user_override/json.hpp	/^			object,           \/\/\/< object (unordered set of name\/value pairs)$/;"	e	enum:nlohmann::detail::value_t
object	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static basic_json object(initializer_list_t init = {}) {$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
objectFactory	dependencies/spriter/spriterengine/model/spritermodel.h	/^		ObjectFactory *objectFactory;$/;"	m	class:SpriterEngine::SpriterModel	typeref:typename:ObjectFactory *
objectId	dependencies/spriter/spriterengine/entity/object.h	/^		int objectId;$/;"	m	class:SpriterEngine::Object	typeref:typename:int
objectId	dependencies/spriter/spriterengine/objectref/objectref.h	/^		int objectId;$/;"	m	class:SpriterEngine::ObjectRef	typeref:typename:int
objectId	dependencies/spriter/spriterengine/timeline/timeline.h	/^		int objectId;$/;"	m	class:SpriterEngine::Timeline	typeref:typename:int
objectIdMap	dependencies/spriter/spriterengine/entity/entity.h	/^		ObjectIdMap objectIdMap;$/;"	m	class:SpriterEngine::Entity	typeref:typename:ObjectIdMap
objectIfExistsOnCurrentFrame	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	UniversalObjectInterface *EntityInstance::objectIfExistsOnCurrentFrame(const std::string & obje/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:UniversalObjectInterface *
objectInfo	dependencies/spriter/spriterengine/timeline/timelinekey.h	/^		UniversalObjectInterface *objectInfo;$/;"	m	class:SpriterEngine::TimelineKey	typeref:typename:UniversalObjectInterface *
objectNameMap	dependencies/spriter/spriterengine/entity/entity.h	/^		ObjectNameMap objectNameMap;$/;"	m	class:SpriterEngine::Entity	typeref:typename:ObjectNameMap
objectNameMap	dependencies/spriter/spriterengine/entity/entityinstancedata.h	/^		ObjectInterfaceNameMap objectNameMap;$/;"	m	class:SpriterEngine::EntityInstanceData	typeref:typename:ObjectInterfaceNameMap
objectTimelines	dependencies/spriter/spriterengine/animation/animation.h	/^		TimelineVector objectTimelines;$/;"	m	class:SpriterEngine::Animation	typeref:typename:TimelineVector
objectType	dependencies/spriter/spriterengine/entity/object.h	/^		ObjectType objectType;$/;"	m	class:SpriterEngine::Object	typeref:typename:ObjectType
objectTypeNameToType	dependencies/spriter/spriterengine/loading/loadinghelpers.cpp	/^	Object::ObjectType objectTypeNameToType(std::string typeName)$/;"	f	namespace:SpriterEngine	typeref:typename:Object::ObjectType
object_comparator_t	dependencies/nlohmann/json.hpp	/^    using object_comparator_t = std::less<>;$/;"	t	class:nlohmann::basic_json	typeref:typename:std::less<>
object_comparator_t	dependencies/nlohmann/json.hpp	/^    using object_comparator_t = std::less<StringType>;$/;"	t	class:nlohmann::basic_json	typeref:typename:std::less<StringType>
object_comparator_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using object_comparator_t = std::less<>;$/;"	t	class:nlohmann::basic_json	typeref:typename:std::less<>
object_comparator_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using object_comparator_t = std::less<StringType>;$/;"	t	class:nlohmann::basic_json	typeref:typename:std::less<StringType>
object_end	dependencies/nlohmann/json.hpp	/^        object_end,$/;"	e	enum:nlohmann::detail::parser::parse_event_t
object_end	dependencies/spriter/spriterengine/user_override/json.hpp	/^				object_end,$/;"	e	enum:nlohmann::detail::parser::parse_event_t
object_iterator	dependencies/nlohmann/json.hpp	/^    typename BasicJsonType::object_t::iterator object_iterator {};$/;"	m	struct:nlohmann::detail::internal_iterator	typeref:typename:BasicJsonType::object_t::iterator
object_iterator	dependencies/spriter/spriterengine/user_override/json.hpp	/^			typename BasicJsonType::object_t::iterator object_iterator{};$/;"	m	struct:nlohmann::detail::internal_iterator	typeref:typename:BasicJsonType::object_t::iterator
object_start	dependencies/nlohmann/json.hpp	/^        object_start,$/;"	e	enum:nlohmann::detail::parser::parse_event_t
object_start	dependencies/spriter/spriterengine/user_override/json.hpp	/^				object_start,$/;"	e	enum:nlohmann::detail::parser::parse_event_t
object_t	dependencies/nlohmann/json.hpp	/^    using object_t = ObjectType<StringType,$/;"	t	class:nlohmann::basic_json	typeref:typename:ObjectType<StringType,basic_json,object_comparator_t,AllocatorType<std::pair<const StringType,basic_json>>>
object_t	dependencies/nlohmann/json.hpp	/^    using object_t = typename BasicJsonType::object_t;$/;"	t	class:nlohmann::detail::iter_impl	typeref:typename:BasicJsonType::object_t
object_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using object_t = ObjectType<StringType,$/;"	t	class:nlohmann::basic_json	typeref:typename:ObjectType<StringType,basic_json,object_comparator_t,AllocatorType<std::pair<const StringType,basic_json>>>
object_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using object_t = typename BasicJsonType::object_t;$/;"	t	class:nlohmann::detail::iter_impl	typeref:typename:BasicJsonType::object_t
objects	dependencies/spriter/spriterengine/entity/entityinstancedata.h	/^		ObjectInterfaceIdMap objects;$/;"	m	class:SpriterEngine::EntityInstanceData	typeref:typename:ObjectInterfaceIdMap
oh	dependencies/spriter/spriterengine/global/atlas.h	/^                real oh;$/;"	m	struct:SpriterEngine::atlasdata	typeref:typename:real
operator !=	dependencies/nlohmann/json.hpp	/^        bool operator!=(const iteration_proxy_internal& o) const noexcept$/;"	f	class:nlohmann::detail::iteration_proxy::iteration_proxy_internal	typeref:typename:bool
operator !=	dependencies/nlohmann/json.hpp	/^    bool operator!=(const iter_impl& other) const$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:bool
operator !=	dependencies/nlohmann/json.hpp	/^    friend bool operator!=(const ScalarType lhs, const_reference rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator !=	dependencies/nlohmann/json.hpp	/^    friend bool operator!=(const_reference lhs, const ScalarType rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator !=	dependencies/nlohmann/json.hpp	/^    friend bool operator!=(const_reference lhs, const_reference rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator !=	dependencies/nlohmann/json.hpp	/^    friend bool operator!=(json_pointer const& lhs,$/;"	f	namespace:nlohmann	typeref:typename:bool
operator !=	dependencies/sfml/include/SFML/Graphics/Rect.inl	/^inline bool operator !=(const Rect<T>& left, const Rect<T>& right)$/;"	f	typeref:typename:bool
operator !=	dependencies/sfml/include/SFML/System/Vector2.inl	/^inline bool operator !=(const Vector2<T>& left, const Vector2<T>& right)$/;"	f	typeref:typename:bool
operator !=	dependencies/sfml/include/SFML/System/Vector3.inl	/^inline bool operator !=(const Vector3<T>& left, const Vector3<T>& right)$/;"	f	typeref:typename:bool
operator !=	dependencies/spriter/spriterengine/user_override/json.hpp	/^				bool operator!=(const iteration_proxy_internal& o) const noexcept {$/;"	f	class:nlohmann::detail::iteration_proxy::iteration_proxy_internal	typeref:typename:bool
operator !=	dependencies/spriter/spriterengine/user_override/json.hpp	/^				friend bool operator!=(const ScalarType lhs, const_reference rhs) noexcept {$/;"	f	namespace:nlohmann	typeref:typename:bool
operator !=	dependencies/spriter/spriterengine/user_override/json.hpp	/^				friend bool operator!=(const_reference lhs, const ScalarType rhs) noexcept {$/;"	f	namespace:nlohmann	typeref:typename:bool
operator !=	dependencies/spriter/spriterengine/user_override/json.hpp	/^			bool operator!=(const iter_impl& other) const {$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:bool
operator !=	dependencies/spriter/spriterengine/user_override/json.hpp	/^			friend bool operator!=(const_reference lhs, const_reference rhs) noexcept {$/;"	f	namespace:nlohmann	typeref:typename:bool
operator !=	dependencies/spriter/spriterengine/user_override/json.hpp	/^		friend bool operator!=(json_pointer const& lhs,$/;"	f	namespace:nlohmann	typeref:typename:bool
operator ()	dependencies/nlohmann/json.hpp	/^    bool operator()(nlohmann::detail::value_t lhs,$/;"	f	struct:std::less	typeref:typename:bool
operator ()	dependencies/nlohmann/json.hpp	/^    std::size_t operator()(const nlohmann::json& j) const$/;"	f	struct:std::hash	typeref:typename:std::size_t
operator ()	dependencies/nlohmann/json.hpp	/^    void operator()(BasicJsonType& j, T&& val) const$/;"	f	struct:nlohmann::detail::to_json_fn	typeref:typename:void
operator ()	dependencies/nlohmann/json.hpp	/^    void operator()(const BasicJsonType& j, T& val) const$/;"	f	struct:nlohmann::detail::from_json_fn	typeref:typename:void
operator ()	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void operator()(BasicJsonType& j, T&& val) const$/;"	f	struct:nlohmann::detail::to_json_fn	typeref:typename:void
operator ()	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void operator()(const BasicJsonType& j, T& val) const$/;"	f	struct:nlohmann::detail::from_json_fn	typeref:typename:void
operator ()	dependencies/spriter/spriterengine/user_override/json.hpp	/^		bool operator()(nlohmann::detail::value_t lhs,$/;"	f	struct:std::less	typeref:typename:bool
operator ()	dependencies/spriter/spriterengine/user_override/json.hpp	/^		std::size_t operator()(const nlohmann::json& j) const {$/;"	f	struct:std::hash	typeref:typename:std::size_t
operator *	dependencies/nlohmann/json.hpp	/^        iteration_proxy_internal& operator*()$/;"	f	class:nlohmann::detail::iteration_proxy::iteration_proxy_internal	typeref:typename:iteration_proxy_internal &
operator *	dependencies/nlohmann/json.hpp	/^    reference operator*() const$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:reference
operator *	dependencies/nlohmann/json.hpp	/^    value_type const& operator*() const$/;"	f	class:nlohmann::detail::json_ref	typeref:typename:value_type const &
operator *	dependencies/sfml/include/SFML/System/ThreadLocalPtr.inl	/^T& ThreadLocalPtr<T>::operator *() const$/;"	f	class:sf::ThreadLocalPtr	typeref:typename:T &
operator *	dependencies/sfml/include/SFML/System/Vector2.inl	/^inline Vector2<T> operator *(T left, const Vector2<T>& right)$/;"	f	typeref:typename:Vector2<T>
operator *	dependencies/sfml/include/SFML/System/Vector2.inl	/^inline Vector2<T> operator *(const Vector2<T>& left, T right)$/;"	f	typeref:typename:Vector2<T>
operator *	dependencies/sfml/include/SFML/System/Vector3.inl	/^inline Vector3<T> operator *(T left, const Vector3<T>& right)$/;"	f	typeref:typename:Vector3<T>
operator *	dependencies/sfml/include/SFML/System/Vector3.inl	/^inline Vector3<T> operator *(const Vector3<T>& left, T right)$/;"	f	typeref:typename:Vector3<T>
operator *	dependencies/spriter/spriterengine/user_override/json.hpp	/^				iteration_proxy_internal& operator*() {$/;"	f	class:nlohmann::detail::iteration_proxy::iteration_proxy_internal	typeref:typename:iteration_proxy_internal &
operator *	dependencies/spriter/spriterengine/user_override/json.hpp	/^			reference operator*() const {$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:reference
operator *	dependencies/spriter/spriterengine/user_override/json.hpp	/^			value_type const& operator*() const {$/;"	f	class:nlohmann::detail::json_ref	typeref:typename:value_type const &
operator *=	dependencies/sfml/include/SFML/System/Vector2.inl	/^inline Vector2<T>& operator *=(Vector2<T>& left, T right)$/;"	f	typeref:typename:Vector2<T> &
operator *=	dependencies/sfml/include/SFML/System/Vector3.inl	/^inline Vector3<T>& operator *=(Vector3<T>& left, T right)$/;"	f	typeref:typename:Vector3<T> &
operator +	dependencies/nlohmann/json.hpp	/^    friend iter_impl operator+(difference_type i, const iter_impl& it)$/;"	f	namespace:nlohmann::detail	typeref:typename:iter_impl
operator +	dependencies/nlohmann/json.hpp	/^    iter_impl operator+(difference_type i) const$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:iter_impl
operator +	dependencies/nlohmann/json.hpp	/^    json_reverse_iterator operator+(difference_type i) const$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:json_reverse_iterator
operator +	dependencies/nlohmann/json.hpp	/^    primitive_iterator_t operator+(difference_type n) noexcept$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:primitive_iterator_t
operator +	dependencies/sfml/include/SFML/System/Vector2.inl	/^inline Vector2<T> operator +(const Vector2<T>& left, const Vector2<T>& right)$/;"	f	typeref:typename:Vector2<T>
operator +	dependencies/sfml/include/SFML/System/Vector3.inl	/^inline Vector3<T> operator +(const Vector3<T>& left, const Vector3<T>& right)$/;"	f	typeref:typename:Vector3<T>
operator +	dependencies/spriter/spriterengine/user_override/json.hpp	/^			friend iter_impl operator+(difference_type i, const iter_impl& it) {$/;"	f	namespace:nlohmann::detail	typeref:typename:iter_impl
operator +	dependencies/spriter/spriterengine/user_override/json.hpp	/^			iter_impl operator+(difference_type i) const {$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:iter_impl
operator +	dependencies/spriter/spriterengine/user_override/json.hpp	/^			json_reverse_iterator operator+(difference_type i) const {$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:json_reverse_iterator
operator +	dependencies/spriter/spriterengine/user_override/json.hpp	/^			primitive_iterator_t operator+(difference_type n) noexcept {$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:primitive_iterator_t
operator ++	dependencies/nlohmann/json.hpp	/^        iteration_proxy_internal& operator++()$/;"	f	class:nlohmann::detail::iteration_proxy::iteration_proxy_internal	typeref:typename:iteration_proxy_internal &
operator ++	dependencies/nlohmann/json.hpp	/^    iter_impl const operator++(int)$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:iter_impl const
operator ++	dependencies/nlohmann/json.hpp	/^    iter_impl& operator++()$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:iter_impl &
operator ++	dependencies/nlohmann/json.hpp	/^    json_reverse_iterator const operator++(int)$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:json_reverse_iterator const
operator ++	dependencies/nlohmann/json.hpp	/^    json_reverse_iterator& operator++()$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:json_reverse_iterator &
operator ++	dependencies/nlohmann/json.hpp	/^    primitive_iterator_t const operator++(int) noexcept$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:primitive_iterator_t const
operator ++	dependencies/nlohmann/json.hpp	/^    primitive_iterator_t& operator++() noexcept$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:primitive_iterator_t &
operator ++	dependencies/spriter/spriterengine/user_override/json.hpp	/^				iteration_proxy_internal& operator++() {$/;"	f	class:nlohmann::detail::iteration_proxy::iteration_proxy_internal	typeref:typename:iteration_proxy_internal &
operator ++	dependencies/spriter/spriterengine/user_override/json.hpp	/^			iter_impl const operator++(int) {$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:iter_impl const
operator ++	dependencies/spriter/spriterengine/user_override/json.hpp	/^			iter_impl& operator++() {$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:iter_impl &
operator ++	dependencies/spriter/spriterengine/user_override/json.hpp	/^			json_reverse_iterator const operator++(int) {$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:json_reverse_iterator const
operator ++	dependencies/spriter/spriterengine/user_override/json.hpp	/^			json_reverse_iterator& operator++() {$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:json_reverse_iterator &
operator ++	dependencies/spriter/spriterengine/user_override/json.hpp	/^			primitive_iterator_t const operator++(int) noexcept {$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:primitive_iterator_t const
operator ++	dependencies/spriter/spriterengine/user_override/json.hpp	/^			primitive_iterator_t& operator++() noexcept {$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:primitive_iterator_t &
operator +=	dependencies/nlohmann/json.hpp	/^    iter_impl& operator+=(difference_type i)$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:iter_impl &
operator +=	dependencies/nlohmann/json.hpp	/^    json_reverse_iterator& operator+=(difference_type i)$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:json_reverse_iterator &
operator +=	dependencies/nlohmann/json.hpp	/^    primitive_iterator_t& operator+=(difference_type n) noexcept$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:primitive_iterator_t &
operator +=	dependencies/nlohmann/json.hpp	/^    reference operator+=(basic_json&& val)$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
operator +=	dependencies/nlohmann/json.hpp	/^    reference operator+=(const basic_json& val)$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
operator +=	dependencies/nlohmann/json.hpp	/^    reference operator+=(const typename object_t::value_type& val)$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
operator +=	dependencies/nlohmann/json.hpp	/^    reference operator+=(initializer_list_t init)$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
operator +=	dependencies/sfml/include/SFML/System/Vector2.inl	/^inline Vector2<T>& operator +=(Vector2<T>& left, const Vector2<T>& right)$/;"	f	typeref:typename:Vector2<T> &
operator +=	dependencies/sfml/include/SFML/System/Vector3.inl	/^inline Vector3<T>& operator +=(Vector3<T>& left, const Vector3<T>& right)$/;"	f	typeref:typename:Vector3<T> &
operator +=	dependencies/spriter/spriterengine/user_override/json.hpp	/^			iter_impl& operator+=(difference_type i) {$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:iter_impl &
operator +=	dependencies/spriter/spriterengine/user_override/json.hpp	/^			json_reverse_iterator& operator+=(difference_type i) {$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:json_reverse_iterator &
operator +=	dependencies/spriter/spriterengine/user_override/json.hpp	/^			primitive_iterator_t& operator+=(difference_type n) noexcept {$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:primitive_iterator_t &
operator +=	dependencies/spriter/spriterengine/user_override/json.hpp	/^			reference operator+=(basic_json&& val) {$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
operator +=	dependencies/spriter/spriterengine/user_override/json.hpp	/^			reference operator+=(const basic_json& val) {$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
operator +=	dependencies/spriter/spriterengine/user_override/json.hpp	/^			reference operator+=(const typename object_t::value_type& val) {$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
operator +=	dependencies/spriter/spriterengine/user_override/json.hpp	/^			reference operator+=(initializer_list_t init) {$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
operator -	dependencies/nlohmann/json.hpp	/^    difference_type operator-(const iter_impl& other) const$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:difference_type
operator -	dependencies/nlohmann/json.hpp	/^    difference_type operator-(const json_reverse_iterator& other) const$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:difference_type
operator -	dependencies/nlohmann/json.hpp	/^    friend constexpr difference_type operator-(primitive_iterator_t lhs, primitive_iterator_t rh/;"	f	namespace:nlohmann::detail	typeref:typename:difference_type
operator -	dependencies/nlohmann/json.hpp	/^    iter_impl operator-(difference_type i) const$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:iter_impl
operator -	dependencies/nlohmann/json.hpp	/^    json_reverse_iterator operator-(difference_type i) const$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:json_reverse_iterator
operator -	dependencies/sfml/include/SFML/System/Vector2.inl	/^inline Vector2<T> operator -(const Vector2<T>& left, const Vector2<T>& right)$/;"	f	typeref:typename:Vector2<T>
operator -	dependencies/sfml/include/SFML/System/Vector2.inl	/^inline Vector2<T> operator -(const Vector2<T>& right)$/;"	f	typeref:typename:Vector2<T>
operator -	dependencies/sfml/include/SFML/System/Vector3.inl	/^inline Vector3<T> operator -(const Vector3<T>& left)$/;"	f	typeref:typename:Vector3<T>
operator -	dependencies/sfml/include/SFML/System/Vector3.inl	/^inline Vector3<T> operator -(const Vector3<T>& left, const Vector3<T>& right)$/;"	f	typeref:typename:Vector3<T>
operator -	dependencies/spriter/spriterengine/user_override/json.hpp	/^			difference_type operator-(const iter_impl& other) const {$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:difference_type
operator -	dependencies/spriter/spriterengine/user_override/json.hpp	/^			difference_type operator-(const json_reverse_iterator& other) const {$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:difference_type
operator -	dependencies/spriter/spriterengine/user_override/json.hpp	/^			friend constexpr difference_type operator-(primitive_iterator_t lhs, primitive_iterator_t rhs/;"	f	namespace:nlohmann::detail	typeref:typename:difference_type
operator -	dependencies/spriter/spriterengine/user_override/json.hpp	/^			iter_impl operator-(difference_type i) const {$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:iter_impl
operator -	dependencies/spriter/spriterengine/user_override/json.hpp	/^			json_reverse_iterator operator-(difference_type i) const {$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:json_reverse_iterator
operator --	dependencies/nlohmann/json.hpp	/^    iter_impl const operator--(int)$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:iter_impl const
operator --	dependencies/nlohmann/json.hpp	/^    iter_impl& operator--()$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:iter_impl &
operator --	dependencies/nlohmann/json.hpp	/^    json_reverse_iterator const operator--(int)$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:json_reverse_iterator const
operator --	dependencies/nlohmann/json.hpp	/^    json_reverse_iterator& operator--()$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:json_reverse_iterator &
operator --	dependencies/nlohmann/json.hpp	/^    primitive_iterator_t const operator--(int) noexcept$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:primitive_iterator_t const
operator --	dependencies/nlohmann/json.hpp	/^    primitive_iterator_t& operator--() noexcept$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:primitive_iterator_t &
operator --	dependencies/spriter/spriterengine/user_override/json.hpp	/^			iter_impl const operator--(int) {$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:iter_impl const
operator --	dependencies/spriter/spriterengine/user_override/json.hpp	/^			iter_impl& operator--() {$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:iter_impl &
operator --	dependencies/spriter/spriterengine/user_override/json.hpp	/^			json_reverse_iterator const operator--(int) {$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:json_reverse_iterator const
operator --	dependencies/spriter/spriterengine/user_override/json.hpp	/^			json_reverse_iterator& operator--() {$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:json_reverse_iterator &
operator --	dependencies/spriter/spriterengine/user_override/json.hpp	/^			primitive_iterator_t const operator--(int) noexcept {$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:primitive_iterator_t const
operator --	dependencies/spriter/spriterengine/user_override/json.hpp	/^			primitive_iterator_t& operator--() noexcept {$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:primitive_iterator_t &
operator -=	dependencies/nlohmann/json.hpp	/^    iter_impl& operator-=(difference_type i)$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:iter_impl &
operator -=	dependencies/nlohmann/json.hpp	/^    primitive_iterator_t& operator-=(difference_type n) noexcept$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:primitive_iterator_t &
operator -=	dependencies/sfml/include/SFML/System/Vector2.inl	/^inline Vector2<T>& operator -=(Vector2<T>& left, const Vector2<T>& right)$/;"	f	typeref:typename:Vector2<T> &
operator -=	dependencies/sfml/include/SFML/System/Vector3.inl	/^inline Vector3<T>& operator -=(Vector3<T>& left, const Vector3<T>& right)$/;"	f	typeref:typename:Vector3<T> &
operator -=	dependencies/spriter/spriterengine/user_override/json.hpp	/^			iter_impl& operator-=(difference_type i) {$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:iter_impl &
operator -=	dependencies/spriter/spriterengine/user_override/json.hpp	/^			primitive_iterator_t& operator-=(difference_type n) noexcept {$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:primitive_iterator_t &
operator ->	dependencies/nlohmann/json.hpp	/^    pointer operator->() const$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:pointer
operator ->	dependencies/nlohmann/json.hpp	/^    value_type const* operator->() const$/;"	f	class:nlohmann::detail::json_ref	typeref:typename:value_type const *
operator ->	dependencies/sfml/include/SFML/System/ThreadLocalPtr.inl	/^T* ThreadLocalPtr<T>::operator ->() const$/;"	f	class:sf::ThreadLocalPtr	typeref:typename:T *
operator ->	dependencies/spriter/spriterengine/user_override/json.hpp	/^			pointer operator->() const {$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:pointer
operator ->	dependencies/spriter/spriterengine/user_override/json.hpp	/^			value_type const* operator->() const {$/;"	f	class:nlohmann::detail::json_ref	typeref:typename:value_type const *
operator /	dependencies/sfml/include/SFML/System/Vector2.inl	/^inline Vector2<T> operator \/(const Vector2<T>& left, T right)$/;"	f	typeref:typename:Vector2<T>
operator /	dependencies/sfml/include/SFML/System/Vector3.inl	/^inline Vector3<T> operator \/(const Vector3<T>& left, T right)$/;"	f	typeref:typename:Vector3<T>
operator /=	dependencies/sfml/include/SFML/System/Vector2.inl	/^inline Vector2<T>& operator \/=(Vector2<T>& left, T right)$/;"	f	typeref:typename:Vector2<T> &
operator /=	dependencies/sfml/include/SFML/System/Vector3.inl	/^inline Vector3<T>& operator \/=(Vector3<T>& left, T right)$/;"	f	typeref:typename:Vector3<T> &
operator <	dependencies/nlohmann/json.hpp	/^    bool operator<(const iter_impl& other) const$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:bool
operator <	dependencies/nlohmann/json.hpp	/^    friend bool operator<(const ScalarType lhs, const_reference rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator <	dependencies/nlohmann/json.hpp	/^    friend bool operator<(const_reference lhs, const ScalarType rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator <	dependencies/nlohmann/json.hpp	/^    friend bool operator<(const_reference lhs, const_reference rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator <	dependencies/nlohmann/json.hpp	/^    friend constexpr bool operator<(primitive_iterator_t lhs, primitive_iterator_t rhs) noexcept$/;"	f	namespace:nlohmann::detail	typeref:typename:bool
operator <	dependencies/nlohmann/json.hpp	/^inline bool operator<(const value_t lhs, const value_t rhs) noexcept$/;"	f	namespace:nlohmann::detail	typeref:typename:bool
operator <	dependencies/spriter/spriterengine/user_override/json.hpp	/^				friend bool operator<(const ScalarType lhs, const_reference rhs) noexcept {$/;"	f	namespace:nlohmann	typeref:typename:bool
operator <	dependencies/spriter/spriterengine/user_override/json.hpp	/^				friend bool operator<(const_reference lhs, const ScalarType rhs) noexcept {$/;"	f	namespace:nlohmann	typeref:typename:bool
operator <	dependencies/spriter/spriterengine/user_override/json.hpp	/^			bool operator<(const iter_impl& other) const {$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:bool
operator <	dependencies/spriter/spriterengine/user_override/json.hpp	/^			friend bool operator<(const_reference lhs, const_reference rhs) noexcept {$/;"	f	namespace:nlohmann	typeref:typename:bool
operator <	dependencies/spriter/spriterengine/user_override/json.hpp	/^			friend constexpr bool operator<(primitive_iterator_t lhs, primitive_iterator_t rhs) noexcept /;"	f	namespace:nlohmann::detail	typeref:typename:bool
operator <	dependencies/spriter/spriterengine/user_override/json.hpp	/^		inline bool operator<(const value_t lhs, const value_t rhs) noexcept {$/;"	f	namespace:nlohmann::detail	typeref:typename:bool
operator <<	dependencies/nlohmann/json.hpp	/^    friend std::istream& operator<<(basic_json& j, std::istream& i)$/;"	f	namespace:nlohmann	typeref:typename:JSON_DEPRECATED std::istream &
operator <<	dependencies/nlohmann/json.hpp	/^    friend std::ostream& operator<<(std::ostream& o, const basic_json& j)$/;"	f	namespace:nlohmann	typeref:typename:std::ostream &
operator <<	dependencies/spriter/spriterengine/user_override/json.hpp	/^				friend std::istream& operator<<(basic_json& j, std::istream& i) {$/;"	f	namespace:nlohmann	typeref:typename:JSON_DEPRECATED std::istream &
operator <<	dependencies/spriter/spriterengine/user_override/json.hpp	/^			friend std::ostream& operator<<(std::ostream& o, const basic_json& j) {$/;"	f	namespace:nlohmann	typeref:typename:std::ostream &
operator <=	dependencies/nlohmann/json.hpp	/^    bool operator<=(const iter_impl& other) const$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:bool
operator <=	dependencies/nlohmann/json.hpp	/^    friend bool operator<=(const ScalarType lhs, const_reference rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator <=	dependencies/nlohmann/json.hpp	/^    friend bool operator<=(const_reference lhs, const ScalarType rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator <=	dependencies/nlohmann/json.hpp	/^    friend bool operator<=(const_reference lhs, const_reference rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator <=	dependencies/spriter/spriterengine/user_override/json.hpp	/^				friend bool operator<=(const ScalarType lhs, const_reference rhs) noexcept {$/;"	f	namespace:nlohmann	typeref:typename:bool
operator <=	dependencies/spriter/spriterengine/user_override/json.hpp	/^				friend bool operator<=(const_reference lhs, const ScalarType rhs) noexcept {$/;"	f	namespace:nlohmann	typeref:typename:bool
operator <=	dependencies/spriter/spriterengine/user_override/json.hpp	/^			bool operator<=(const iter_impl& other) const {$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:bool
operator <=	dependencies/spriter/spriterengine/user_override/json.hpp	/^			friend bool operator<=(const_reference lhs, const_reference rhs) noexcept {$/;"	f	namespace:nlohmann	typeref:typename:bool
operator =	dependencies/nlohmann/json.hpp	/^    iter_impl& operator=(const iter_impl<typename std::remove_const<BasicJsonType>::type>& other/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:iter_impl &
operator =	dependencies/nlohmann/json.hpp	/^    reference& operator=(basic_json other) noexcept ($/;"	f	class:nlohmann::basic_json	typeref:typename:reference &
operator =	dependencies/sfml/include/SFML/System/ThreadLocalPtr.inl	/^ThreadLocalPtr<T>& ThreadLocalPtr<T>::operator =(T* value)$/;"	f	class:sf::ThreadLocalPtr	typeref:typename:ThreadLocalPtr<T> &
operator =	dependencies/sfml/include/SFML/System/ThreadLocalPtr.inl	/^ThreadLocalPtr<T>& ThreadLocalPtr<T>::operator =(const ThreadLocalPtr<T>& right)$/;"	f	class:sf::ThreadLocalPtr	typeref:typename:ThreadLocalPtr<T> &
operator =	dependencies/spriter/spriterengine/user_override/json.hpp	/^			iter_impl& operator=(const iter_impl<typename std::remove_const<BasicJsonType>::type>& other)/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:iter_impl &
operator =	dependencies/spriter/spriterengine/user_override/json.hpp	/^			reference& operator=(basic_json other) noexcept ($/;"	f	class:nlohmann::basic_json	typeref:typename:reference &
operator ==	dependencies/nlohmann/json.hpp	/^    bool operator==(const iter_impl& other) const$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:bool
operator ==	dependencies/nlohmann/json.hpp	/^    friend bool operator==(const ScalarType lhs, const_reference rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator ==	dependencies/nlohmann/json.hpp	/^    friend bool operator==(const_reference lhs, const ScalarType rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator ==	dependencies/nlohmann/json.hpp	/^    friend bool operator==(const_reference lhs, const_reference rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator ==	dependencies/nlohmann/json.hpp	/^    friend bool operator==(json_pointer const& lhs,$/;"	f	namespace:nlohmann	typeref:typename:bool
operator ==	dependencies/nlohmann/json.hpp	/^    friend constexpr bool operator==(primitive_iterator_t lhs, primitive_iterator_t rhs) noexcep/;"	f	namespace:nlohmann::detail	typeref:typename:bool
operator ==	dependencies/sfml/include/SFML/Graphics/Rect.inl	/^inline bool operator ==(const Rect<T>& left, const Rect<T>& right)$/;"	f	typeref:typename:bool
operator ==	dependencies/sfml/include/SFML/System/Vector2.inl	/^inline bool operator ==(const Vector2<T>& left, const Vector2<T>& right)$/;"	f	typeref:typename:bool
operator ==	dependencies/sfml/include/SFML/System/Vector3.inl	/^inline bool operator ==(const Vector3<T>& left, const Vector3<T>& right)$/;"	f	typeref:typename:bool
operator ==	dependencies/spriter/spriterengine/user_override/json.hpp	/^				friend bool operator==(const ScalarType lhs, const_reference rhs) noexcept {$/;"	f	namespace:nlohmann	typeref:typename:bool
operator ==	dependencies/spriter/spriterengine/user_override/json.hpp	/^				friend bool operator==(const_reference lhs, const ScalarType rhs) noexcept {$/;"	f	namespace:nlohmann	typeref:typename:bool
operator ==	dependencies/spriter/spriterengine/user_override/json.hpp	/^			bool operator==(const iter_impl& other) const {$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:bool
operator ==	dependencies/spriter/spriterengine/user_override/json.hpp	/^			friend bool operator==(const_reference lhs, const_reference rhs) noexcept {$/;"	f	namespace:nlohmann	typeref:typename:bool
operator ==	dependencies/spriter/spriterengine/user_override/json.hpp	/^			friend constexpr bool operator==(primitive_iterator_t lhs, primitive_iterator_t rhs) noexcept/;"	f	namespace:nlohmann::detail	typeref:typename:bool
operator ==	dependencies/spriter/spriterengine/user_override/json.hpp	/^		friend bool operator==(json_pointer const& lhs,$/;"	f	namespace:nlohmann	typeref:typename:bool
operator >	dependencies/nlohmann/json.hpp	/^    bool operator>(const iter_impl& other) const$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:bool
operator >	dependencies/nlohmann/json.hpp	/^    friend bool operator>(const ScalarType lhs, const_reference rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator >	dependencies/nlohmann/json.hpp	/^    friend bool operator>(const_reference lhs, const ScalarType rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator >	dependencies/nlohmann/json.hpp	/^    friend bool operator>(const_reference lhs, const_reference rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator >	dependencies/spriter/spriterengine/user_override/json.hpp	/^				friend bool operator>(const ScalarType lhs, const_reference rhs) noexcept {$/;"	f	namespace:nlohmann	typeref:typename:bool
operator >	dependencies/spriter/spriterengine/user_override/json.hpp	/^				friend bool operator>(const_reference lhs, const ScalarType rhs) noexcept {$/;"	f	namespace:nlohmann	typeref:typename:bool
operator >	dependencies/spriter/spriterengine/user_override/json.hpp	/^			bool operator>(const iter_impl& other) const {$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:bool
operator >	dependencies/spriter/spriterengine/user_override/json.hpp	/^			friend bool operator>(const_reference lhs, const_reference rhs) noexcept {$/;"	f	namespace:nlohmann	typeref:typename:bool
operator >=	dependencies/nlohmann/json.hpp	/^    bool operator>=(const iter_impl& other) const$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:bool
operator >=	dependencies/nlohmann/json.hpp	/^    friend bool operator>=(const ScalarType lhs, const_reference rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator >=	dependencies/nlohmann/json.hpp	/^    friend bool operator>=(const_reference lhs, const ScalarType rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator >=	dependencies/nlohmann/json.hpp	/^    friend bool operator>=(const_reference lhs, const_reference rhs) noexcept$/;"	f	namespace:nlohmann	typeref:typename:bool
operator >=	dependencies/spriter/spriterengine/user_override/json.hpp	/^				friend bool operator>=(const ScalarType lhs, const_reference rhs) noexcept {$/;"	f	namespace:nlohmann	typeref:typename:bool
operator >=	dependencies/spriter/spriterengine/user_override/json.hpp	/^				friend bool operator>=(const_reference lhs, const ScalarType rhs) noexcept {$/;"	f	namespace:nlohmann	typeref:typename:bool
operator >=	dependencies/spriter/spriterengine/user_override/json.hpp	/^			bool operator>=(const iter_impl& other) const {$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:bool
operator >=	dependencies/spriter/spriterengine/user_override/json.hpp	/^			friend bool operator>=(const_reference lhs, const_reference rhs) noexcept {$/;"	f	namespace:nlohmann	typeref:typename:bool
operator >>	dependencies/nlohmann/json.hpp	/^    friend std::istream& operator>>(std::istream& i, basic_json& j)$/;"	f	namespace:nlohmann	typeref:typename:std::istream &
operator >>	dependencies/nlohmann/json.hpp	/^    friend std::ostream& operator>>(const basic_json& j, std::ostream& o)$/;"	f	namespace:nlohmann	typeref:typename:JSON_DEPRECATED std::ostream &
operator >>	dependencies/spriter/spriterengine/user_override/json.hpp	/^				friend std::ostream& operator>>(const basic_json& j, std::ostream& o) {$/;"	f	namespace:nlohmann	typeref:typename:JSON_DEPRECATED std::ostream &
operator >>	dependencies/spriter/spriterengine/user_override/json.hpp	/^			friend std::istream& operator>>(std::istream& i, basic_json& j) {$/;"	f	namespace:nlohmann	typeref:typename:std::istream &
operator []	dependencies/nlohmann/json.hpp	/^    const_reference operator[](T* key) const$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reference
operator []	dependencies/nlohmann/json.hpp	/^    const_reference operator[](const json_pointer& ptr) const$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reference
operator []	dependencies/nlohmann/json.hpp	/^    const_reference operator[](const typename object_t::key_type& key) const$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reference
operator []	dependencies/nlohmann/json.hpp	/^    const_reference operator[](size_type idx) const$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reference
operator []	dependencies/nlohmann/json.hpp	/^    reference operator[](T* key)$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
operator []	dependencies/nlohmann/json.hpp	/^    reference operator[](const json_pointer& ptr)$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
operator []	dependencies/nlohmann/json.hpp	/^    reference operator[](const typename object_t::key_type& key)$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
operator []	dependencies/nlohmann/json.hpp	/^    reference operator[](difference_type n) const$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:reference
operator []	dependencies/nlohmann/json.hpp	/^    reference operator[](difference_type n) const$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:reference
operator []	dependencies/nlohmann/json.hpp	/^    reference operator[](size_type idx)$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
operator []	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const_reference operator[](T* key) const {$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reference
operator []	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const_reference operator[](const json_pointer& ptr) const {$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reference
operator []	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const_reference operator[](const typename object_t::key_type& key) const {$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reference
operator []	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const_reference operator[](size_type idx) const {$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reference
operator []	dependencies/spriter/spriterengine/user_override/json.hpp	/^			reference operator[](T* key) {$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
operator []	dependencies/spriter/spriterengine/user_override/json.hpp	/^			reference operator[](const json_pointer& ptr) {$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
operator []	dependencies/spriter/spriterengine/user_override/json.hpp	/^			reference operator[](const typename object_t::key_type& key) {$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
operator []	dependencies/spriter/spriterengine/user_override/json.hpp	/^			reference operator[](difference_type n) const {$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:reference
operator []	dependencies/spriter/spriterengine/user_override/json.hpp	/^			reference operator[](difference_type n) const {$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:reference
operator []	dependencies/spriter/spriterengine/user_override/json.hpp	/^			reference operator[](size_type idx) {$/;"	f	class:nlohmann::basic_json	typeref:typename:reference
other_array_t	dependencies/nlohmann/json.hpp	/^        using other_array_t = typename BasicJsonType::array_t;$/;"	t	function:nlohmann::basic_json::basic_json	typeref:typename:BasicJsonType::array_t
other_array_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^				using other_array_t = typename BasicJsonType::array_t;$/;"	t	function:nlohmann::basic_json::basic_json	typeref:typename:BasicJsonType::array_t
other_boolean_t	dependencies/nlohmann/json.hpp	/^        using other_boolean_t = typename BasicJsonType::boolean_t;$/;"	t	function:nlohmann::basic_json::basic_json	typeref:typename:BasicJsonType::boolean_t
other_boolean_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^				using other_boolean_t = typename BasicJsonType::boolean_t;$/;"	t	function:nlohmann::basic_json::basic_json	typeref:typename:BasicJsonType::boolean_t
other_error	dependencies/nlohmann/json.hpp	/^    other_error(int id_, const char* what_arg) : exception(id_, what_arg) {}$/;"	f	class:nlohmann::detail::other_error
other_error	dependencies/nlohmann/json.hpp	/^    using other_error = detail::other_error;$/;"	t	class:nlohmann::basic_json	typeref:typename:detail::other_error
other_error	dependencies/nlohmann/json.hpp	/^class other_error : public exception$/;"	c	namespace:nlohmann::detail
other_error	dependencies/spriter/spriterengine/user_override/json.hpp	/^			other_error(int id_, const char* what_arg) : exception(id_, what_arg) {}$/;"	f	class:nlohmann::detail::other_error
other_error	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using other_error = detail::other_error;$/;"	t	class:nlohmann::basic_json	typeref:typename:detail::other_error
other_error	dependencies/spriter/spriterengine/user_override/json.hpp	/^		class other_error : public exception {$/;"	c	namespace:nlohmann::detail
other_number_float_t	dependencies/nlohmann/json.hpp	/^        using other_number_float_t = typename BasicJsonType::number_float_t;$/;"	t	function:nlohmann::basic_json::basic_json	typeref:typename:BasicJsonType::number_float_t
other_number_float_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^				using other_number_float_t = typename BasicJsonType::number_float_t;$/;"	t	function:nlohmann::basic_json::basic_json	typeref:typename:BasicJsonType::number_float_t
other_number_integer_t	dependencies/nlohmann/json.hpp	/^        using other_number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	function:nlohmann::basic_json::basic_json	typeref:typename:BasicJsonType::number_integer_t
other_number_integer_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^				using other_number_integer_t = typename BasicJsonType::number_integer_t;$/;"	t	function:nlohmann::basic_json::basic_json	typeref:typename:BasicJsonType::number_integer_t
other_number_unsigned_t	dependencies/nlohmann/json.hpp	/^        using other_number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	function:nlohmann::basic_json::basic_json	typeref:typename:BasicJsonType::number_unsigned_t
other_number_unsigned_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^				using other_number_unsigned_t = typename BasicJsonType::number_unsigned_t;$/;"	t	function:nlohmann::basic_json::basic_json	typeref:typename:BasicJsonType::number_unsigned_t
other_object_t	dependencies/nlohmann/json.hpp	/^        using other_object_t = typename BasicJsonType::object_t;$/;"	t	function:nlohmann::basic_json::basic_json	typeref:typename:BasicJsonType::object_t
other_object_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^				using other_object_t = typename BasicJsonType::object_t;$/;"	t	function:nlohmann::basic_json::basic_json	typeref:typename:BasicJsonType::object_t
other_string_t	dependencies/nlohmann/json.hpp	/^        using other_string_t = typename BasicJsonType::string_t;$/;"	t	function:nlohmann::basic_json::basic_json	typeref:typename:BasicJsonType::string_t
other_string_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^				using other_string_t = typename BasicJsonType::string_t;$/;"	t	function:nlohmann::basic_json::basic_json	typeref:typename:BasicJsonType::string_t
out_of_range	dependencies/nlohmann/json.hpp	/^    out_of_range(int id_, const char* what_arg) : exception(id_, what_arg) {}$/;"	f	class:nlohmann::detail::out_of_range
out_of_range	dependencies/nlohmann/json.hpp	/^    using out_of_range = detail::out_of_range;$/;"	t	class:nlohmann::basic_json	typeref:typename:detail::out_of_range
out_of_range	dependencies/nlohmann/json.hpp	/^class out_of_range : public exception$/;"	c	namespace:nlohmann::detail
out_of_range	dependencies/spriter/spriterengine/user_override/json.hpp	/^			out_of_range(int id_, const char* what_arg) : exception(id_, what_arg) {}$/;"	f	class:nlohmann::detail::out_of_range
out_of_range	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using out_of_range = detail::out_of_range;$/;"	t	class:nlohmann::basic_json	typeref:typename:detail::out_of_range
out_of_range	dependencies/spriter/spriterengine/user_override/json.hpp	/^		class out_of_range : public exception {$/;"	c	namespace:nlohmann::detail
output_adapter	dependencies/nlohmann/json.hpp	/^    output_adapter(StringType& s)$/;"	f	class:nlohmann::detail::output_adapter
output_adapter	dependencies/nlohmann/json.hpp	/^    output_adapter(std::basic_ostream<CharType>& s)$/;"	f	class:nlohmann::detail::output_adapter
output_adapter	dependencies/nlohmann/json.hpp	/^    output_adapter(std::vector<CharType>& vec)$/;"	f	class:nlohmann::detail::output_adapter
output_adapter	dependencies/nlohmann/json.hpp	/^class output_adapter$/;"	c	namespace:nlohmann::detail
output_adapter	dependencies/spriter/spriterengine/user_override/json.hpp	/^			output_adapter(StringType& s)$/;"	f	class:nlohmann::detail::output_adapter
output_adapter	dependencies/spriter/spriterengine/user_override/json.hpp	/^			output_adapter(std::basic_ostream<CharType>& s)$/;"	f	class:nlohmann::detail::output_adapter
output_adapter	dependencies/spriter/spriterengine/user_override/json.hpp	/^			output_adapter(std::vector<CharType>& vec)$/;"	f	class:nlohmann::detail::output_adapter
output_adapter	dependencies/spriter/spriterengine/user_override/json.hpp	/^		class output_adapter {$/;"	c	namespace:nlohmann::detail
output_adapter_protocol	dependencies/nlohmann/json.hpp	/^template<typename CharType> struct output_adapter_protocol$/;"	s	namespace:nlohmann::detail
output_adapter_protocol	dependencies/spriter/spriterengine/user_override/json.hpp	/^		template<typename CharType> struct output_adapter_protocol {$/;"	s	namespace:nlohmann::detail
output_adapter_t	dependencies/nlohmann/json.hpp	/^    using output_adapter_t = ::nlohmann::detail::output_adapter_t<CharType>;$/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::output_adapter_t<CharType>
output_adapter_t	dependencies/nlohmann/json.hpp	/^using output_adapter_t = std::shared_ptr<output_adapter_protocol<CharType>>;$/;"	t	namespace:nlohmann::detail	typeref:typename:std::shared_ptr<output_adapter_protocol<CharType>>
output_adapter_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using output_adapter_t = ::nlohmann::detail::output_adapter_t<CharType>;$/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::output_adapter_t<CharType>
output_adapter_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^		using output_adapter_t = std::shared_ptr<output_adapter_protocol<CharType>>;$/;"	t	namespace:nlohmann::detail	typeref:typename:std::shared_ptr<output_adapter_protocol<CharType>>
output_stream_adapter	dependencies/nlohmann/json.hpp	/^    explicit output_stream_adapter(std::basic_ostream<CharType>& s) : stream(s) {}$/;"	f	class:nlohmann::detail::output_stream_adapter
output_stream_adapter	dependencies/nlohmann/json.hpp	/^class output_stream_adapter : public output_adapter_protocol<CharType>$/;"	c	namespace:nlohmann::detail
output_stream_adapter	dependencies/spriter/spriterengine/user_override/json.hpp	/^			explicit output_stream_adapter(std::basic_ostream<CharType>& s) : stream(s) {}$/;"	f	class:nlohmann::detail::output_stream_adapter
output_stream_adapter	dependencies/spriter/spriterengine/user_override/json.hpp	/^		class output_stream_adapter : public output_adapter_protocol<CharType> {$/;"	c	namespace:nlohmann::detail
output_string_adapter	dependencies/nlohmann/json.hpp	/^    explicit output_string_adapter(StringType& s) : str(s) {}$/;"	f	class:nlohmann::detail::output_string_adapter
output_string_adapter	dependencies/nlohmann/json.hpp	/^class output_string_adapter : public output_adapter_protocol<CharType>$/;"	c	namespace:nlohmann::detail
output_string_adapter	dependencies/spriter/spriterengine/user_override/json.hpp	/^			explicit output_string_adapter(StringType& s) : str(s) {}$/;"	f	class:nlohmann::detail::output_string_adapter
output_string_adapter	dependencies/spriter/spriterengine/user_override/json.hpp	/^		class output_string_adapter : public output_adapter_protocol<CharType> {$/;"	c	namespace:nlohmann::detail
output_vector_adapter	dependencies/nlohmann/json.hpp	/^    explicit output_vector_adapter(std::vector<CharType>& vec) : v(vec) {}$/;"	f	class:nlohmann::detail::output_vector_adapter
output_vector_adapter	dependencies/nlohmann/json.hpp	/^class output_vector_adapter : public output_adapter_protocol<CharType>$/;"	c	namespace:nlohmann::detail
output_vector_adapter	dependencies/spriter/spriterengine/user_override/json.hpp	/^			explicit output_vector_adapter(std::vector<CharType>& vec) : v(vec) {}$/;"	f	class:nlohmann::detail::output_vector_adapter
output_vector_adapter	dependencies/spriter/spriterengine/user_override/json.hpp	/^		class output_vector_adapter : public output_adapter_protocol<CharType> {$/;"	c	namespace:nlohmann::detail
ow	dependencies/spriter/spriterengine/global/atlas.h	/^                real ow;$/;"	m	struct:SpriterEngine::atlasdata	typeref:typename:real
owned_value	dependencies/nlohmann/json.hpp	/^    mutable value_type owned_value = nullptr;$/;"	m	class:nlohmann::detail::json_ref	typeref:typename:value_type
owned_value	dependencies/spriter/spriterengine/user_override/json.hpp	/^			mutable value_type owned_value = nullptr;$/;"	m	class:nlohmann::detail::json_ref	typeref:typename:value_type
panning	dependencies/spriter/spriterengine/objectinfo/soundobjectinfo.h	/^		real panning;$/;"	m	class:SpriterEngine::SoundObjectInfo	typeref:typename:real
panning	dependencies/spriter/spriterengine/override/soundobjectinforeference.h	/^		real panning;$/;"	m	class:SpriterEngine::SoundObjectInfoReference	typeref:typename:real
parentObject	dependencies/spriter/spriterengine/objectref/transformprocessor.h	/^		UniversalObjectInterface *parentObject;$/;"	m	class:SpriterEngine::TransformProcessor	typeref:typename:UniversalObjectInterface *
parentObjectId	dependencies/spriter/spriterengine/objectref/objectref.h	/^		int parentObjectId;$/;"	m	class:SpriterEngine::ObjectRef	typeref:typename:int
parentTransformer	dependencies/spriter/spriterengine/objectref/objectrefinstance.h	/^		TransformProcessor *parentTransformer;$/;"	m	class:SpriterEngine::ObjectRefInstance	typeref:typename:TransformProcessor *
parse	dependencies/nlohmann/json.hpp	/^    static basic_json parse(IteratorType first, IteratorType last,$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
parse	dependencies/nlohmann/json.hpp	/^    static basic_json parse(detail::input_adapter i,$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
parse	dependencies/nlohmann/json.hpp	/^    static basic_json parse(detail::input_adapter& i,$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
parse	dependencies/nlohmann/json.hpp	/^    void parse(const bool strict, BasicJsonType& result)$/;"	f	class:nlohmann::detail::parser	typeref:typename:void
parse	dependencies/spriter/spriterengine/user_override/json.hpp	/^				static basic_json parse(IteratorType first, IteratorType last,$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
parse	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static basic_json parse(detail::input_adapter i,$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
parse	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static basic_json parse(detail::input_adapter& i,$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
parse	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void parse(const bool strict, BasicJsonType& result) {$/;"	f	class:nlohmann::detail::parser	typeref:typename:void
parse_cbor	dependencies/nlohmann/json.hpp	/^    BasicJsonType parse_cbor(const bool strict)$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType
parse_cbor	dependencies/spriter/spriterengine/user_override/json.hpp	/^			BasicJsonType parse_cbor(const bool strict) {$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType
parse_cbor_internal	dependencies/nlohmann/json.hpp	/^    BasicJsonType parse_cbor_internal(const bool get_char = true)$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType
parse_cbor_internal	dependencies/spriter/spriterengine/user_override/json.hpp	/^			BasicJsonType parse_cbor_internal(const bool get_char = true) {$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType
parse_error	dependencies/nlohmann/json.hpp	/^        parse_error,      \/\/\/< indicating a parse error$/;"	e	enum:nlohmann::detail::lexer::token_type
parse_error	dependencies/nlohmann/json.hpp	/^    parse_error(int id_, std::size_t byte_, const char* what_arg)$/;"	f	class:nlohmann::detail::parse_error
parse_error	dependencies/nlohmann/json.hpp	/^    using parse_error = detail::parse_error;$/;"	t	class:nlohmann::basic_json	typeref:typename:detail::parse_error
parse_error	dependencies/nlohmann/json.hpp	/^class parse_error : public exception$/;"	c	namespace:nlohmann::detail
parse_error	dependencies/spriter/spriterengine/user_override/json.hpp	/^				parse_error,      \/\/\/< indicating a parse error$/;"	e	enum:nlohmann::detail::lexer::token_type
parse_error	dependencies/spriter/spriterengine/user_override/json.hpp	/^			parse_error(int id_, std::size_t byte_, const char* what_arg)$/;"	f	class:nlohmann::detail::parse_error
parse_error	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using parse_error = detail::parse_error;$/;"	t	class:nlohmann::basic_json	typeref:typename:detail::parse_error
parse_error	dependencies/spriter/spriterengine/user_override/json.hpp	/^		class parse_error : public exception {$/;"	c	namespace:nlohmann::detail
parse_event_t	dependencies/nlohmann/json.hpp	/^    enum class parse_event_t : uint8_t$/;"	g	class:nlohmann::detail::parser	typeref:typename:uint8_t
parse_event_t	dependencies/nlohmann/json.hpp	/^    using parse_event_t = typename parser::parse_event_t;$/;"	t	class:nlohmann::basic_json	typeref:typename:parser::parse_event_t
parse_event_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			enum class parse_event_t : uint8_t {$/;"	g	class:nlohmann::detail::parser	typeref:typename:uint8_t
parse_event_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using parse_event_t = typename parser::parse_event_t;$/;"	t	class:nlohmann::basic_json	typeref:typename:parser::parse_event_t
parse_internal	dependencies/nlohmann/json.hpp	/^    void parse_internal(bool keep, BasicJsonType& result)$/;"	f	class:nlohmann::detail::parser	typeref:typename:void
parse_internal	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void parse_internal(bool keep, BasicJsonType& result) {$/;"	f	class:nlohmann::detail::parser	typeref:typename:void
parse_msgpack	dependencies/nlohmann/json.hpp	/^    BasicJsonType parse_msgpack(const bool strict)$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType
parse_msgpack	dependencies/spriter/spriterengine/user_override/json.hpp	/^			BasicJsonType parse_msgpack(const bool strict) {$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType
parse_msgpack_internal	dependencies/nlohmann/json.hpp	/^    BasicJsonType parse_msgpack_internal()$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType
parse_msgpack_internal	dependencies/spriter/spriterengine/user_override/json.hpp	/^			BasicJsonType parse_msgpack_internal() {$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType
parse_ubjson	dependencies/nlohmann/json.hpp	/^    BasicJsonType parse_ubjson(const bool strict)$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType
parse_ubjson	dependencies/spriter/spriterengine/user_override/json.hpp	/^			BasicJsonType parse_ubjson(const bool strict) {$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType
parse_ubjson_internal	dependencies/nlohmann/json.hpp	/^    BasicJsonType parse_ubjson_internal(const bool get_char = true)$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType
parse_ubjson_internal	dependencies/spriter/spriterengine/user_override/json.hpp	/^			BasicJsonType parse_ubjson_internal(const bool get_char = true) {$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType
parser	dependencies/nlohmann/json.hpp	/^    explicit parser(detail::input_adapter_t adapter,$/;"	f	class:nlohmann::detail::parser
parser	dependencies/nlohmann/json.hpp	/^    using parser = ::nlohmann::detail::parser<basic_json>;$/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::parser<basic_json>
parser	dependencies/nlohmann/json.hpp	/^class parser$/;"	c	namespace:nlohmann::detail
parser	dependencies/spriter/spriterengine/user_override/json.hpp	/^			explicit parser(detail::input_adapter_t adapter,$/;"	f	class:nlohmann::detail::parser
parser	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using parser = ::nlohmann::detail::parser<basic_json>;$/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::parser<basic_json>
parser	dependencies/spriter/spriterengine/user_override/json.hpp	/^		class parser {$/;"	c	namespace:nlohmann::detail
parser_callback_t	dependencies/nlohmann/json.hpp	/^    using parser_callback_t = typename parser::parser_callback_t;$/;"	t	class:nlohmann::basic_json	typeref:typename:parser::parser_callback_t
parser_callback_t	dependencies/nlohmann/json.hpp	/^    using parser_callback_t =$/;"	t	class:nlohmann::detail::parser
parser_callback_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using parser_callback_t = typename parser::parser_callback_t;$/;"	t	class:nlohmann::basic_json	typeref:typename:parser::parser_callback_t
parser_callback_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using parser_callback_t =$/;"	t	class:nlohmann::detail::parser
patch	dependencies/nlohmann/json.hpp	/^    basic_json patch(const basic_json& json_patch) const$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
patch	dependencies/spriter/spriterengine/user_override/json.hpp	/^			basic_json patch(const basic_json& json_patch) const {$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
patch_operations	dependencies/nlohmann/json.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	g	function:nlohmann::basic_json::patch
patch_operations	dependencies/spriter/spriterengine/user_override/json.hpp	/^				enum class patch_operations { add, remove, replace, move, copy, test, invalid };$/;"	g	function:nlohmann::basic_json::patch
path	dependencies/spriter/spriterengine/file/file.cpp	/^	std::string File::path()$/;"	f	class:SpriterEngine::File	typeref:typename:std::string
pausePlayback	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::pausePlayback()$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
pivot	dependencies/spriter/spriterengine/objectinfo/boxinstanceinfo.h	/^		point pivot;$/;"	m	class:SpriterEngine::BoxInstanceInfo	typeref:typename:point
pivot	dependencies/spriter/spriterengine/objectinfo/boxobjectinfo.h	/^		point pivot;$/;"	m	class:SpriterEngine::BoxObjectInfo	typeref:typename:point
pivot	dependencies/spriter/spriterengine/objectinfo/spriteobjectinfo.h	/^		point pivot;$/;"	m	class:SpriterEngine::SpriteObjectInfo	typeref:typename:point
playAllTriggers	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::playAllTriggers()$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
playEventTriggers	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::playEventTriggers()$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
playEventTriggers	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	void EntityInstanceData::playEventTriggers()$/;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:void
playSoundTriggers	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::playSoundTriggers()$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
playSoundTriggers	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	void EntityInstanceData::playSoundTriggers()$/;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:void
playTrigger	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	void UniversalObjectInterface::playTrigger()$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:void
playTrigger	dependencies/spriter/spriterengine/user_override/sfmlsoundobjectinforeference.cpp	/^	void SfmlSoundObjectInfoReference::playTrigger()$/;"	f	class:SpriterEngine::SfmlSoundObjectInfoReference	typeref:typename:void
playbackSpeedRatio	dependencies/spriter/spriterengine/entity/entityinstance.h	/^		real playbackSpeedRatio;$/;"	m	class:SpriterEngine::EntityInstance	typeref:typename:real
plus	dependencies/nlohmann/json.hpp	/^    diyfp plus;$/;"	m	struct:nlohmann::detail::dtoa_impl::boundaries	typeref:typename:diyfp
plus	dependencies/spriter/spriterengine/user_override/json.hpp	/^				diyfp plus;$/;"	m	struct:nlohmann::detail::dtoa_impl::boundaries	typeref:typename:diyfp
point	dependencies/spriter/spriterengine/global/global.h	/^		point(real initialX = 0, real initialY = 0) :$/;"	f	struct:SpriterEngine::point
point	dependencies/spriter/spriterengine/global/global.h	/^	struct point$/;"	s	namespace:SpriterEngine
pointee_t	dependencies/nlohmann/json.hpp	/^        using pointee_t = typename std::remove_const<typename$/;"	t	function:nlohmann::basic_json::get_ptr	typeref:typename:std::remove_const<typename std::remove_pointer<typename std::remove_const<PointerType>::type>::type>::type
pointee_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^				using pointee_t = typename std::remove_const<typename$/;"	t	function:nlohmann::basic_json::get_ptr	typeref:typename:std::remove_const<typename std::remove_pointer<typename std::remove_const<PointerType>::type>::type>::type
pointer	dependencies/nlohmann/json.hpp	/^    using pointer = typename std::allocator_traits<allocator_type>::pointer;$/;"	t	class:nlohmann::basic_json	typeref:typename:std::allocator_traits<allocator_type>::pointer
pointer	dependencies/nlohmann/json.hpp	/^    using pointer = typename std::conditional<std::is_const<BasicJsonType>::value,$/;"	t	class:nlohmann::detail::iter_impl	typeref:typename:std::conditional<std::is_const<BasicJsonType>::value,typename BasicJsonType::const_pointer,typename BasicJsonType::pointer>::type
pointer	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using pointer = typename std::allocator_traits<allocator_type>::pointer;$/;"	t	class:nlohmann::basic_json	typeref:typename:std::allocator_traits<allocator_type>::pointer
pointer	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using pointer = typename std::conditional<std::is_const<BasicJsonType>::value,$/;"	t	class:nlohmann::detail::iter_impl	typeref:typename:std::conditional<std::is_const<BasicJsonType>::value,typename BasicJsonType::const_pointer,typename BasicJsonType::pointer>::type
pop_back	dependencies/nlohmann/json.hpp	/^    std::string pop_back()$/;"	f	class:nlohmann::json_pointer	typeref:typename:std::string
pop_back	dependencies/spriter/spriterengine/user_override/json.hpp	/^		std::string pop_back() {$/;"	f	class:nlohmann::json_pointer	typeref:typename:std::string
position	dependencies/sfml/include/SFML/Graphics/Vertex.hpp	/^    Vector2f  position;  \/\/\/< 2D position of the vertex$/;"	m	class:sf::Vertex	typeref:typename:Vector2f
position	dependencies/sfml/include/SFML/Window/Event.hpp	/^        float          position;   \/\/\/< New position on the axis (in range [-100 .. 100])$/;"	m	struct:sf::Event::JoystickMoveEvent	typeref:typename:float
position	dependencies/spriter/spriterengine/entity/entityinstance.h	/^		point position;$/;"	m	class:SpriterEngine::EntityInstance	typeref:typename:point
position	dependencies/spriter/spriterengine/objectinfo/boneinstanceinfo.h	/^		point position;$/;"	m	class:SpriterEngine::BoneInstanceInfo	typeref:typename:point
position	dependencies/spriter/spriterengine/objectinfo/boneobjectinfo.h	/^		point position;$/;"	m	class:SpriterEngine::BoneObjectInfo	typeref:typename:point
position	dependencies/spriter/spriterengine/objectinfo/boxinstanceinfo.h	/^		point position;$/;"	m	class:SpriterEngine::BoxInstanceInfo	typeref:typename:point
position	dependencies/spriter/spriterengine/objectinfo/boxobjectinfo.h	/^		point position;$/;"	m	class:SpriterEngine::BoxObjectInfo	typeref:typename:point
position	dependencies/spriter/spriterengine/objectinfo/entityobjectinfo.h	/^		point position;$/;"	m	class:SpriterEngine::EntityObjectInfo	typeref:typename:point
position	dependencies/spriter/spriterengine/objectinfo/pointinstanceinfo.h	/^		point position;$/;"	m	class:SpriterEngine::PointInstanceInfo	typeref:typename:point
position	dependencies/spriter/spriterengine/objectinfo/pointobjectinfo.h	/^		point position;$/;"	m	class:SpriterEngine::PointObjectInfo	typeref:typename:point
position	dependencies/spriter/spriterengine/objectinfo/spriteobjectinfo.h	/^		point position;$/;"	m	class:SpriterEngine::SpriteObjectInfo	typeref:typename:point
preProcess	dependencies/spriter/spriterengine/objectref/entityrefinstance.cpp	/^	void EntityRefInstance::preProcess()$/;"	f	class:SpriterEngine::EntityRefInstance	typeref:typename:void
preProcess	dependencies/spriter/spriterengine/objectref/objectrefinstance.cpp	/^	void ObjectRefInstance::preProcess()$/;"	f	class:SpriterEngine::ObjectRefInstance	typeref:typename:void
preProcess	dependencies/spriter/spriterengine/objectref/spriterefinstance.cpp	/^	void SpriteRefInstance::preProcess()$/;"	f	class:SpriterEngine::SpriteRefInstance	typeref:typename:void
previousErrorFunction	dependencies/spriter/spriterengine/global/settings.cpp	/^	ErrorFunctionPointer Settings::previousErrorFunction = errFunction;$/;"	m	class:SpriterEngine::Settings	typeref:typename:ErrorFunctionPointer
previousErrorFunction	dependencies/spriter/spriterengine/global/settings.h	/^		static ErrorFunctionPointer previousErrorFunction;$/;"	m	class:SpriterEngine::Settings	typeref:typename:ErrorFunctionPointer
previousTime	dependencies/spriter/spriterengine/timeline/triggertimelineinstance.h	/^		real previousTime;$/;"	m	class:SpriterEngine::TriggerTimelineInstance	typeref:typename:real
primitive_iterator	dependencies/nlohmann/json.hpp	/^    primitive_iterator_t primitive_iterator {};$/;"	m	struct:nlohmann::detail::internal_iterator	typeref:typename:primitive_iterator_t
primitive_iterator	dependencies/spriter/spriterengine/user_override/json.hpp	/^			primitive_iterator_t primitive_iterator{};$/;"	m	struct:nlohmann::detail::internal_iterator	typeref:typename:primitive_iterator_t
primitive_iterator_t	dependencies/nlohmann/json.hpp	/^    using primitive_iterator_t = ::nlohmann::detail::primitive_iterator_t;$/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::primitive_iterator_t
primitive_iterator_t	dependencies/nlohmann/json.hpp	/^class primitive_iterator_t$/;"	c	namespace:nlohmann::detail
primitive_iterator_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using primitive_iterator_t = ::nlohmann::detail::primitive_iterator_t;$/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::primitive_iterator_t
primitive_iterator_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^		class primitive_iterator_t {$/;"	c	namespace:nlohmann::detail
priority_tag	dependencies/nlohmann/json.hpp	/^template<> struct priority_tag<0> {};$/;"	s	namespace:nlohmann::detail
priority_tag	dependencies/nlohmann/json.hpp	/^template<unsigned N> struct priority_tag : priority_tag < N - 1 > {};$/;"	s	namespace:nlohmann::detail
priority_tag	dependencies/spriter/spriterengine/user_override/json.hpp	/^		template<> struct priority_tag<0> {};$/;"	s	namespace:nlohmann::detail
priority_tag	dependencies/spriter/spriterengine/user_override/json.hpp	/^		template<unsigned N> struct priority_tag : priority_tag < N - 1 > {};$/;"	s	namespace:nlohmann::detail
priv	dependencies/sfml/include/SFML/Audio/SoundFileFactory.inl	/^namespace priv$/;"	n	namespace:sf	file:
priv	dependencies/sfml/include/SFML/Graphics/Glsl.hpp	/^namespace priv$/;"	n	namespace:sf
priv	dependencies/sfml/include/SFML/Graphics/RenderTexture.hpp	/^namespace priv$/;"	n	namespace:sf
priv	dependencies/sfml/include/SFML/System/FileInputStream.hpp	/^namespace priv$/;"	n	namespace:sf
priv	dependencies/sfml/include/SFML/System/Mutex.hpp	/^namespace priv$/;"	n	namespace:sf
priv	dependencies/sfml/include/SFML/System/Thread.hpp	/^namespace priv$/;"	n	namespace:sf
priv	dependencies/sfml/include/SFML/System/Thread.inl	/^namespace priv$/;"	n	file:
priv	dependencies/sfml/include/SFML/System/ThreadLocal.hpp	/^namespace priv$/;"	n	namespace:sf
priv	dependencies/sfml/include/SFML/Window/Context.hpp	/^namespace priv$/;"	n	namespace:sf
priv	dependencies/sfml/include/SFML/Window/Window.hpp	/^namespace priv$/;"	n	namespace:sf
process	dependencies/spriter/spriterengine/animation/mainlinekeyinstance.cpp	/^	real MainlineKeyInstance::process(real currentTime, ObjectInterfaceVector **instanceZOrder)$/;"	f	class:SpriterEngine::MainlineKeyInstance	typeref:typename:real
process	dependencies/spriter/spriterengine/objectref/entityrefinstance.cpp	/^	void EntityRefInstance::process(real currentTime)$/;"	f	class:SpriterEngine::EntityRefInstance	typeref:typename:void
process	dependencies/spriter/spriterengine/objectref/objectrefinstance.cpp	/^	void ObjectRefInstance::process(real currentTime)$/;"	f	class:SpriterEngine::ObjectRefInstance	typeref:typename:void
process	dependencies/spriter/spriterengine/objectref/spriterefinstance.cpp	/^	void SpriteRefInstance::process(real currentTime)$/;"	f	class:SpriterEngine::SpriteRefInstance	typeref:typename:void
process	dependencies/spriter/spriterengine/timeline/timelinekey.cpp	/^	void TimelineKey::process(real currentTime, UniversalObjectInterface *resultObject)$/;"	f	class:SpriterEngine::TimelineKey	typeref:typename:void
processCurrentKeys	dependencies/spriter/spriterengine/animation/animationinstance.cpp	/^	void AnimationInstance::processCurrentKeys(real newTime, ObjectInterfaceVector **instanceZOrder/;"	f	class:SpriterEngine::AnimationInstance	typeref:typename:void
processCurrentMainlineKey	dependencies/spriter/spriterengine/animation/animationinstance.cpp	/^	real AnimationInstance::processCurrentMainlineKey(real newTime, ObjectInterfaceVector **instanc/;"	f	class:SpriterEngine::AnimationInstance	typeref:typename:real
processCurrentTimelineKey	dependencies/spriter/spriterengine/timeline/timelineinstance.cpp	/^	void TimelineInstance::processCurrentTimelineKey(real newTime)$/;"	f	class:SpriterEngine::TimelineInstance	typeref:typename:void
processCurrentTimelineKey	dependencies/spriter/spriterengine/timeline/triggertimelineinstance.cpp	/^	void TriggerTimelineInstance::processCurrentTimelineKey(real newTime)$/;"	f	class:SpriterEngine::TriggerTimelineInstance	typeref:typename:void
processCurrentTimelineKeys	dependencies/spriter/spriterengine/animation/animationinstance.cpp	/^	void AnimationInstance::processCurrentTimelineKeys(real newTime)$/;"	f	class:SpriterEngine::AnimationInstance	typeref:typename:void
processKey	dependencies/spriter/spriterengine/objectref/objectrefinstance.cpp	/^	void ObjectRefInstance::processKey(real currentTime)$/;"	f	class:SpriterEngine::ObjectRefInstance	typeref:typename:void
processRefKeys	dependencies/spriter/spriterengine/animation/animationinstance.cpp	/^	real AnimationInstance::processRefKeys(real newTime)$/;"	f	class:SpriterEngine::AnimationInstance	typeref:typename:real
processRefKeys	dependencies/spriter/spriterengine/animation/mainlinekeyinstance.cpp	/^	real MainlineKeyInstance::processRefKeys(real currentTime)$/;"	f	class:SpriterEngine::MainlineKeyInstance	typeref:typename:real
processRefTransforms	dependencies/spriter/spriterengine/animation/animationinstance.cpp	/^	void AnimationInstance::processRefTransforms()$/;"	f	class:SpriterEngine::AnimationInstance	typeref:typename:void
processRefTransforms	dependencies/spriter/spriterengine/animation/mainlinekeyinstance.cpp	/^	void MainlineKeyInstance::processRefTransforms()$/;"	f	class:SpriterEngine::MainlineKeyInstance	typeref:typename:void
processTransform	dependencies/spriter/spriterengine/objectref/bonerefinstance.cpp	/^	void BoneRefInstance::processTransform()$/;"	f	class:SpriterEngine::BoneRefInstance	typeref:typename:void
processTransform	dependencies/spriter/spriterengine/objectref/objectrefinstance.cpp	/^	void ObjectRefInstance::processTransform()$/;"	f	class:SpriterEngine::ObjectRefInstance	typeref:typename:void
productId	dependencies/sfml/include/SFML/Window/Joystick.hpp	/^        unsigned int productId; \/\/\/< Product identifier$/;"	m	struct:sf::Joystick::Identification	typeref:typename:unsigned int
pushBackAnimation	dependencies/spriter/spriterengine/entity/entity.cpp	/^	Animation *Entity::pushBackAnimation(std::string animationName, real length, bool looping)$/;"	f	class:SpriterEngine::Entity	typeref:typename:Animation *
pushBackAnimationInstance	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	void EntityInstanceData::pushBackAnimationInstance(const std::string &name, AnimationInstance */;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:void
pushBackAtlas	dependencies/spriter/spriterengine/model/spritermodel.cpp	/^	void SpriterModel::pushBackAtlas(std::string initialFilePath)$/;"	f	class:SpriterEngine::SpriterModel	typeref:typename:void
pushBackBoneRef	dependencies/spriter/spriterengine/animation/mainlinekey.cpp	/^	void MainlineKey::pushBackBoneRef(ObjectRef *ref)$/;"	f	class:SpriterEngine::MainlineKey	typeref:typename:void
pushBackEntity	dependencies/spriter/spriterengine/model/spritermodel.cpp	/^	Entity *SpriterModel::pushBackEntity(std::string entityName)$/;"	f	class:SpriterEngine::SpriterModel	typeref:typename:Entity *
pushBackImageFile	dependencies/spriter/spriterengine/model/spritermodel.cpp	/^	void SpriterModel::pushBackImageFile(std::string initialFilePath, point initialDefaultPivot, at/;"	f	class:SpriterEngine::SpriterModel	typeref:typename:void
pushBackKey	dependencies/spriter/spriterengine/timeline/timeline.cpp	/^	TimelineKey *Timeline::pushBackKey(TimeInfo *initialTimeInfo, UniversalObjectInterface *initial/;"	f	class:SpriterEngine::Timeline	typeref:typename:TimelineKey *
pushBackMainlineKey	dependencies/spriter/spriterengine/animation/animation.cpp	/^	MainlineKey *Animation::pushBackMainlineKey(TimeInfo *initialTimeInfo)$/;"	f	class:SpriterEngine::Animation	typeref:typename:MainlineKey *
pushBackObjectTimeline	dependencies/spriter/spriterengine/animation/animation.cpp	/^	Timeline *Animation::pushBackObjectTimeline(int objectId)$/;"	f	class:SpriterEngine::Animation	typeref:typename:Timeline *
pushBackSoundFile	dependencies/spriter/spriterengine/model/spritermodel.cpp	/^	void SpriterModel::pushBackSoundFile(std::string initialFilePath)$/;"	f	class:SpriterEngine::SpriterModel	typeref:typename:void
pushBackSoundTimeline	dependencies/spriter/spriterengine/animation/animation.cpp	/^	Timeline *Animation::pushBackSoundTimeline(int objectId)$/;"	f	class:SpriterEngine::Animation	typeref:typename:Timeline *
pushBackTag	dependencies/spriter/spriterengine/model/spritermodel.cpp	/^	void SpriterModel::pushBackTag(std::string newTag)$/;"	f	class:SpriterEngine::SpriterModel	typeref:typename:void
pushBackTag	dependencies/spriter/spriterengine/objectinfo/taglist.cpp	/^	void TagList::pushBackTag(const std::string * tag)$/;"	f	class:SpriterEngine::TagList	typeref:typename:void
pushBackTag	dependencies/spriter/spriterengine/objectinfo/tagobjectinfo.cpp	/^	void TagObjectInfo::pushBackTag(const std::string * tag)$/;"	f	class:SpriterEngine::TagObjectInfo	typeref:typename:void
pushBackTagTimeline	dependencies/spriter/spriterengine/animation/animation.cpp	/^	Timeline *Animation::pushBackTagTimeline(int objectId)$/;"	f	class:SpriterEngine::Animation	typeref:typename:Timeline *
pushBackTriggerTimeline	dependencies/spriter/spriterengine/animation/animation.cpp	/^	Timeline *Animation::pushBackTriggerTimeline(int objectId)$/;"	f	class:SpriterEngine::Animation	typeref:typename:Timeline *
pushBackVariable	dependencies/spriter/spriterengine/variable/variableinstancenameandidmap.cpp	/^	void VariableInstanceNameAndIdMap::pushBackVariable(Variable *variable)$/;"	f	class:SpriterEngine::VariableInstanceNameAndIdMap	typeref:typename:void
pushBackZOrderRef	dependencies/spriter/spriterengine/animation/mainlinekey.cpp	/^	void MainlineKey::pushBackZOrderRef(ObjectRef *ref)$/;"	f	class:SpriterEngine::MainlineKey	typeref:typename:void
pushFrontProxyKey	dependencies/spriter/spriterengine/timeline/timeline.cpp	/^	TimelineKey *Timeline::pushFrontProxyKey(real initialTime, real initialNextTime, bool isLooping/;"	f	class:SpriterEngine::Timeline	typeref:typename:TimelineKey *
push_back	dependencies/nlohmann/json.hpp	/^    void push_back(basic_json&& val)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
push_back	dependencies/nlohmann/json.hpp	/^    void push_back(const basic_json& val)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
push_back	dependencies/nlohmann/json.hpp	/^    void push_back(const typename object_t::value_type& val)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
push_back	dependencies/nlohmann/json.hpp	/^    void push_back(initializer_list_t init)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
push_back	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void push_back(basic_json&& val) {$/;"	f	class:nlohmann::basic_json	typeref:typename:void
push_back	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void push_back(const basic_json& val) {$/;"	f	class:nlohmann::basic_json	typeref:typename:void
push_back	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void push_back(const typename object_t::value_type& val) {$/;"	f	class:nlohmann::basic_json	typeref:typename:void
push_back	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void push_back(initializer_list_t init) {$/;"	f	class:nlohmann::basic_json	typeref:typename:void
quadratic	dependencies/spriter/spriterengine/global/global.h	/^	inline real quadratic(real a, real b, real c, real t)$/;"	f	namespace:SpriterEngine	typeref:typename:real
quartic	dependencies/spriter/spriterengine/global/global.h	/^	inline real quartic(real a, real b, real c, real d, real e, real t)$/;"	f	namespace:SpriterEngine	typeref:typename:real
quintic	dependencies/spriter/spriterengine/global/global.h	/^	inline real quintic(real a, real b, real c, real d, real e, real f, real t)$/;"	f	namespace:SpriterEngine	typeref:typename:real
r	dependencies/sfml/include/SFML/Graphics/Color.hpp	/^    Uint8 r; \/\/\/< Red component$/;"	m	class:sf::Color	typeref:typename:Uint8
randomNumber	include/Helpers.h	/^	inline int randomNumber(int min, int max) {$/;"	f	namespace:Helpers	typeref:typename:int
randomNumberF	include/Helpers.h	/^	inline float randomNumberF(float min, float max) {$/;"	f	namespace:Helpers	typeref:typename:float
rbegin	dependencies/nlohmann/json.hpp	/^    const_reverse_iterator rbegin() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reverse_iterator
rbegin	dependencies/nlohmann/json.hpp	/^    reverse_iterator rbegin() noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:reverse_iterator
rbegin	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const_reverse_iterator rbegin() const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reverse_iterator
rbegin	dependencies/spriter/spriterengine/user_override/json.hpp	/^			reverse_iterator rbegin() noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:reverse_iterator
real	dependencies/spriter/spriterengine/global/global.h	/^	typedef double real;$/;"	t	namespace:SpriterEngine	typeref:typename:double
rectangle	dependencies/spriter/spriterengine/user_override/sfmlboxinstanceinfo.h	/^		sf::RectangleShape rectangle;$/;"	m	class:SpriterEngine::SfmlBoxInstanceInfo	typeref:typename:sf::RectangleShape
reference	dependencies/nlohmann/json.hpp	/^    using reference = typename Base::reference;$/;"	t	class:nlohmann::detail::json_reverse_iterator	typeref:typename:Base::reference
reference	dependencies/nlohmann/json.hpp	/^    using reference = value_type&;$/;"	t	class:nlohmann::basic_json	typeref:typename:value_type &
reference	dependencies/nlohmann/json.hpp	/^    using reference =$/;"	t	class:nlohmann::detail::iter_impl	typeref:typename:std::conditional<std::is_const<BasicJsonType>::value,typename BasicJsonType::const_reference,typename BasicJsonType::reference>::type
reference	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using reference = typename Base::reference;$/;"	t	class:nlohmann::detail::json_reverse_iterator	typeref:typename:Base::reference
reference	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using reference = value_type&;$/;"	t	class:nlohmann::basic_json	typeref:typename:value_type &
reference	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using reference =$/;"	t	class:nlohmann::detail::iter_impl	typeref:typename:std::conditional<std::is_const<BasicJsonType>::value,typename BasicJsonType::const_reference,typename BasicJsonType::reference>::type
reference_tokens	dependencies/nlohmann/json.hpp	/^    std::vector<std::string> reference_tokens;$/;"	m	class:nlohmann::json_pointer	typeref:typename:std::vector<std::string>
reference_tokens	dependencies/spriter/spriterengine/user_override/json.hpp	/^		std::vector<std::string> reference_tokens;$/;"	m	class:nlohmann::json_pointer	typeref:typename:std::vector<std::string>
refs	dependencies/spriter/spriterengine/animation/mainlinekeyinstance.h	/^		RefInstanceVector refs;$/;"	m	class:SpriterEngine::MainlineKeyInstance	typeref:typename:RefInstanceVector
registerReader	dependencies/sfml/include/SFML/Audio/SoundFileFactory.inl	/^void SoundFileFactory::registerReader()$/;"	f	class:sf::SoundFileFactory	typeref:typename:void
registerWriter	dependencies/sfml/include/SFML/Audio/SoundFileFactory.inl	/^void SoundFileFactory::registerWriter()$/;"	f	class:sf::SoundFileFactory	typeref:typename:void
reinterpret_bits	dependencies/nlohmann/json.hpp	/^Target reinterpret_bits(const Source source)$/;"	f	namespace:nlohmann::detail::dtoa_impl	typeref:typename:Target
reinterpret_bits	dependencies/spriter/spriterengine/user_override/json.hpp	/^			Target reinterpret_bits(const Source source) {$/;"	f	namespace:nlohmann::detail::dtoa_impl	typeref:typename:Target
remove	dependencies/nlohmann/json.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:nlohmann::basic_json::patch::patch_operations
remove	dependencies/spriter/spriterengine/user_override/json.hpp	/^				enum class patch_operations { add, remove, replace, move, copy, test, invalid };$/;"	e	enum:nlohmann::basic_json::patch::patch_operations
removeAllCharacterMaps	dependencies/spriter/spriterengine/entity/entity.cpp	/^	void Entity::removeAllCharacterMaps(FileReferenceVector *mappedFiles)$/;"	f	class:SpriterEngine::Entity	typeref:typename:void
removeAllCharacterMaps	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::removeAllCharacterMaps()$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
removeCharacterMap	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::removeCharacterMap(const std::string &mapName)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
rend	dependencies/nlohmann/json.hpp	/^    const_reverse_iterator rend() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reverse_iterator
rend	dependencies/nlohmann/json.hpp	/^    reverse_iterator rend() noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:reverse_iterator
rend	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const_reverse_iterator rend() const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:const_reverse_iterator
rend	dependencies/spriter/spriterengine/user_override/json.hpp	/^			reverse_iterator rend() noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:reverse_iterator
render	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::render()$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
render	dependencies/spriter/spriterengine/objectinfo/boneinstanceinfo.cpp	/^	void BoneInstanceInfo::render()$/;"	f	class:SpriterEngine::BoneInstanceInfo	typeref:typename:void
render	dependencies/spriter/spriterengine/objectinfo/boxinstanceinfo.cpp	/^	void BoxInstanceInfo::render()$/;"	f	class:SpriterEngine::BoxInstanceInfo	typeref:typename:void
render	dependencies/spriter/spriterengine/objectinfo/pointinstanceinfo.cpp	/^	void PointInstanceInfo::render()$/;"	f	class:SpriterEngine::PointInstanceInfo	typeref:typename:void
render	dependencies/spriter/spriterengine/objectinfo/spriteobjectinfo.cpp	/^	void SpriteObjectInfo::render()$/;"	f	class:SpriterEngine::SpriteObjectInfo	typeref:typename:void
render	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	void UniversalObjectInterface::render()$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:void
render	dependencies/spriter/spriterengine/user_override/sfmlboneinstanceinfo.cpp	/^	void SfmlBoneInstanceInfo::render()$/;"	f	class:SpriterEngine::SfmlBoneInstanceInfo	typeref:typename:void
render	dependencies/spriter/spriterengine/user_override/sfmlboxinstanceinfo.cpp	/^	void SfmlBoxInstanceInfo::render()$/;"	f	class:SpriterEngine::SfmlBoxInstanceInfo	typeref:typename:void
render	dependencies/spriter/spriterengine/user_override/sfmlpointinstanceinfo.cpp	/^	void SfmlPointInstanceInfo::render()$/;"	f	class:SpriterEngine::SfmlPointInstanceInfo	typeref:typename:void
render	src/GameOverScene.cpp	/^void GameOverScene::render(sf::RenderStates states) const {$/;"	f	class:GameOverScene	typeref:typename:void
render	src/GameScene.cpp	/^void GameScene::render(sf::RenderStates states) const {$/;"	f	class:GameScene	typeref:typename:void
render	src/MenuScene.cpp	/^void MenuScene::render(sf::RenderStates states) const {$/;"	f	class:MenuScene	typeref:typename:void
render	src/SceneManager.cpp	/^void SceneManager::render() {$/;"	f	class:SceneManager	typeref:typename:void
renderDebugBones	dependencies/spriter/spriterengine/global/settings.cpp	/^	bool Settings::renderDebugBones = false;$/;"	m	class:SpriterEngine::Settings	typeref:typename:bool
renderDebugBones	dependencies/spriter/spriterengine/global/settings.h	/^		static bool renderDebugBones;$/;"	m	class:SpriterEngine::Settings	typeref:typename:bool
renderDebugBoxes	dependencies/spriter/spriterengine/global/settings.cpp	/^	bool Settings::renderDebugBoxes = false;$/;"	m	class:SpriterEngine::Settings	typeref:typename:bool
renderDebugBoxes	dependencies/spriter/spriterengine/global/settings.h	/^		static bool renderDebugBoxes;$/;"	m	class:SpriterEngine::Settings	typeref:typename:bool
renderDebugPoints	dependencies/spriter/spriterengine/global/settings.cpp	/^	bool Settings::renderDebugPoints = false;$/;"	m	class:SpriterEngine::Settings	typeref:typename:bool
renderDebugPoints	dependencies/spriter/spriterengine/global/settings.h	/^		static bool renderDebugPoints;$/;"	m	class:SpriterEngine::Settings	typeref:typename:bool
renderSprite	dependencies/spriter/spriterengine/override/atlasfile.cpp	/^	void AtlasFile::renderSprite(SpriterEngine::UniversalObjectInterface *spriteInfo, const atlasfr/;"	f	class:SpriterEngine::AtlasFile	typeref:typename:void
renderSprite	dependencies/spriter/spriterengine/override/imagefile.cpp	/^	void ImageFile::renderSprite(UniversalObjectInterface * spriteInfo)$/;"	f	class:SpriterEngine::ImageFile	typeref:typename:void
renderSprite	dependencies/spriter/spriterengine/user_override/sfmlatlasfile.cpp	/^	void SfmlAtlasFile::renderSprite(UniversalObjectInterface *spriteInfo, const atlasframedata dat/;"	f	class:SpriterEngine::SfmlAtlasFile	typeref:typename:void
renderSprite	dependencies/spriter/spriterengine/user_override/sfmlimagefile.cpp	/^	void SfmlImageFile::renderSprite(UniversalObjectInterface * spriteInfo)$/;"	f	class:SpriterEngine::SfmlImageFile	typeref:typename:void
renderWindow	dependencies/spriter/spriterengine/user_override/examplefilefactory.h	/^		sf::RenderWindow *renderWindow;$/;"	m	class:SpriterEngine::ExampleFileFactory	typeref:typename:sf::RenderWindow *
renderWindow	dependencies/spriter/spriterengine/user_override/exampleobjectfactory.h	/^		sf::RenderWindow *renderWindow;$/;"	m	class:SpriterEngine::ExampleObjectFactory	typeref:typename:sf::RenderWindow *
renderWindow	dependencies/spriter/spriterengine/user_override/sfmlboneinstanceinfo.h	/^		sf::RenderWindow *renderWindow;$/;"	m	class:SpriterEngine::SfmlBoneInstanceInfo	typeref:typename:sf::RenderWindow *
renderWindow	dependencies/spriter/spriterengine/user_override/sfmlboxinstanceinfo.h	/^		sf::RenderWindow *renderWindow;$/;"	m	class:SpriterEngine::SfmlBoxInstanceInfo	typeref:typename:sf::RenderWindow *
renderWindow	dependencies/spriter/spriterengine/user_override/sfmlimagefile.h	/^		sf::RenderWindow *renderWindow;$/;"	m	class:SpriterEngine::SfmlImageFile	typeref:typename:sf::RenderWindow *
renderWindow	dependencies/spriter/spriterengine/user_override/sfmlpointinstanceinfo.h	/^		sf::RenderWindow *renderWindow;$/;"	m	class:SpriterEngine::SfmlPointInstanceInfo	typeref:typename:sf::RenderWindow *
replace	dependencies/nlohmann/json.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:nlohmann::basic_json::patch::patch_operations
replace	dependencies/spriter/spriterengine/user_override/json.hpp	/^				enum class patch_operations { add, remove, replace, move, copy, test, invalid };$/;"	e	enum:nlohmann::basic_json::patch::patch_operations
replace_substring	dependencies/nlohmann/json.hpp	/^    static void replace_substring(std::string& s, const std::string& f,$/;"	f	class:nlohmann::json_pointer	typeref:typename:void
replace_substring	dependencies/spriter/spriterengine/user_override/json.hpp	/^		static void replace_substring(std::string& s, const std::string& f,$/;"	f	class:nlohmann::json_pointer	typeref:typename:void
replacementFile	dependencies/spriter/spriterengine/charactermap/charactermapinstruction.h	/^		File *replacementFile;$/;"	m	class:SpriterEngine::CharacterMapInstruction	typeref:typename:File *
reprocessCurrentTime	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::reprocessCurrentTime()$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
reprocessCurrentTime	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	void UniversalObjectInterface::reprocessCurrentTime()$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:void
reset	dependencies/nlohmann/json.hpp	/^    void reset() noexcept$/;"	f	class:nlohmann::detail::lexer	typeref:typename:void
reset	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void reset() noexcept {$/;"	f	class:nlohmann::detail::lexer	typeref:typename:void
resultObject	dependencies/spriter/spriterengine/objectref/objectrefinstance.cpp	/^	UniversalObjectInterface *ObjectRefInstance::resultObject() const$/;"	f	class:SpriterEngine::ObjectRefInstance	typeref:typename:UniversalObjectInterface *
resultObject	dependencies/spriter/spriterengine/timeline/timelineinstance.h	/^		UniversalObjectInterface *resultObject;$/;"	m	class:SpriterEngine::TimelineInstance	typeref:typename:UniversalObjectInterface *
resultObjectInterface	dependencies/spriter/spriterengine/objectref/objectrefinstance.h	/^		UniversalObjectInterface *resultObjectInterface;$/;"	m	class:SpriterEngine::ObjectRefInstance	typeref:typename:UniversalObjectInterface *
ret	dependencies/nlohmann/json.hpp	/^        ValueType ret;$/;"	m	class:nlohmann::basic_json	typeref:typename:ValueType
ret	dependencies/spriter/spriterengine/user_override/json.hpp	/^				ValueType ret;$/;"	m	class:nlohmann::basic_json	typeref:typename:ValueType
reverseAngleOnLoad	dependencies/spriter/spriterengine/global/settings.cpp	/^	bool Settings::reverseAngleOnLoad = true;$/;"	m	class:SpriterEngine::Settings	typeref:typename:bool
reverseAngleOnLoad	dependencies/spriter/spriterengine/global/settings.h	/^		static bool reverseAngleOnLoad;$/;"	m	class:SpriterEngine::Settings	typeref:typename:bool
reversePivotYOnLoad	dependencies/spriter/spriterengine/global/settings.cpp	/^	bool Settings::reversePivotYOnLoad = true;$/;"	m	class:SpriterEngine::Settings	typeref:typename:bool
reversePivotYOnLoad	dependencies/spriter/spriterengine/global/settings.h	/^		static bool reversePivotYOnLoad;$/;"	m	class:SpriterEngine::Settings	typeref:typename:bool
reverseYOnLoad	dependencies/spriter/spriterengine/global/settings.cpp	/^	bool Settings::reverseYOnLoad = true;$/;"	m	class:SpriterEngine::Settings	typeref:typename:bool
reverseYOnLoad	dependencies/spriter/spriterengine/global/settings.h	/^		static bool reverseYOnLoad;$/;"	m	class:SpriterEngine::Settings	typeref:typename:bool
reverse_iterator	dependencies/nlohmann/json.hpp	/^    using reverse_iterator = json_reverse_iterator<typename basic_json::iterator>;$/;"	t	class:nlohmann::basic_json	typeref:typename:json_reverse_iterator<typename basic_json::iterator>
reverse_iterator	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using reverse_iterator = json_reverse_iterator<typename basic_json::iterator>;$/;"	t	class:nlohmann::basic_json	typeref:typename:json_reverse_iterator<typename basic_json::iterator>
rotated	dependencies/spriter/spriterengine/global/atlas.h	/^		bool rotated;$/;"	m	struct:SpriterEngine::atlasframedata	typeref:typename:bool
rotated	dependencies/spriter/spriterengine/global/atlas.h	/^                bool rotated;$/;"	m	struct:SpriterEngine::atlasdata	typeref:typename:bool
rows	dependencies/sfml/include/SFML/Graphics/Font.hpp	/^        std::vector<Row> rows;    \/\/\/< List containing the position of all the existing rows$/;"	m	struct:sf::Font::Page	typeref:typename:std::vector<Row>
run	dependencies/sfml/include/SFML/System/Thread.inl	/^    virtual void run() {(m_object->*m_function)();}$/;"	f	struct:priv::ThreadMemberFunc	typeref:typename:void	file:
run	dependencies/sfml/include/SFML/System/Thread.inl	/^    virtual void run() {m_function(m_arg);}$/;"	f	struct:priv::ThreadFunctorWithArg	typeref:typename:void	file:
run	dependencies/sfml/include/SFML/System/Thread.inl	/^    virtual void run() {m_functor();}$/;"	f	struct:priv::ThreadFunctor	typeref:typename:void	file:
sRgbCapable	dependencies/sfml/include/SFML/Window/ContextSettings.hpp	/^    bool         sRgbCapable;       \/\/\/< Whether the context framebuffer is sRGB capable$/;"	m	struct:sf::ContextSettings	typeref:typename:bool
s_readers	dependencies/sfml/include/SFML/Audio/SoundFileFactory.hpp	/^    static ReaderFactoryArray s_readers; \/\/\/< List of all registered readers$/;"	m	class:sf::SoundFileFactory	typeref:typename:ReaderFactoryArray
s_writers	dependencies/sfml/include/SFML/Audio/SoundFileFactory.hpp	/^    static WriterFactoryArray s_writers; \/\/\/< List of all registered writers$/;"	m	class:sf::SoundFileFactory	typeref:typename:WriterFactoryArray
sampleCount	dependencies/sfml/include/SFML/Audio/SoundFileReader.hpp	/^        Uint64       sampleCount;  \/\/\/< Total number of samples in the file$/;"	m	struct:sf::SoundFileReader::Info	typeref:typename:Uint64
sampleCount	dependencies/sfml/include/SFML/Audio/SoundStream.hpp	/^        std::size_t  sampleCount; \/\/\/< Number of samples pointed by Samples$/;"	m	struct:sf::SoundStream::Chunk	typeref:typename:std::size_t
sampleCurve	dependencies/spriter/spriterengine/timeinfo/beziereasingcurve.cpp	/^	real BezierEasingCurve::sampleCurve(real a, real b, real c, real t)const$/;"	f	class:SpriterEngine::BezierEasingCurve	typeref:typename:real
sampleCurveDerivativeX	dependencies/spriter/spriterengine/timeinfo/beziereasingcurve.cpp	/^	real BezierEasingCurve::sampleCurveDerivativeX(real ax, real bx, real cx, real t) const$/;"	f	class:SpriterEngine::BezierEasingCurve	typeref:typename:real
sampleRate	dependencies/sfml/include/SFML/Audio/SoundFileReader.hpp	/^        unsigned int sampleRate;   \/\/\/< Samples rate of the sound, in samples per second$/;"	m	struct:sf::SoundFileReader::Info	typeref:typename:unsigned int
samples	dependencies/sfml/include/SFML/Audio/SoundStream.hpp	/^        const Int16* samples;     \/\/\/< Pointer to the audio samples$/;"	m	struct:sf::SoundStream::Chunk	typeref:typename:const Int16 *
sb	dependencies/nlohmann/json.hpp	/^    std::streambuf& sb;$/;"	m	class:nlohmann::detail::input_stream_adapter	typeref:typename:std::streambuf &
sb	dependencies/spriter/spriterengine/user_override/json.hpp	/^			std::streambuf& sb;$/;"	m	class:nlohmann::detail::input_stream_adapter	typeref:typename:std::streambuf &
scale	dependencies/spriter/spriterengine/entity/entityinstance.h	/^		point scale;$/;"	m	class:SpriterEngine::EntityInstance	typeref:typename:point
scale	dependencies/spriter/spriterengine/objectinfo/boneinstanceinfo.h	/^		point scale;$/;"	m	class:SpriterEngine::BoneInstanceInfo	typeref:typename:point
scale	dependencies/spriter/spriterengine/objectinfo/boneobjectinfo.h	/^		point scale;$/;"	m	class:SpriterEngine::BoneObjectInfo	typeref:typename:point
scale	dependencies/spriter/spriterengine/objectinfo/boxinstanceinfo.h	/^		point scale;$/;"	m	class:SpriterEngine::BoxInstanceInfo	typeref:typename:point
scale	dependencies/spriter/spriterengine/objectinfo/boxobjectinfo.h	/^		point scale;$/;"	m	class:SpriterEngine::BoxObjectInfo	typeref:typename:point
scale	dependencies/spriter/spriterengine/objectinfo/entityobjectinfo.h	/^		point scale;$/;"	m	class:SpriterEngine::EntityObjectInfo	typeref:typename:point
scale	dependencies/spriter/spriterengine/objectinfo/spriteobjectinfo.h	/^		point scale;$/;"	m	class:SpriterEngine::SpriteObjectInfo	typeref:typename:point
scan	dependencies/nlohmann/json.hpp	/^    token_type scan()$/;"	f	class:nlohmann::detail::lexer	typeref:typename:token_type
scan	dependencies/spriter/spriterengine/user_override/json.hpp	/^			token_type scan() {$/;"	f	class:nlohmann::detail::lexer	typeref:typename:token_type
scan_literal	dependencies/nlohmann/json.hpp	/^    token_type scan_literal(const char* literal_text, const std::size_t length,$/;"	f	class:nlohmann::detail::lexer	typeref:typename:token_type
scan_literal	dependencies/spriter/spriterengine/user_override/json.hpp	/^			token_type scan_literal(const char* literal_text, const std::size_t length,$/;"	f	class:nlohmann::detail::lexer	typeref:typename:token_type
scan_number	dependencies/nlohmann/json.hpp	/^    token_type scan_number()$/;"	f	class:nlohmann::detail::lexer	typeref:typename:token_type
scan_number	dependencies/spriter/spriterengine/user_override/json.hpp	/^			token_type scan_number() {$/;"	f	class:nlohmann::detail::lexer	typeref:typename:token_type
scan_string	dependencies/nlohmann/json.hpp	/^    token_type scan_string()$/;"	f	class:nlohmann::detail::lexer	typeref:typename:token_type
scan_string	dependencies/spriter/spriterengine/user_override/json.hpp	/^			token_type scan_string() {$/;"	f	class:nlohmann::detail::lexer	typeref:typename:token_type
sensor	dependencies/sfml/include/SFML/Window/Event.hpp	/^        SensorEvent           sensor;            \/\/\/< Sensor event parameters (Event::SensorC/;"	m	union:sf::Event::__anon4b0d4c8f010a	typeref:typename:SensorEvent
serializer	dependencies/nlohmann/json.hpp	/^    serializer(output_adapter_t<char> s, const char ichar)$/;"	f	class:nlohmann::detail::serializer
serializer	dependencies/nlohmann/json.hpp	/^    using serializer = ::nlohmann::detail::serializer<basic_json>;$/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::serializer<basic_json>
serializer	dependencies/nlohmann/json.hpp	/^class serializer$/;"	c	namespace:nlohmann::detail
serializer	dependencies/spriter/spriterengine/user_override/json.hpp	/^			serializer(output_adapter_t<char> s, const char ichar)$/;"	f	class:nlohmann::detail::serializer
serializer	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using serializer = ::nlohmann::detail::serializer<basic_json>;$/;"	t	class:nlohmann::basic_json	typeref:typename:::nlohmann::detail::serializer<basic_json>
serializer	dependencies/spriter/spriterengine/user_override/json.hpp	/^		class serializer {$/;"	c	namespace:nlohmann::detail
setAlpha	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::setAlpha(real newAlpha)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
setAlpha	dependencies/spriter/spriterengine/objectinfo/boneinstanceinfo.cpp	/^	void BoneInstanceInfo::setAlpha(real newAlpha)$/;"	f	class:SpriterEngine::BoneInstanceInfo	typeref:typename:void
setAlpha	dependencies/spriter/spriterengine/objectinfo/boneobjectinfo.cpp	/^	void BoneObjectInfo::setAlpha(real newAlpha)$/;"	f	class:SpriterEngine::BoneObjectInfo	typeref:typename:void
setAlpha	dependencies/spriter/spriterengine/objectinfo/boxinstanceinfo.cpp	/^	void BoxInstanceInfo::setAlpha(real newAlpha)$/;"	f	class:SpriterEngine::BoxInstanceInfo	typeref:typename:void
setAlpha	dependencies/spriter/spriterengine/objectinfo/boxobjectinfo.cpp	/^	void BoxObjectInfo::setAlpha(real newAlpha)$/;"	f	class:SpriterEngine::BoxObjectInfo	typeref:typename:void
setAlpha	dependencies/spriter/spriterengine/objectinfo/entityobjectinfo.cpp	/^	void EntityObjectInfo::setAlpha(real newAlpha)$/;"	f	class:SpriterEngine::EntityObjectInfo	typeref:typename:void
setAlpha	dependencies/spriter/spriterengine/objectinfo/pointinstanceinfo.cpp	/^	void PointInstanceInfo::setAlpha(real newAlpha)$/;"	f	class:SpriterEngine::PointInstanceInfo	typeref:typename:void
setAlpha	dependencies/spriter/spriterengine/objectinfo/spriteobjectinfo.cpp	/^	void SpriteObjectInfo::setAlpha(real newAlpha)$/;"	f	class:SpriterEngine::SpriteObjectInfo	typeref:typename:void
setAlpha	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	void UniversalObjectInterface::setAlpha(real newAlpha)$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:void
setAngle	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::setAngle(real newAngle)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
setAngle	dependencies/spriter/spriterengine/objectinfo/boneinstanceinfo.cpp	/^	void BoneInstanceInfo::setAngle(real newAngle)$/;"	f	class:SpriterEngine::BoneInstanceInfo	typeref:typename:void
setAngle	dependencies/spriter/spriterengine/objectinfo/boneobjectinfo.cpp	/^	void BoneObjectInfo::setAngle(real newAngle)$/;"	f	class:SpriterEngine::BoneObjectInfo	typeref:typename:void
setAngle	dependencies/spriter/spriterengine/objectinfo/boxinstanceinfo.cpp	/^	void BoxInstanceInfo::setAngle(real newAngle)$/;"	f	class:SpriterEngine::BoxInstanceInfo	typeref:typename:void
setAngle	dependencies/spriter/spriterengine/objectinfo/boxobjectinfo.cpp	/^	void BoxObjectInfo::setAngle(real newAngle)$/;"	f	class:SpriterEngine::BoxObjectInfo	typeref:typename:void
setAngle	dependencies/spriter/spriterengine/objectinfo/entityobjectinfo.cpp	/^	void EntityObjectInfo::setAngle(real newAngle)$/;"	f	class:SpriterEngine::EntityObjectInfo	typeref:typename:void
setAngle	dependencies/spriter/spriterengine/objectinfo/pointinstanceinfo.cpp	/^	void PointInstanceInfo::setAngle(real newAngle)$/;"	f	class:SpriterEngine::PointInstanceInfo	typeref:typename:void
setAngle	dependencies/spriter/spriterengine/objectinfo/pointobjectinfo.cpp	/^	void PointObjectInfo::setAngle(real newAngle)$/;"	f	class:SpriterEngine::PointObjectInfo	typeref:typename:void
setAngle	dependencies/spriter/spriterengine/objectinfo/spriteobjectinfo.cpp	/^	void SpriteObjectInfo::setAngle(real newAngle)$/;"	f	class:SpriterEngine::SpriteObjectInfo	typeref:typename:void
setAngle	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	void UniversalObjectInterface::setAngle(real newAngle)$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:void
setAtlasFile	dependencies/spriter/spriterengine/override/imagefile.cpp	/^	void ImageFile::setAtlasFile(AtlasFile *initialAtlasFile, atlasframedata initialAtlasFrameData)$/;"	f	class:SpriterEngine::ImageFile	typeref:typename:void
setAtlasFile	dependencies/spriter/spriterengine/user_override/sfmlimagefile.cpp	/^	void SfmlImageFile::setAtlasFile(AtlasFile *initialAtlasFile, atlasframedata initialAtlasFrameD/;"	f	class:SpriterEngine::SfmlImageFile	typeref:typename:void
setCurrentAnimation	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::setCurrentAnimation(AnimationInstance * newCurrentAnimation)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
setCurrentAnimation	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::setCurrentAnimation(const std::string & animationName)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
setCurrentAnimation	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::setCurrentAnimation(const std::string & animationName, real blendTime)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
setCurrentAnimation	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::setCurrentAnimation(int newAnimationIndex)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
setCurrentAnimation	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	void EntityInstanceData::setCurrentAnimation(const std::string & animationName, AnimationInstan/;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:void
setCurrentAnimation	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	void EntityInstanceData::setCurrentAnimation(int newAnimationIndex, AnimationInstance **current/;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:void
setCurrentAnimation	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	void UniversalObjectInterface::setCurrentAnimation(AnimationInstance * newCurrentAnimation)$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:void
setCurrentAnimation	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	void UniversalObjectInterface::setCurrentAnimation(int newAnimationIndex)$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:void
setCurrentEntity	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::setCurrentEntity(EntityInstanceData * newCurrentEntity)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
setCurrentEntity	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::setCurrentEntity(const std::string & newEntityName, const std::string & ne/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
setCurrentEntity	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::setCurrentEntity(int newEntityId)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
setCurrentEntity	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	void UniversalObjectInterface::setCurrentEntity(EntityInstanceData * newCurrentEntity)$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:void
setCurrentEntity	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	void UniversalObjectInterface::setCurrentEntity(int newEntityId)$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:void
setCurrentTime	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::setCurrentTime(real newCurrentTime)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
setCurrentTimeToKeyAtIndex	dependencies/spriter/spriterengine/animation/animationinstance.cpp	/^	void AnimationInstance::setCurrentTimeToKeyAtIndex(int newIndex, ObjectInterfaceVector **instan/;"	f	class:SpriterEngine::AnimationInstance	typeref:typename:void
setCurrentTimeToKeyAtIndex	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::setCurrentTimeToKeyAtIndex(int newKeyIndex)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
setCurrentTimeToNextKeyFrame	dependencies/spriter/spriterengine/animation/animationinstance.cpp	/^	void AnimationInstance::setCurrentTimeToNextKeyFrame(ObjectInterfaceVector **instanceZOrder)$/;"	f	class:SpriterEngine::AnimationInstance	typeref:typename:void
setCurrentTimeToNextKeyFrame	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::setCurrentTimeToNextKeyFrame()$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
setCurrentTimeToPreviousKeyFrame	dependencies/spriter/spriterengine/animation/animationinstance.cpp	/^	void AnimationInstance::setCurrentTimeToPreviousKeyFrame(ObjectInterfaceVector **instanceZOrder/;"	f	class:SpriterEngine::AnimationInstance	typeref:typename:void
setCurrentTimeToPreviousKeyFrame	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::setCurrentTimeToPreviousKeyFrame()$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
setErrorFunction	dependencies/spriter/spriterengine/global/settings.cpp	/^	void Settings::setErrorFunction(ErrorFunctionPointer errorFunction)$/;"	f	class:SpriterEngine::Settings	typeref:typename:void
setFile	dependencies/spriter/spriterengine/file/filereference.cpp	/^	void FileReference::setFile(File *newFile)$/;"	f	class:SpriterEngine::FileReference	typeref:typename:void
setImage	dependencies/spriter/spriterengine/objectinfo/spriteobjectinfo.cpp	/^	void SpriteObjectInfo::setImage(ImageFile *newImageFile)$/;"	f	class:SpriterEngine::SpriteObjectInfo	typeref:typename:void
setImage	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	void UniversalObjectInterface::setImage(ImageFile *newImageFile)$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:void
setIntValue	dependencies/spriter/spriterengine/objectinfo/intvariableinfo.cpp	/^	void IntVariableInfo::setIntValue(int newValue)$/;"	f	class:SpriterEngine::IntVariableInfo	typeref:typename:void
setIntValue	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	void UniversalObjectInterface::setIntValue(int newValue)$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:void
setNextObjectInfo	dependencies/spriter/spriterengine/timeline/timelinekey.cpp	/^	void TimelineKey::setNextObjectInfo(UniversalObjectInterface *newNextObjectInfo)$/;"	f	class:SpriterEngine::TimelineKey	typeref:typename:void
setObject	dependencies/spriter/spriterengine/entity/entity.cpp	/^	Object *Entity::setObject(std::string objectName, Object::ObjectType objectType)$/;"	f	class:SpriterEngine::Entity	typeref:typename:Object *
setObjectInstance	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	void EntityInstanceData::setObjectInstance(int id, const std::string &name, UniversalObjectInte/;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:void
setObjectToLinear	dependencies/spriter/spriterengine/objectinfo/boneobjectinfo.cpp	/^	void BoneObjectInfo::setObjectToLinear(UniversalObjectInterface *bObject, real t, UniversalObje/;"	f	class:SpriterEngine::BoneObjectInfo	typeref:typename:void
setObjectToLinear	dependencies/spriter/spriterengine/objectinfo/boxobjectinfo.cpp	/^	void BoxObjectInfo::setObjectToLinear(UniversalObjectInterface *bObject, real t, UniversalObjec/;"	f	class:SpriterEngine::BoxObjectInfo	typeref:typename:void
setObjectToLinear	dependencies/spriter/spriterengine/objectinfo/entityobjectinfo.cpp	/^	void EntityObjectInfo::setObjectToLinear(UniversalObjectInterface *bObject, real t, UniversalOb/;"	f	class:SpriterEngine::EntityObjectInfo	typeref:typename:void
setObjectToLinear	dependencies/spriter/spriterengine/objectinfo/intvariableinfo.cpp	/^	void IntVariableInfo::setObjectToLinear(UniversalObjectInterface *bObject, real t, UniversalObj/;"	f	class:SpriterEngine::IntVariableInfo	typeref:typename:void
setObjectToLinear	dependencies/spriter/spriterengine/objectinfo/pointobjectinfo.cpp	/^	void PointObjectInfo::setObjectToLinear(UniversalObjectInterface *bObject, real t, UniversalObj/;"	f	class:SpriterEngine::PointObjectInfo	typeref:typename:void
setObjectToLinear	dependencies/spriter/spriterengine/objectinfo/realvariableinfo.cpp	/^	void RealVariableInfo::setObjectToLinear(UniversalObjectInterface *bObject, real t, UniversalOb/;"	f	class:SpriterEngine::RealVariableInfo	typeref:typename:void
setObjectToLinear	dependencies/spriter/spriterengine/objectinfo/soundobjectinfo.cpp	/^	void SoundObjectInfo::setObjectToLinear(UniversalObjectInterface *bObject, real t, UniversalObj/;"	f	class:SpriterEngine::SoundObjectInfo	typeref:typename:void
setObjectToLinear	dependencies/spriter/spriterengine/objectinfo/stringvariableinfo.cpp	/^	void StringVariableInfo::setObjectToLinear(UniversalObjectInterface *bObject, real t, Universal/;"	f	class:SpriterEngine::StringVariableInfo	typeref:typename:void
setObjectToLinear	dependencies/spriter/spriterengine/objectinfo/tagobjectinfo.cpp	/^	void TagObjectInfo::setObjectToLinear(UniversalObjectInterface *bObject, real t, UniversalObjec/;"	f	class:SpriterEngine::TagObjectInfo	typeref:typename:void
setObjectToLinear	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	void UniversalObjectInterface::setObjectToLinear(UniversalObjectInterface *bObject, real t, Uni/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:void
setPanning	dependencies/spriter/spriterengine/objectinfo/soundobjectinfo.cpp	/^	void SoundObjectInfo::setPanning(real newPanning)$/;"	f	class:SpriterEngine::SoundObjectInfo	typeref:typename:void
setPanning	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	void UniversalObjectInterface::setPanning(real newPanning)$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:void
setPanning	dependencies/spriter/spriterengine/override/soundobjectinforeference.cpp	/^	void SoundObjectInfoReference::setPanning(real newPanning)$/;"	f	class:SpriterEngine::SoundObjectInfoReference	typeref:typename:void
setPivot	dependencies/spriter/spriterengine/objectinfo/boxinstanceinfo.cpp	/^	void BoxInstanceInfo::setPivot(const point &newPivot)$/;"	f	class:SpriterEngine::BoxInstanceInfo	typeref:typename:void
setPivot	dependencies/spriter/spriterengine/objectinfo/boxobjectinfo.cpp	/^	void BoxObjectInfo::setPivot(const point &newPivot)$/;"	f	class:SpriterEngine::BoxObjectInfo	typeref:typename:void
setPivot	dependencies/spriter/spriterengine/objectinfo/spriteobjectinfo.cpp	/^	void SpriteObjectInfo::setPivot(const point &newPivot)$/;"	f	class:SpriterEngine::SpriteObjectInfo	typeref:typename:void
setPivot	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	void UniversalObjectInterface::setPivot(const point &newPivot)$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:void
setPlaybackPanning	dependencies/spriter/spriterengine/override/soundobjectinforeference.cpp	/^	void SoundObjectInfoReference::setPlaybackPanning()$/;"	f	class:SpriterEngine::SoundObjectInfoReference	typeref:typename:void
setPlaybackPanning	dependencies/spriter/spriterengine/user_override/sfmlsoundobjectinforeference.cpp	/^	void SfmlSoundObjectInfoReference::setPlaybackPanning()$/;"	f	class:SpriterEngine::SfmlSoundObjectInfoReference	typeref:typename:void
setPlaybackSpeedRatio	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::setPlaybackSpeedRatio(real newPlaybackSpeedRatio)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
setPlaybackVolume	dependencies/spriter/spriterengine/override/soundobjectinforeference.cpp	/^	void SoundObjectInfoReference::setPlaybackVolume()$/;"	f	class:SpriterEngine::SoundObjectInfoReference	typeref:typename:void
setPlaybackVolume	dependencies/spriter/spriterengine/user_override/sfmlsoundobjectinforeference.cpp	/^	void SfmlSoundObjectInfoReference::setPlaybackVolume()$/;"	f	class:SpriterEngine::SfmlSoundObjectInfoReference	typeref:typename:void
setPosition	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::setPosition(const point &newPosition)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
setPosition	dependencies/spriter/spriterengine/objectinfo/boneinstanceinfo.cpp	/^	void BoneInstanceInfo::setPosition(const point &newPosition)$/;"	f	class:SpriterEngine::BoneInstanceInfo	typeref:typename:void
setPosition	dependencies/spriter/spriterengine/objectinfo/boneobjectinfo.cpp	/^	void BoneObjectInfo::setPosition(const point &newPosition)$/;"	f	class:SpriterEngine::BoneObjectInfo	typeref:typename:void
setPosition	dependencies/spriter/spriterengine/objectinfo/boxinstanceinfo.cpp	/^	void BoxInstanceInfo::setPosition(const point &newPosition)$/;"	f	class:SpriterEngine::BoxInstanceInfo	typeref:typename:void
setPosition	dependencies/spriter/spriterengine/objectinfo/boxobjectinfo.cpp	/^	void BoxObjectInfo::setPosition(const point &newPosition)$/;"	f	class:SpriterEngine::BoxObjectInfo	typeref:typename:void
setPosition	dependencies/spriter/spriterengine/objectinfo/entityobjectinfo.cpp	/^	void EntityObjectInfo::setPosition(const point &newPosition)$/;"	f	class:SpriterEngine::EntityObjectInfo	typeref:typename:void
setPosition	dependencies/spriter/spriterengine/objectinfo/pointinstanceinfo.cpp	/^	void PointInstanceInfo::setPosition(const point &newPosition)$/;"	f	class:SpriterEngine::PointInstanceInfo	typeref:typename:void
setPosition	dependencies/spriter/spriterengine/objectinfo/pointobjectinfo.cpp	/^	void PointObjectInfo::setPosition(const point &newPosition)$/;"	f	class:SpriterEngine::PointObjectInfo	typeref:typename:void
setPosition	dependencies/spriter/spriterengine/objectinfo/spriteobjectinfo.cpp	/^	void SpriteObjectInfo::setPosition(const point &newPosition)$/;"	f	class:SpriterEngine::SpriteObjectInfo	typeref:typename:void
setPosition	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	void UniversalObjectInterface::setPosition(const point &newPosition)$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:void
setRealValue	dependencies/spriter/spriterengine/objectinfo/realvariableinfo.cpp	/^	void RealVariableInfo::setRealValue(real newValue)$/;"	f	class:SpriterEngine::RealVariableInfo	typeref:typename:void
setRealValue	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	void UniversalObjectInterface::setRealValue(real newValue)$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:void
setScale	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::setScale(const point &newScale)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
setScale	dependencies/spriter/spriterengine/objectinfo/boneinstanceinfo.cpp	/^	void BoneInstanceInfo::setScale(const point &newScale)$/;"	f	class:SpriterEngine::BoneInstanceInfo	typeref:typename:void
setScale	dependencies/spriter/spriterengine/objectinfo/boneobjectinfo.cpp	/^	void BoneObjectInfo::setScale(const point &newScale)$/;"	f	class:SpriterEngine::BoneObjectInfo	typeref:typename:void
setScale	dependencies/spriter/spriterengine/objectinfo/boxinstanceinfo.cpp	/^	void BoxInstanceInfo::setScale(const point &newScale)$/;"	f	class:SpriterEngine::BoxInstanceInfo	typeref:typename:void
setScale	dependencies/spriter/spriterengine/objectinfo/boxobjectinfo.cpp	/^	void BoxObjectInfo::setScale(const point &newScale)$/;"	f	class:SpriterEngine::BoxObjectInfo	typeref:typename:void
setScale	dependencies/spriter/spriterengine/objectinfo/entityobjectinfo.cpp	/^	void EntityObjectInfo::setScale(const point &newScale)$/;"	f	class:SpriterEngine::EntityObjectInfo	typeref:typename:void
setScale	dependencies/spriter/spriterengine/objectinfo/pointinstanceinfo.cpp	/^	void PointInstanceInfo::setScale(const point & newScale)$/;"	f	class:SpriterEngine::PointInstanceInfo	typeref:typename:void
setScale	dependencies/spriter/spriterengine/objectinfo/spriteobjectinfo.cpp	/^	void SpriteObjectInfo::setScale(const point &newScale)$/;"	f	class:SpriterEngine::SpriteObjectInfo	typeref:typename:void
setScale	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	void UniversalObjectInterface::setScale(const point &newScale)$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:void
setSize	dependencies/spriter/spriterengine/entity/object.cpp	/^	void Object::setSize(point newSize)$/;"	f	class:SpriterEngine::Object	typeref:typename:void
setSound	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	void UniversalObjectInterface::setSound(SoundFile *newSoundFile)$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:void
setSoundInstance	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	void EntityInstanceData::setSoundInstance(int id, const std::string &name, FileReference * soun/;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:void
setSoundObject	dependencies/spriter/spriterengine/entity/entity.cpp	/^	Object * Entity::setSoundObject(std::string objectName)$/;"	f	class:SpriterEngine::Entity	typeref:typename:Object *
setSpatialObject	dependencies/spriter/spriterengine/entity/entity.cpp	/^	Object * Entity::setSpatialObject(std::string objectName, Object::ObjectType objectType)$/;"	f	class:SpriterEngine::Entity	typeref:typename:Object *
setSpin	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::setSpin(int newSpin)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
setSpin	dependencies/spriter/spriterengine/objectinfo/boneobjectinfo.cpp	/^	void BoneObjectInfo::setSpin(int newSpin)$/;"	f	class:SpriterEngine::BoneObjectInfo	typeref:typename:void
setSpin	dependencies/spriter/spriterengine/objectinfo/boxobjectinfo.cpp	/^	void BoxObjectInfo::setSpin(int newSpin)$/;"	f	class:SpriterEngine::BoxObjectInfo	typeref:typename:void
setSpin	dependencies/spriter/spriterengine/objectinfo/entityobjectinfo.cpp	/^	void EntityObjectInfo::setSpin(int newSpin)$/;"	f	class:SpriterEngine::EntityObjectInfo	typeref:typename:void
setSpin	dependencies/spriter/spriterengine/objectinfo/pointinstanceinfo.cpp	/^	void PointInstanceInfo::setSpin(int newSpin)$/;"	f	class:SpriterEngine::PointInstanceInfo	typeref:typename:void
setSpin	dependencies/spriter/spriterengine/objectinfo/pointobjectinfo.cpp	/^	void PointObjectInfo::setSpin(int newSpin)$/;"	f	class:SpriterEngine::PointObjectInfo	typeref:typename:void
setSpin	dependencies/spriter/spriterengine/objectinfo/spriteobjectinfo.cpp	/^	void SpriteObjectInfo::setSpin(int newSpin)$/;"	f	class:SpriterEngine::SpriteObjectInfo	typeref:typename:void
setSpin	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	void UniversalObjectInterface::setSpin(int newSpin)$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:void
setStringValue	dependencies/spriter/spriterengine/objectinfo/stringvariableinfo.cpp	/^	void StringVariableInfo::setStringValue(const std::string &newValue)$/;"	f	class:SpriterEngine::StringVariableInfo	typeref:typename:void
setStringValue	dependencies/spriter/spriterengine/objectinfo/stringvariableinforeference.cpp	/^	void StringVariableInfoReference::setStringValue(std::string *newValue)$/;"	f	class:SpriterEngine::StringVariableInfoReference	typeref:typename:void
setStringValue	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	void UniversalObjectInterface::setStringValue(const std::string &newValue)$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:void
setStringValue	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	void UniversalObjectInterface::setStringValue(std::string *newValue)$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:void
setSubEntityObject	dependencies/spriter/spriterengine/entity/entity.cpp	/^	Object * Entity::setSubEntityObject(std::string objectName)$/;"	f	class:SpriterEngine::Entity	typeref:typename:Object *
setTagInstance	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	void EntityInstanceData::setTagInstance(int objectId, const std::string &objectName)$/;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:void
setTagList	dependencies/spriter/spriterengine/objectinfo/tagobjectinforeference.cpp	/^	void TagObjectInfoReference::setTagList(TagList *newTagList)$/;"	f	class:SpriterEngine::TagObjectInfoReference	typeref:typename:void
setTagList	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	void UniversalObjectInterface::setTagList(TagList *newTagList)$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:void
setTimeElapsed	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::setTimeElapsed(real timeElapsed)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
setTimeRatio	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::setTimeRatio(real newCurrentTimeRatio)$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
setTimeRatio	dependencies/spriter/spriterengine/objectinfo/entityobjectinfo.cpp	/^	void EntityObjectInfo::setTimeRatio(real newCurrentTimeRatio)$/;"	f	class:SpriterEngine::EntityObjectInfo	typeref:typename:void
setTimeRatio	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	void UniversalObjectInterface::setTimeRatio(real newCurrentTimeRatio)$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:void
setToBlendedLinear	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::setToBlendedLinear(UniversalObjectInterface *aObject, UniversalObjectInter/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
setToBlendedLinear	dependencies/spriter/spriterengine/objectinfo/boneinstanceinfo.cpp	/^	void BoneInstanceInfo::setToBlendedLinear(UniversalObjectInterface *aObject, UniversalObjectInt/;"	f	class:SpriterEngine::BoneInstanceInfo	typeref:typename:void
setToBlendedLinear	dependencies/spriter/spriterengine/objectinfo/boxinstanceinfo.cpp	/^	void BoxInstanceInfo::setToBlendedLinear(UniversalObjectInterface *aObject, UniversalObjectInte/;"	f	class:SpriterEngine::BoxInstanceInfo	typeref:typename:void
setToBlendedLinear	dependencies/spriter/spriterengine/objectinfo/intvariableinfo.cpp	/^	void IntVariableInfo::setToBlendedLinear(UniversalObjectInterface *aObject, UniversalObjectInte/;"	f	class:SpriterEngine::IntVariableInfo	typeref:typename:void
setToBlendedLinear	dependencies/spriter/spriterengine/objectinfo/pointinstanceinfo.cpp	/^	void PointInstanceInfo::setToBlendedLinear(UniversalObjectInterface *aObject, UniversalObjectIn/;"	f	class:SpriterEngine::PointInstanceInfo	typeref:typename:void
setToBlendedLinear	dependencies/spriter/spriterengine/objectinfo/realvariableinfo.cpp	/^	void RealVariableInfo::setToBlendedLinear(UniversalObjectInterface *aObject, UniversalObjectInt/;"	f	class:SpriterEngine::RealVariableInfo	typeref:typename:void
setToBlendedLinear	dependencies/spriter/spriterengine/objectinfo/spriteobjectinfo.cpp	/^	void SpriteObjectInfo::setToBlendedLinear(UniversalObjectInterface *aObject, UniversalObjectInt/;"	f	class:SpriterEngine::SpriteObjectInfo	typeref:typename:void
setToBlendedLinear	dependencies/spriter/spriterengine/objectinfo/stringvariableinforeference.cpp	/^	void StringVariableInfoReference::setToBlendedLinear(UniversalObjectInterface *aObject, Univers/;"	f	class:SpriterEngine::StringVariableInfoReference	typeref:typename:void
setToBlendedLinear	dependencies/spriter/spriterengine/objectinfo/tagobjectinforeference.cpp	/^	void TagObjectInfoReference::setToBlendedLinear(UniversalObjectInterface *aObject, UniversalObj/;"	f	class:SpriterEngine::TagObjectInfoReference	typeref:typename:void
setToBlendedLinear	dependencies/spriter/spriterengine/objectinfo/triggerobjectinfo.cpp	/^	void TriggerObjectInfo::setToBlendedLinear(UniversalObjectInterface *aObject, UniversalObjectIn/;"	f	class:SpriterEngine::TriggerObjectInfo	typeref:typename:void
setToBlendedLinear	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	void UniversalObjectInterface::setToBlendedLinear(UniversalObjectInterface *aObject, UniversalO/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:void
setToBlendedLinear	dependencies/spriter/spriterengine/override/soundobjectinforeference.cpp	/^	void SoundObjectInfoReference::setToBlendedLinear(UniversalObjectInterface *aObject, UniversalO/;"	f	class:SpriterEngine::SoundObjectInfoReference	typeref:typename:void
setTrigFunctions	dependencies/spriter/spriterengine/objectref/transformprocessor.cpp	/^	void TransformProcessor::setTrigFunctions()$/;"	f	class:SpriterEngine::TransformProcessor	typeref:typename:void
setTriggerCount	dependencies/spriter/spriterengine/objectinfo/soundobjectinfo.cpp	/^	void SoundObjectInfo::setTriggerCount(int newTriggerCount)$/;"	f	class:SpriterEngine::SoundObjectInfo	typeref:typename:void
setTriggerCount	dependencies/spriter/spriterengine/objectinfo/triggerobjectinfo.cpp	/^	void TriggerObjectInfo::setTriggerCount(int newTriggerCount)$/;"	f	class:SpriterEngine::TriggerObjectInfo	typeref:typename:void
setTriggerCount	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	void UniversalObjectInterface::setTriggerCount(int newTriggerCount)$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:void
setTriggerCount	dependencies/spriter/spriterengine/override/soundobjectinforeference.cpp	/^	void SoundObjectInfoReference::setTriggerCount(int newTriggerCount)$/;"	f	class:SpriterEngine::SoundObjectInfoReference	typeref:typename:void
setTriggerInstance	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	void EntityInstanceData::setTriggerInstance(int id, const std::string &name, TriggerObjectInfo /;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:void
setTriggerObject	dependencies/spriter/spriterengine/entity/entity.cpp	/^	Object * Entity::setTriggerObject(std::string objectName)$/;"	f	class:SpriterEngine::Entity	typeref:typename:Object *
setVariableTimeline	dependencies/spriter/spriterengine/animation/animation.cpp	/^	Timeline *Animation::setVariableTimeline(int objectId, int variableId)$/;"	f	class:SpriterEngine::Animation	typeref:typename:Timeline *
setVolume	dependencies/spriter/spriterengine/objectinfo/soundobjectinfo.cpp	/^	void SoundObjectInfo::setVolume(real newVolume)$/;"	f	class:SpriterEngine::SoundObjectInfo	typeref:typename:void
setVolume	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	void UniversalObjectInterface::setVolume(real newVolume)$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:void
setVolume	dependencies/spriter/spriterengine/override/soundobjectinforeference.cpp	/^	void SoundObjectInfoReference::setVolume(real newVolume)$/;"	f	class:SpriterEngine::SoundObjectInfoReference	typeref:typename:void
setZOrder	dependencies/spriter/spriterengine/animation/animationinstance.cpp	/^	void AnimationInstance::setZOrder(ObjectInterfaceVector ** instanceZOrder)$/;"	f	class:SpriterEngine::AnimationInstance	typeref:typename:void
setZOrder	dependencies/spriter/spriterengine/animation/mainlinekeyinstance.cpp	/^	void MainlineKeyInstance::setZOrder(ObjectInterfaceVector **instanceZOrder)$/;"	f	class:SpriterEngine::MainlineKeyInstance	typeref:typename:void
set_begin	dependencies/nlohmann/json.hpp	/^    void set_begin() noexcept$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:void
set_begin	dependencies/nlohmann/json.hpp	/^    void set_begin() noexcept$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:void
set_begin	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void set_begin() noexcept {$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:void
set_begin	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void set_begin() noexcept {$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:void
set_end	dependencies/nlohmann/json.hpp	/^    void set_end() noexcept$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:void
set_end	dependencies/nlohmann/json.hpp	/^    void set_end() noexcept$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:void
set_end	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void set_end() noexcept {$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:void
set_end	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void set_end() noexcept {$/;"	f	class:nlohmann::detail::primitive_iterator_t	typeref:typename:void
setupAnimationInstance	dependencies/spriter/spriterengine/animation/animation.cpp	/^	void Animation::setupAnimationInstance(EntityInstance *entityInstance, EntityInstanceData *enti/;"	f	class:SpriterEngine::Animation	typeref:typename:void
setupAnimationInstances	dependencies/spriter/spriterengine/entity/entity.cpp	/^	void Entity::setupAnimationInstances(EntityInstance *entityInstance, EntityInstanceData *entity/;"	f	class:SpriterEngine::Entity	typeref:typename:void
setupDefaultInAnimation	dependencies/spriter/spriterengine/variable/variable.cpp	/^	void Variable::setupDefaultInAnimation(Animation * animation, int objectId, int variableId)$/;"	f	class:SpriterEngine::Variable	typeref:typename:void
setupDefaultVariableTimelines	dependencies/spriter/spriterengine/entity/entity.cpp	/^	void Entity::setupDefaultVariableTimelines()$/;"	f	class:SpriterEngine::Entity	typeref:typename:void
setupDefaultVariableTimelines	dependencies/spriter/spriterengine/variable/variablecontainer.cpp	/^	void VariableContainer::setupDefaultVariableTimelines(Animation * animation, int objectId)$/;"	f	class:SpriterEngine::VariableContainer	typeref:typename:void
setupFileReferences	dependencies/spriter/spriterengine/model/spritermodel.cpp	/^	void SpriterModel::setupFileReferences(FileReferenceVector *fileReferences)$/;"	f	class:SpriterEngine::SpriterModel	typeref:typename:void
setupInstance	dependencies/spriter/spriterengine/entity/entity.cpp	/^	void Entity::setupInstance(SpriterModel *model, EntityInstance *entityInstance, EntityInstanceD/;"	f	class:SpriterEngine::Entity	typeref:typename:void
setupObjectInstance	dependencies/spriter/spriterengine/entity/entity.cpp	/^	void Entity::setupObjectInstance(Object *object, SpriterModel *model, EntityInstance *entityIns/;"	f	class:SpriterEngine::Entity	typeref:typename:void
setupObjectInstances	dependencies/spriter/spriterengine/entity/entity.cpp	/^	void Entity::setupObjectInstances(SpriterModel *model, EntityInstance *entityInstance, EntityIn/;"	f	class:SpriterEngine::Entity	typeref:typename:void
setupRefInstancesAndTimeInfo	dependencies/spriter/spriterengine/animation/mainlinekey.cpp	/^	void MainlineKey::setupRefInstancesAndTimeInfo(EntityInstance *entityInstance, EntityInstanceDa/;"	f	class:SpriterEngine::MainlineKey	typeref:typename:void
setupTimelineInstance	dependencies/spriter/spriterengine/timeline/timeline.cpp	/^	void Timeline::setupTimelineInstance(TimelineKeyVector **keyInstances)$/;"	f	class:SpriterEngine::Timeline	typeref:typename:void
setupVariableInstances	dependencies/spriter/spriterengine/variable/variablecontainer.cpp	/^	void VariableContainer::setupVariableInstances(VariableInstanceNameAndIdMap * variableMap)$/;"	f	class:SpriterEngine::VariableContainer	typeref:typename:void
sf	dependencies/sfml/include/SFML/Audio/AlResource.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Audio/InputSoundFile.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Audio/Listener.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Audio/Music.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Audio/OutputSoundFile.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Audio/Sound.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Audio/SoundBuffer.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Audio/SoundBufferRecorder.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Audio/SoundFileFactory.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Audio/SoundFileFactory.inl	/^namespace sf$/;"	n	file:
sf	dependencies/sfml/include/SFML/Audio/SoundFileReader.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Audio/SoundFileWriter.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Audio/SoundRecorder.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Audio/SoundSource.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Audio/SoundStream.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Config.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Graphics/BlendMode.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Graphics/CircleShape.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Graphics/Color.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Graphics/ConvexShape.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Graphics/Drawable.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Graphics/Font.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Graphics/Glsl.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Graphics/Glyph.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Graphics/Image.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Graphics/PrimitiveType.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Graphics/Rect.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Graphics/RectangleShape.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Graphics/RenderStates.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Graphics/RenderTarget.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Graphics/RenderTexture.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Graphics/RenderWindow.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Graphics/Shader.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Graphics/Shape.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Graphics/Sprite.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Graphics/Text.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Graphics/Texture.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Graphics/Transform.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Graphics/Transformable.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Graphics/Vertex.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Graphics/VertexArray.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Graphics/View.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Network/Ftp.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Network/Http.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Network/IpAddress.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Network/Packet.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Network/Socket.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Network/SocketHandle.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Network/SocketSelector.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Network/TcpListener.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Network/TcpSocket.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Network/UdpSocket.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/System/Clock.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/System/Err.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/System/FileInputStream.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/System/InputStream.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/System/Lock.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/System/MemoryInputStream.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/System/Mutex.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/System/NativeActivity.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/System/NonCopyable.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/System/Sleep.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/System/String.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/System/Thread.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/System/ThreadLocal.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/System/ThreadLocalPtr.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/System/ThreadLocalPtr.inl	/^namespace sf$/;"	n	file:
sf	dependencies/sfml/include/SFML/System/Time.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/System/Utf.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/System/Vector2.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/System/Vector3.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Window/Context.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Window/ContextSettings.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Window/Event.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Window/GlResource.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Window/Joystick.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Window/Keyboard.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Window/Mouse.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Window/Sensor.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Window/Touch.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Window/VideoMode.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Window/Window.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Window/WindowHandle.hpp	/^namespace sf$/;"	n
sf	dependencies/sfml/include/SFML/Window/WindowStyle.hpp	/^namespace sf$/;"	n
shader	dependencies/sfml/include/SFML/Graphics/RenderStates.hpp	/^    const Shader*  shader;    \/\/\/< Shader$/;"	m	class:sf::RenderStates	typeref:typename:const Shader *
shift	dependencies/sfml/include/SFML/Window/Event.hpp	/^        bool          shift;   \/\/\/< Is the Shift key pressed?$/;"	m	struct:sf::Event::KeyEvent	typeref:typename:bool
shortestAngleLinear	dependencies/spriter/spriterengine/global/global.h	/^	inline real shortestAngleLinear(real a, real b, real t)$/;"	f	namespace:SpriterEngine	typeref:typename:real
simpleError	dependencies/spriter/spriterengine/global/settings.cpp	/^	void Settings::simpleError(const std::string &errorMessage)$/;"	f	class:SpriterEngine::Settings	typeref:typename:void
size	dependencies/nlohmann/json.hpp	/^    size_type size() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:size_type
size	dependencies/nlohmann/json.hpp	/^    static constexpr std::size_t size() noexcept$/;"	f	struct:nlohmann::detail::index_sequence	typeref:typename:std::size_t
size	dependencies/sfml/include/SFML/Window/Event.hpp	/^        SizeEvent             size;              \/\/\/< Size event parameters (Event::Resized)$/;"	m	union:sf::Event::__anon4b0d4c8f010a	typeref:typename:SizeEvent
size	dependencies/spriter/spriterengine/entity/object.h	/^		point size;$/;"	m	class:SpriterEngine::Object	typeref:typename:point
size	dependencies/spriter/spriterengine/objectinfo/boneinstanceinfo.h	/^		point size;$/;"	m	class:SpriterEngine::BoneInstanceInfo	typeref:typename:point
size	dependencies/spriter/spriterengine/objectinfo/boxinstanceinfo.h	/^		point size;$/;"	m	class:SpriterEngine::BoxInstanceInfo	typeref:typename:point
size	dependencies/spriter/spriterengine/user_override/json.hpp	/^			size_type size() const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:size_type
size	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static constexpr std::size_t size() noexcept {$/;"	f	struct:nlohmann::detail::index_sequence	typeref:typename:std::size_t
size_type	dependencies/nlohmann/json.hpp	/^        using size_type = typename BasicJsonType::size_type;$/;"	t	function:nlohmann::json_pointer::get_and_create	typeref:typename:BasicJsonType::size_type
size_type	dependencies/nlohmann/json.hpp	/^        using size_type = typename BasicJsonType::size_type;$/;"	t	function:nlohmann::json_pointer::get_checked	typeref:typename:BasicJsonType::size_type
size_type	dependencies/nlohmann/json.hpp	/^        using size_type = typename BasicJsonType::size_type;$/;"	t	function:nlohmann::json_pointer::get_unchecked	typeref:typename:BasicJsonType::size_type
size_type	dependencies/nlohmann/json.hpp	/^    using size_type = std::size_t;$/;"	t	class:nlohmann::basic_json	typeref:typename:std::size_t
size_type	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using size_type = std::size_t;$/;"	t	class:nlohmann::basic_json	typeref:typename:std::size_t
size_type	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using size_type = typename BasicJsonType::size_type;$/;"	t	function:nlohmann::json_pointer::get_and_create	typeref:typename:BasicJsonType::size_type
size_type	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using size_type = typename BasicJsonType::size_type;$/;"	t	function:nlohmann::json_pointer::get_checked	typeref:typename:BasicJsonType::size_type
size_type	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using size_type = typename BasicJsonType::size_type;$/;"	t	function:nlohmann::json_pointer::get_unchecked	typeref:typename:BasicJsonType::size_type
solve	dependencies/spriter/spriterengine/timeinfo/beziereasingcurve.cpp	/^	real BezierEasingCurve::solve(real ax, real bx, real cx, real ay, real by, real cy, real x, rea/;"	f	class:SpriterEngine::BezierEasingCurve	typeref:typename:real
solveCurveX	dependencies/spriter/spriterengine/timeinfo/beziereasingcurve.cpp	/^	real BezierEasingCurve::solveCurveX(real ax, real bx, real cx, real x, real epsilon) const$/;"	f	class:SpriterEngine::BezierEasingCurve	typeref:typename:real
solveEpsilon	dependencies/spriter/spriterengine/timeinfo/beziereasingcurve.cpp	/^	real BezierEasingCurve::solveEpsilon(real duration) const$/;"	f	class:SpriterEngine::BezierEasingCurve	typeref:typename:real
sound	dependencies/spriter/spriterengine/file/filereference.cpp	/^	SoundFile *FileReference::sound()$/;"	f	class:SpriterEngine::FileReference	typeref:typename:SoundFile *
sound	dependencies/spriter/spriterengine/user_override/sfmlsoundobjectinforeference.h	/^		sf::Sound sound;$/;"	m	class:SpriterEngine::SfmlSoundObjectInfoReference	typeref:typename:sf::Sound
soundFile	dependencies/spriter/spriterengine/file/file.cpp	/^	SoundFile *File::soundFile()$/;"	f	class:SpriterEngine::File	typeref:typename:SoundFile *
soundFile	dependencies/spriter/spriterengine/override/soundfile.cpp	/^	SoundFile *SoundFile::soundFile()$/;"	f	class:SpriterEngine::SoundFile	typeref:typename:SoundFile *
soundIdMap	dependencies/spriter/spriterengine/entity/entity.h	/^		ObjectIdMap soundIdMap;$/;"	m	class:SpriterEngine::Entity	typeref:typename:ObjectIdMap
soundNameMap	dependencies/spriter/spriterengine/entity/entityinstancedata.h	/^		SoundNameMap soundNameMap;$/;"	m	class:SpriterEngine::EntityInstanceData	typeref:typename:SoundNameMap
soundTimelines	dependencies/spriter/spriterengine/animation/animation.h	/^		TimelineVector soundTimelines;$/;"	m	class:SpriterEngine::Animation	typeref:typename:TimelineVector
sounds	dependencies/spriter/spriterengine/entity/entityinstancedata.h	/^		SoundIdMap sounds;$/;"	m	class:SpriterEngine::EntityInstanceData	typeref:typename:SoundIdMap
sourceSize	dependencies/spriter/spriterengine/global/atlas.h	/^		point sourceSize;$/;"	m	struct:SpriterEngine::atlasframedata	typeref:typename:point
spinDirection	dependencies/spriter/spriterengine/objectinfo/angleinfo.h	/^		int spinDirection;$/;"	m	class:SpriterEngine::AngleInfo	typeref:typename:int
split	dependencies/nlohmann/json.hpp	/^    static std::vector<std::string> split(const std::string& reference_string)$/;"	f	class:nlohmann::json_pointer	typeref:typename:std::vector<std::string>
split	dependencies/spriter/spriterengine/user_override/json.hpp	/^		static std::vector<std::string> split(const std::string& reference_string) {$/;"	f	class:nlohmann::json_pointer	typeref:typename:std::vector<std::string>
sprite	dependencies/spriter/spriterengine/user_override/sfmlimagefile.h	/^		sf::Sprite sprite;$/;"	m	class:SpriterEngine::SfmlImageFile	typeref:typename:sf::Sprite
spriteSourcePosition	dependencies/spriter/spriterengine/global/atlas.h	/^                point spriteSourcePosition;$/;"	m	struct:SpriterEngine::atlasframedata	typeref:typename:point
spriteSourceSize	dependencies/spriter/spriterengine/global/atlas.h	/^                point spriteSourceSize;$/;"	m	struct:SpriterEngine::atlasframedata	typeref:typename:point
start	dependencies/nlohmann/json.hpp	/^    const char* start;$/;"	m	class:nlohmann::detail::input_buffer_adapter	typeref:typename:const char *
start	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const char* start;$/;"	m	class:nlohmann::detail::input_buffer_adapter	typeref:typename:const char *
start	src/GameOverScene.cpp	/^void GameOverScene::start() {$/;"	f	class:GameOverScene	typeref:typename:void
start	src/GameScene.cpp	/^void GameScene::start() {$/;"	f	class:GameScene	typeref:typename:void
start	src/MenuScene.cpp	/^void MenuScene::start() {$/;"	f	class:MenuScene	typeref:typename:void
startResumePlayback	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	void EntityInstance::startResumePlayback()$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:void
static_const	dependencies/nlohmann/json.hpp	/^struct static_const$/;"	s	namespace:nlohmann::detail
static_const	dependencies/spriter/spriterengine/user_override/json.hpp	/^		struct static_const {$/;"	s	namespace:nlohmann::detail
std	dependencies/nlohmann/json.hpp	/^namespace std$/;"	n
std	dependencies/spriter/spriterengine/global/global.h	/^namespace std {$/;"	n
std	dependencies/spriter/spriterengine/user_override/json.hpp	/^namespace std {$/;"	n
stencilBits	dependencies/sfml/include/SFML/Window/ContextSettings.hpp	/^    unsigned int stencilBits;       \/\/\/< Bits of the stencil buffer$/;"	m	struct:sf::ContextSettings	typeref:typename:unsigned int
stop	src/GameOverScene.cpp	/^void GameOverScene::stop() {$/;"	f	class:GameOverScene	typeref:typename:void
stop	src/GameScene.cpp	/^void GameScene::stop() {$/;"	f	class:GameScene	typeref:typename:void
stop	src/MenuScene.cpp	/^void MenuScene::stop() {$/;"	f	class:MenuScene	typeref:typename:void
str	dependencies/nlohmann/json.hpp	/^    StringType& str;$/;"	m	class:nlohmann::detail::output_string_adapter	typeref:typename:StringType &
str	dependencies/spriter/spriterengine/user_override/json.hpp	/^			StringType& str;$/;"	m	class:nlohmann::detail::output_string_adapter	typeref:typename:StringType &
stream	dependencies/nlohmann/json.hpp	/^    std::basic_ostream<CharType>& stream;$/;"	m	class:nlohmann::detail::output_stream_adapter	typeref:typename:std::basic_ostream<CharType> &
stream	dependencies/spriter/spriterengine/user_override/json.hpp	/^			std::basic_ostream<CharType>& stream;$/;"	m	class:nlohmann::detail::output_stream_adapter	typeref:typename:std::basic_ostream<CharType> &
string	dependencies/nlohmann/json.hpp	/^        string_t* string;$/;"	m	union:nlohmann::basic_json::json_value	typeref:typename:string_t *
string	dependencies/nlohmann/json.hpp	/^    string,           \/\/\/< string value$/;"	e	enum:nlohmann::detail::value_t
string	dependencies/spriter/spriterengine/user_override/json.hpp	/^				string_t* string;$/;"	m	union:nlohmann::basic_json::json_value	typeref:typename:string_t *
string	dependencies/spriter/spriterengine/user_override/json.hpp	/^			string,           \/\/\/< string value$/;"	e	enum:nlohmann::detail::value_t
string_buffer	dependencies/nlohmann/json.hpp	/^    std::array<char, 512> string_buffer{{}};$/;"	m	class:nlohmann::detail::serializer	typeref:typename:std::array<char,512>
string_buffer	dependencies/spriter/spriterengine/user_override/json.hpp	/^			std::array<char, 512> string_buffer{ {} };$/;"	m	class:nlohmann::detail::serializer	typeref:typename:std::array<char,512>
string_t	dependencies/nlohmann/json.hpp	/^    using string_t = StringType;$/;"	t	class:nlohmann::basic_json	typeref:typename:StringType
string_t	dependencies/nlohmann/json.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType::string_t
string_t	dependencies/nlohmann/json.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:nlohmann::detail::lexer	typeref:typename:BasicJsonType::string_t
string_t	dependencies/nlohmann/json.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:nlohmann::detail::parser	typeref:typename:BasicJsonType::string_t
string_t	dependencies/nlohmann/json.hpp	/^    using string_t = typename BasicJsonType::string_t;$/;"	t	class:nlohmann::detail::serializer	typeref:typename:BasicJsonType::string_t
string_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using string_t = StringType;$/;"	t	class:nlohmann::basic_json	typeref:typename:StringType
string_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using string_t = typename BasicJsonType::string_t;$/;"	t	class:nlohmann::detail::binary_reader	typeref:typename:BasicJsonType::string_t
string_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using string_t = typename BasicJsonType::string_t;$/;"	t	class:nlohmann::detail::lexer	typeref:typename:BasicJsonType::string_t
string_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using string_t = typename BasicJsonType::string_t;$/;"	t	class:nlohmann::detail::parser	typeref:typename:BasicJsonType::string_t
string_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using string_t = typename BasicJsonType::string_t;$/;"	t	class:nlohmann::detail::serializer	typeref:typename:BasicJsonType::string_t
strtof	dependencies/nlohmann/json.hpp	/^    static void strtof(double& f, const char* str, char** endptr) noexcept$/;"	f	class:nlohmann::detail::lexer	typeref:typename:void
strtof	dependencies/nlohmann/json.hpp	/^    static void strtof(float& f, const char* str, char** endptr) noexcept$/;"	f	class:nlohmann::detail::lexer	typeref:typename:void
strtof	dependencies/nlohmann/json.hpp	/^    static void strtof(long double& f, const char* str, char** endptr) noexcept$/;"	f	class:nlohmann::detail::lexer	typeref:typename:void
strtof	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static void strtof(double& f, const char* str, char** endptr) noexcept {$/;"	f	class:nlohmann::detail::lexer	typeref:typename:void
strtof	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static void strtof(float& f, const char* str, char** endptr) noexcept {$/;"	f	class:nlohmann::detail::lexer	typeref:typename:void
strtof	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static void strtof(long double& f, const char* str, char** endptr) noexcept {$/;"	f	class:nlohmann::detail::lexer	typeref:typename:void
sub	dependencies/nlohmann/json.hpp	/^    static diyfp sub(const diyfp& x, const diyfp& y) noexcept$/;"	f	struct:nlohmann::detail::dtoa_impl::diyfp	typeref:typename:diyfp
sub	dependencies/spriter/spriterengine/user_override/json.hpp	/^				static diyfp sub(const diyfp& x, const diyfp& y) noexcept {$/;"	f	struct:nlohmann::detail::dtoa_impl::diyfp	typeref:typename:diyfp
subEntityIdMap	dependencies/spriter/spriterengine/entity/entity.h	/^		ObjectIdMap subEntityIdMap;$/;"	m	class:SpriterEngine::Entity	typeref:typename:ObjectIdMap
suppressErrorOutput	dependencies/spriter/spriterengine/global/settings.cpp	/^	void Settings::suppressErrorOutput(bool suppress)$/;"	f	class:SpriterEngine::Settings	typeref:typename:void
swap	dependencies/nlohmann/json.hpp	/^    void swap(array_t& other)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
swap	dependencies/nlohmann/json.hpp	/^    void swap(object_t& other)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
swap	dependencies/nlohmann/json.hpp	/^    void swap(reference other) noexcept ($/;"	f	class:nlohmann::basic_json	typeref:typename:void
swap	dependencies/nlohmann/json.hpp	/^    void swap(string_t& other)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
swap	dependencies/nlohmann/json.hpp	/^inline void swap(nlohmann::json& j1,$/;"	f	namespace:std	typeref:typename:void
swap	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void swap(array_t& other) {$/;"	f	class:nlohmann::basic_json	typeref:typename:void
swap	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void swap(object_t& other) {$/;"	f	class:nlohmann::basic_json	typeref:typename:void
swap	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void swap(reference other) noexcept ($/;"	f	class:nlohmann::basic_json	typeref:typename:void
swap	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void swap(string_t& other) {$/;"	f	class:nlohmann::basic_json	typeref:typename:void
swap	dependencies/spriter/spriterengine/user_override/json.hpp	/^	inline void swap(nlohmann::json& j1,$/;"	f	namespace:std	typeref:typename:void
system	dependencies/sfml/include/SFML/Window/Event.hpp	/^        bool          system;  \/\/\/< Is the System key pressed?$/;"	m	struct:sf::Event::KeyEvent	typeref:typename:bool
tagIsActive	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	bool EntityInstance::tagIsActive(const std::string &objectName, const std::string &tagToCheck) /;"	f	class:SpriterEngine::EntityInstance	typeref:typename:bool
tagIsActive	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	bool EntityInstance::tagIsActive(const std::string &tagToCheck) const$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:bool
tagIsActive	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	bool EntityInstance::tagIsActive(int objectId, const std::string &tagToCheck) const$/;"	f	class:SpriterEngine::EntityInstance	typeref:typename:bool
tagIsActive	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	bool EntityInstanceData::tagIsActive(const std::string &objectName, const std::string &tagToChe/;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:bool
tagIsActive	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	bool EntityInstanceData::tagIsActive(const std::string &tagToCheck) const$/;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:bool
tagIsActive	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	bool EntityInstanceData::tagIsActive(int objectId, const std::string &tagToCheck) const$/;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:bool
tagIsActive	dependencies/spriter/spriterengine/objectinfo/taglist.cpp	/^	bool TagList::tagIsActive(std::string tag) const$/;"	f	class:SpriterEngine::TagList	typeref:typename:bool
tagIsActive	dependencies/spriter/spriterengine/objectinfo/tagobjectinforeference.cpp	/^	bool TagObjectInfoReference::tagIsActive(const std::string &tagToCheck) const$/;"	f	class:SpriterEngine::TagObjectInfoReference	typeref:typename:bool
tagIsActive	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	bool UniversalObjectInterface::tagIsActive(const std::string &tagToCheck) const$/;"	f	class:SpriterEngine::UniversalObjectInterface	typeref:typename:bool
tagList	dependencies/spriter/spriterengine/objectinfo/tagobjectinfo.h	/^		TagList tagList;$/;"	m	class:SpriterEngine::TagObjectInfo	typeref:typename:TagList
tagList	dependencies/spriter/spriterengine/objectinfo/tagobjectinforeference.h	/^		const TagList *tagList;$/;"	m	class:SpriterEngine::TagObjectInfoReference	typeref:typename:const TagList *
tagObjectNameMap	dependencies/spriter/spriterengine/entity/entityinstancedata.h	/^		TagNameMap tagObjectNameMap;$/;"	m	class:SpriterEngine::EntityInstanceData	typeref:typename:TagNameMap
tagTimelines	dependencies/spriter/spriterengine/animation/animation.h	/^		TimelineVector tagTimelines;$/;"	m	class:SpriterEngine::Animation	typeref:typename:TimelineVector
tags	dependencies/spriter/spriterengine/entity/entityinstancedata.h	/^		TagIdMap tags;$/;"	m	class:SpriterEngine::EntityInstanceData	typeref:typename:TagIdMap
tags	dependencies/spriter/spriterengine/model/spritermodel.h	/^		StringVector tags;$/;"	m	class:SpriterEngine::SpriterModel	typeref:typename:StringVector
tags	dependencies/spriter/spriterengine/objectinfo/taglist.h	/^		StringRefVector tags;$/;"	m	class:SpriterEngine::TagList	typeref:typename:StringRefVector
test	dependencies/nlohmann/json.hpp	/^        enum class patch_operations {add, remove, replace, move, copy, test, invalid};$/;"	e	enum:nlohmann::basic_json::patch::patch_operations
test	dependencies/spriter/spriterengine/user_override/json.hpp	/^				enum class patch_operations { add, remove, replace, move, copy, test, invalid };$/;"	e	enum:nlohmann::basic_json::patch::patch_operations
texCoords	dependencies/sfml/include/SFML/Graphics/Vertex.hpp	/^    Vector2f  texCoords; \/\/\/< Coordinates of the texture's pixel to map to the vertex$/;"	m	class:sf::Vertex	typeref:typename:Vector2f
text	dependencies/sfml/include/SFML/Window/Event.hpp	/^        TextEvent             text;              \/\/\/< Text event parameters (Event::TextEnter/;"	m	union:sf::Event::__anon4b0d4c8f010a	typeref:typename:TextEvent
texture	dependencies/sfml/include/SFML/Graphics/Font.hpp	/^        Texture          texture; \/\/\/< Texture containing the pixels of the glyphs$/;"	m	struct:sf::Font::Page	typeref:typename:Texture
texture	dependencies/sfml/include/SFML/Graphics/RenderStates.hpp	/^    const Texture* texture;   \/\/\/< Texture$/;"	m	class:sf::RenderStates	typeref:typename:const Texture *
texture	dependencies/spriter/spriterengine/user_override/sfmlatlasfile.h	/^		sf::Texture texture;$/;"	m	class:SpriterEngine::SfmlAtlasFile	typeref:typename:sf::Texture
texture	dependencies/spriter/spriterengine/user_override/sfmlimagefile.h	/^		sf::Texture texture;$/;"	m	class:SpriterEngine::SfmlImageFile	typeref:typename:sf::Texture
textureRect	dependencies/sfml/include/SFML/Graphics/Glyph.hpp	/^    IntRect   textureRect; \/\/\/< Texture coordinates of the glyph inside the font's texture$/;"	m	class:sf::Glyph	typeref:typename:IntRect
thousands_sep	dependencies/nlohmann/json.hpp	/^    const char thousands_sep = '\\0';$/;"	m	class:nlohmann::detail::serializer	typeref:typename:const char
thousands_sep	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const char thousands_sep = '\\0';$/;"	m	class:nlohmann::detail::serializer	typeref:typename:const char
throw_exception	dependencies/nlohmann/json.hpp	/^    [[noreturn]] void throw_exception() const$/;"	f	class:nlohmann::detail::parser	typeref:typename:[[noreturn]]void
throw_exception	dependencies/spriter/spriterengine/user_override/json.hpp	/^			[[noreturn]] void throw_exception() const {$/;"	f	class:nlohmann::detail::parser	typeref:typename:[[noreturn]]void
time	dependencies/spriter/spriterengine/animation/animationinstance.h	/^		real time;$/;"	m	class:SpriterEngine::AnimationInstance	typeref:typename:real
time	dependencies/spriter/spriterengine/timeinfo/timeinfo.h	/^		real time;$/;"	m	class:SpriterEngine::TimeInfo	typeref:typename:real
time	dependencies/spriter/spriterengine/timeline/timelinekey.h	/^		TimeInfo *time;$/;"	m	class:SpriterEngine::TimelineKey	typeref:typename:TimeInfo *
timeInRange	dependencies/spriter/spriterengine/animation/mainlinekeyinstance.cpp	/^	bool MainlineKeyInstance::timeInRange(real timeToCheck)$/;"	f	class:SpriterEngine::MainlineKeyInstance	typeref:typename:bool
timeInRange	dependencies/spriter/spriterengine/timeinfo/timeinfo.cpp	/^	bool TimeInfo::timeInRange(real timeToCheck)$/;"	f	class:SpriterEngine::TimeInfo	typeref:typename:bool
timeInRange	dependencies/spriter/spriterengine/timeline/timelinekey.cpp	/^	bool TimelineKey::timeInRange(real timeToCheck)$/;"	f	class:SpriterEngine::TimelineKey	typeref:typename:bool
timeInfo	dependencies/spriter/spriterengine/animation/mainlinekey.h	/^		TimeInfo *timeInfo;$/;"	m	class:SpriterEngine::MainlineKey	typeref:typename:TimeInfo *
timeInfo	dependencies/spriter/spriterengine/animation/mainlinekeyinstance.h	/^		TimeInfo *timeInfo;$/;"	m	class:SpriterEngine::MainlineKeyInstance	typeref:typename:TimeInfo *
timeRatio	dependencies/spriter/spriterengine/objectinfo/entityobjectinfo.h	/^		real timeRatio;$/;"	m	class:SpriterEngine::EntityObjectInfo	typeref:typename:real
timelineKeyIterator	dependencies/spriter/spriterengine/timeline/timelineinstance.h	/^		TimelineKeyVectorIterator timelineKeyIterator;$/;"	m	class:SpriterEngine::TimelineInstance	typeref:typename:TimelineKeyVectorIterator
timelineKeys	dependencies/spriter/spriterengine/timeline/timelineinstance.h	/^		TimelineKeyVector *timelineKeys;$/;"	m	class:SpriterEngine::TimelineInstance	typeref:typename:TimelineKeyVector *
timelines	dependencies/spriter/spriterengine/animation/animationinstance.h	/^		TimelineInstanceVector timelines;$/;"	m	class:SpriterEngine::AnimationInstance	typeref:typename:TimelineInstanceVector
toAnsi	dependencies/sfml/include/SFML/System/Utf.inl	/^Out Utf<16>::toAnsi(In begin, In end, Out output, char replacement, const std::locale& locale)$/;"	f	class:Utf	typeref:typename:Out
toAnsi	dependencies/sfml/include/SFML/System/Utf.inl	/^Out Utf<32>::toAnsi(In begin, In end, Out output, char replacement, const std::locale& locale)$/;"	f	class:Utf	typeref:typename:Out
toAnsi	dependencies/sfml/include/SFML/System/Utf.inl	/^Out Utf<8>::toAnsi(In begin, In end, Out output, char replacement, const std::locale& locale)$/;"	f	class:Utf	typeref:typename:Out
toDegrees	dependencies/spriter/spriterengine/global/global.h	/^	inline real toDegrees(real angleInRadians)$/;"	f	namespace:SpriterEngine	typeref:typename:real
toLatin1	dependencies/sfml/include/SFML/System/Utf.inl	/^Out Utf<16>::toLatin1(In begin, In end, Out output, char replacement)$/;"	f	class:Utf	typeref:typename:Out
toLatin1	dependencies/sfml/include/SFML/System/Utf.inl	/^Out Utf<32>::toLatin1(In begin, In end, Out output, char replacement)$/;"	f	class:Utf	typeref:typename:Out
toLatin1	dependencies/sfml/include/SFML/System/Utf.inl	/^Out Utf<8>::toLatin1(In begin, In end, Out output, char replacement)$/;"	f	class:Utf	typeref:typename:Out
toRadians	dependencies/spriter/spriterengine/global/global.h	/^	inline real toRadians(real angleInDegrees)$/;"	f	namespace:SpriterEngine	typeref:typename:real
toUtf16	dependencies/sfml/include/SFML/System/Utf.inl	/^Out Utf<16>::toUtf16(In begin, In end, Out output)$/;"	f	class:Utf	typeref:typename:Out
toUtf16	dependencies/sfml/include/SFML/System/Utf.inl	/^Out Utf<32>::toUtf16(In begin, In end, Out output)$/;"	f	class:Utf	typeref:typename:Out
toUtf16	dependencies/sfml/include/SFML/System/Utf.inl	/^Out Utf<8>::toUtf16(In begin, In end, Out output)$/;"	f	class:Utf	typeref:typename:Out
toUtf32	dependencies/sfml/include/SFML/System/Utf.inl	/^Out Utf<16>::toUtf32(In begin, In end, Out output)$/;"	f	class:Utf	typeref:typename:Out
toUtf32	dependencies/sfml/include/SFML/System/Utf.inl	/^Out Utf<32>::toUtf32(In begin, In end, Out output)$/;"	f	class:Utf	typeref:typename:Out
toUtf32	dependencies/sfml/include/SFML/System/Utf.inl	/^Out Utf<8>::toUtf32(In begin, In end, Out output)$/;"	f	class:Utf	typeref:typename:Out
toUtf8	dependencies/sfml/include/SFML/System/Utf.inl	/^Out Utf<16>::toUtf8(In begin, In end, Out output)$/;"	f	class:Utf	typeref:typename:Out
toUtf8	dependencies/sfml/include/SFML/System/Utf.inl	/^Out Utf<32>::toUtf8(In begin, In end, Out output)$/;"	f	class:Utf	typeref:typename:Out
toUtf8	dependencies/sfml/include/SFML/System/Utf.inl	/^Out Utf<8>::toUtf8(In begin, In end, Out output)$/;"	f	class:Utf	typeref:typename:Out
toWide	dependencies/sfml/include/SFML/System/Utf.inl	/^Out Utf<16>::toWide(In begin, In end, Out output, wchar_t replacement)$/;"	f	class:Utf	typeref:typename:Out
toWide	dependencies/sfml/include/SFML/System/Utf.inl	/^Out Utf<32>::toWide(In begin, In end, Out output, wchar_t replacement)$/;"	f	class:Utf	typeref:typename:Out
toWide	dependencies/sfml/include/SFML/System/Utf.inl	/^Out Utf<8>::toWide(In begin, In end, Out output, wchar_t replacement)$/;"	f	class:Utf	typeref:typename:Out
to_cbor	dependencies/nlohmann/json.hpp	/^    static std::vector<uint8_t> to_cbor(const basic_json& j)$/;"	f	class:nlohmann::basic_json	typeref:typename:std::vector<uint8_t>
to_cbor	dependencies/nlohmann/json.hpp	/^    static void to_cbor(const basic_json& j, detail::output_adapter<char> o)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
to_cbor	dependencies/nlohmann/json.hpp	/^    static void to_cbor(const basic_json& j, detail::output_adapter<uint8_t> o)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
to_cbor	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static std::vector<uint8_t> to_cbor(const basic_json& j) {$/;"	f	class:nlohmann::basic_json	typeref:typename:std::vector<uint8_t>
to_cbor	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static void to_cbor(const basic_json& j, detail::output_adapter<char> o) {$/;"	f	class:nlohmann::basic_json	typeref:typename:void
to_cbor	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static void to_cbor(const basic_json& j, detail::output_adapter<uint8_t> o) {$/;"	f	class:nlohmann::basic_json	typeref:typename:void
to_chars	dependencies/nlohmann/json.hpp	/^char* to_chars(char* first, char* last, FloatType value)$/;"	f	namespace:nlohmann::detail	typeref:typename:char *
to_chars	dependencies/spriter/spriterengine/user_override/json.hpp	/^		char* to_chars(char* first, char* last, FloatType value) {$/;"	f	namespace:nlohmann::detail	typeref:typename:char *
to_json	dependencies/nlohmann/json.hpp	/^    static void to_json(BasicJsonType& j, ValueType&& val) noexcept($/;"	f	struct:nlohmann::adl_serializer	typeref:typename:void
to_json	dependencies/nlohmann/json.hpp	/^constexpr const auto& to_json = detail::static_const<detail::to_json_fn>::value;$/;"	v	namespace:nlohmann::__anon347436d50610	typeref:typename:const auto &
to_json	dependencies/nlohmann/json.hpp	/^void to_json(BasicJsonType& j, CompatibleNumberIntegerType val) noexcept$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	dependencies/nlohmann/json.hpp	/^void to_json(BasicJsonType& j, CompatibleNumberUnsignedType val) noexcept$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	dependencies/nlohmann/json.hpp	/^void to_json(BasicJsonType& j, EnumType e) noexcept$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	dependencies/nlohmann/json.hpp	/^void to_json(BasicJsonType& j, FloatType val) noexcept$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	dependencies/nlohmann/json.hpp	/^void to_json(BasicJsonType& j, T (&arr)[N])$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	dependencies/nlohmann/json.hpp	/^void to_json(BasicJsonType& j, T b) noexcept$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	dependencies/nlohmann/json.hpp	/^void to_json(BasicJsonType& j, const CompatibleArrayType& arr)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	dependencies/nlohmann/json.hpp	/^void to_json(BasicJsonType& j, const CompatibleObjectType& obj)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	dependencies/nlohmann/json.hpp	/^void to_json(BasicJsonType& j, const CompatibleString& s)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	dependencies/nlohmann/json.hpp	/^void to_json(BasicJsonType& j, const std::pair<Args...>& p)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	dependencies/nlohmann/json.hpp	/^void to_json(BasicJsonType& j, const std::tuple<Args...>& t)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	dependencies/nlohmann/json.hpp	/^void to_json(BasicJsonType& j, const std::vector<bool>& e)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	dependencies/nlohmann/json.hpp	/^void to_json(BasicJsonType& j, std::valarray<T> arr)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	dependencies/nlohmann/json.hpp	/^void to_json(BasicJsonType& j, typename BasicJsonType::array_t&& arr)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	dependencies/nlohmann/json.hpp	/^void to_json(BasicJsonType& j, typename BasicJsonType::object_t&& obj)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	dependencies/nlohmann/json.hpp	/^void to_json(BasicJsonType& j, typename BasicJsonType::string_t&& s)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void to_json(BasicJsonType& j, CompatibleNumberIntegerType val) noexcept {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void to_json(BasicJsonType& j, CompatibleNumberUnsignedType val) noexcept {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void to_json(BasicJsonType& j, EnumType e) noexcept {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void to_json(BasicJsonType& j, FloatType val) noexcept {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void to_json(BasicJsonType& j, T b) noexcept {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void to_json(BasicJsonType& j, T(&arr)[N]) {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void to_json(BasicJsonType& j, const CompatibleArrayType& arr) {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void to_json(BasicJsonType& j, const CompatibleObjectType& obj) {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void to_json(BasicJsonType& j, const CompatibleString& s) {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void to_json(BasicJsonType& j, std::valarray<T> arr) {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^		constexpr const auto& to_json = detail::static_const<detail::to_json_fn>::value;$/;"	v	namespace:nlohmann::__anon6d16d0be0610	typeref:typename:const auto &
to_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^		static void to_json(BasicJsonType& j, ValueType&& val) noexcept($/;"	f	struct:nlohmann::adl_serializer	typeref:typename:void
to_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^		void to_json(BasicJsonType& j, const std::pair<Args...>& p) {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^		void to_json(BasicJsonType& j, const std::tuple<Args...>& t) {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^		void to_json(BasicJsonType& j, const std::vector<bool>& e) {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^		void to_json(BasicJsonType& j, typename BasicJsonType::array_t&& arr) {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^		void to_json(BasicJsonType& j, typename BasicJsonType::object_t&& obj) {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^		void to_json(BasicJsonType& j, typename BasicJsonType::string_t&& s) {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json_fn	dependencies/nlohmann/json.hpp	/^struct to_json_fn$/;"	s	namespace:nlohmann::detail
to_json_fn	dependencies/spriter/spriterengine/user_override/json.hpp	/^		struct to_json_fn {$/;"	s	namespace:nlohmann::detail
to_json_tuple_impl	dependencies/nlohmann/json.hpp	/^void to_json_tuple_impl(BasicJsonType& j, const Tuple& t, index_sequence<Idx...>)$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_json_tuple_impl	dependencies/spriter/spriterengine/user_override/json.hpp	/^		void to_json_tuple_impl(BasicJsonType& j, const Tuple& t, index_sequence<Idx...>) {$/;"	f	namespace:nlohmann::detail	typeref:typename:void
to_msgpack	dependencies/nlohmann/json.hpp	/^    static std::vector<uint8_t> to_msgpack(const basic_json& j)$/;"	f	class:nlohmann::basic_json	typeref:typename:std::vector<uint8_t>
to_msgpack	dependencies/nlohmann/json.hpp	/^    static void to_msgpack(const basic_json& j, detail::output_adapter<char> o)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
to_msgpack	dependencies/nlohmann/json.hpp	/^    static void to_msgpack(const basic_json& j, detail::output_adapter<uint8_t> o)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
to_msgpack	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static std::vector<uint8_t> to_msgpack(const basic_json& j) {$/;"	f	class:nlohmann::basic_json	typeref:typename:std::vector<uint8_t>
to_msgpack	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static void to_msgpack(const basic_json& j, detail::output_adapter<char> o) {$/;"	f	class:nlohmann::basic_json	typeref:typename:void
to_msgpack	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static void to_msgpack(const basic_json& j, detail::output_adapter<uint8_t> o) {$/;"	f	class:nlohmann::basic_json	typeref:typename:void
to_string	dependencies/nlohmann/json.hpp	/^    std::string to_string() const noexcept$/;"	f	class:nlohmann::json_pointer	typeref:typename:std::string
to_string	dependencies/spriter/spriterengine/global/global.h	/^	inline std::string to_string(T value)$/;"	f	namespace:std	typeref:typename:std::string
to_string	dependencies/spriter/spriterengine/user_override/json.hpp	/^		std::string to_string() const noexcept {$/;"	f	class:nlohmann::json_pointer	typeref:typename:std::string
to_ubjson	dependencies/nlohmann/json.hpp	/^    static std::vector<uint8_t> to_ubjson(const basic_json& j,$/;"	f	class:nlohmann::basic_json	typeref:typename:std::vector<uint8_t>
to_ubjson	dependencies/nlohmann/json.hpp	/^    static void to_ubjson(const basic_json& j, detail::output_adapter<char> o,$/;"	f	class:nlohmann::basic_json	typeref:typename:void
to_ubjson	dependencies/nlohmann/json.hpp	/^    static void to_ubjson(const basic_json& j, detail::output_adapter<uint8_t> o,$/;"	f	class:nlohmann::basic_json	typeref:typename:void
to_ubjson	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static std::vector<uint8_t> to_ubjson(const basic_json& j,$/;"	f	class:nlohmann::basic_json	typeref:typename:std::vector<uint8_t>
to_ubjson	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static void to_ubjson(const basic_json& j, detail::output_adapter<char> o,$/;"	f	class:nlohmann::basic_json	typeref:typename:void
to_ubjson	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static void to_ubjson(const basic_json& j, detail::output_adapter<uint8_t> o,$/;"	f	class:nlohmann::basic_json	typeref:typename:void
token_buffer	dependencies/nlohmann/json.hpp	/^    string_t token_buffer {};$/;"	m	class:nlohmann::detail::lexer	typeref:typename:string_t
token_buffer	dependencies/spriter/spriterengine/user_override/json.hpp	/^			string_t token_buffer{};$/;"	m	class:nlohmann::detail::lexer	typeref:typename:string_t
token_string	dependencies/nlohmann/json.hpp	/^    std::vector<char> token_string {};$/;"	m	class:nlohmann::detail::lexer	typeref:typename:std::vector<char>
token_string	dependencies/spriter/spriterengine/user_override/json.hpp	/^			std::vector<char> token_string{};$/;"	m	class:nlohmann::detail::lexer	typeref:typename:std::vector<char>
token_type	dependencies/nlohmann/json.hpp	/^    enum class token_type$/;"	g	class:nlohmann::detail::lexer
token_type	dependencies/nlohmann/json.hpp	/^    using token_type = typename lexer_t::token_type;$/;"	t	class:nlohmann::detail::parser	typeref:typename:lexer_t::token_type
token_type	dependencies/spriter/spriterengine/user_override/json.hpp	/^			enum class token_type {$/;"	g	class:nlohmann::detail::lexer
token_type	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using token_type = typename lexer_t::token_type;$/;"	t	class:nlohmann::detail::parser	typeref:typename:lexer_t::token_type
token_type_name	dependencies/nlohmann/json.hpp	/^    static const char* token_type_name(const token_type t) noexcept$/;"	f	class:nlohmann::detail::lexer	typeref:typename:const char *
token_type_name	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static const char* token_type_name(const token_type t) noexcept {$/;"	f	class:nlohmann::detail::lexer	typeref:typename:const char *
top	dependencies/nlohmann/json.hpp	/^    json_pointer top() const$/;"	f	class:nlohmann::json_pointer	typeref:typename:json_pointer
top	dependencies/sfml/include/SFML/Graphics/Font.hpp	/^        unsigned int top;    \/\/\/< Y position of the row into the texture$/;"	m	struct:sf::Font::Row	typeref:typename:unsigned int
top	dependencies/sfml/include/SFML/Graphics/Rect.hpp	/^    T top;    \/\/\/< Top coordinate of the rectangle$/;"	m	class:sf::Rect	typeref:typename:T
top	dependencies/spriter/spriterengine/user_override/json.hpp	/^		json_pointer top() const {$/;"	f	class:nlohmann::json_pointer	typeref:typename:json_pointer
touch	dependencies/sfml/include/SFML/Window/Event.hpp	/^        TouchEvent            touch;             \/\/\/< Touch events parameters (Event::TouchBe/;"	m	union:sf::Event::__anon4b0d4c8f010a	typeref:typename:TouchEvent
transform	dependencies/sfml/include/SFML/Graphics/RenderStates.hpp	/^    Transform      transform; \/\/\/< Transform$/;"	m	class:sf::RenderStates	typeref:typename:Transform
transformChildObject	dependencies/spriter/spriterengine/objectref/transformprocessor.cpp	/^	void TransformProcessor::transformChildObject(UniversalObjectInterface *childObject) const$/;"	f	class:SpriterEngine::TransformProcessor	typeref:typename:void
transformProcessor	dependencies/spriter/spriterengine/entity/entityinstancedata.h	/^		TransformProcessor *transformProcessor;$/;"	m	class:SpriterEngine::EntityInstanceData	typeref:typename:TransformProcessor *
transformProcessor	dependencies/spriter/spriterengine/objectref/bonerefinstance.h	/^		TransformProcessor *transformProcessor;$/;"	m	class:SpriterEngine::BoneRefInstance	typeref:typename:TransformProcessor *
transformers	dependencies/spriter/spriterengine/entity/entityinstancedata.h	/^		TransformProcessorMap transformers;$/;"	m	class:SpriterEngine::EntityInstanceData	typeref:typename:TransformProcessorMap
trigger	dependencies/spriter/spriterengine/objectinfo/soundobjectinfo.h	/^		bool trigger;$/;"	m	class:SpriterEngine::SoundObjectInfo	typeref:typename:bool
triggerCount	dependencies/spriter/spriterengine/objectinfo/triggerobjectinfo.h	/^		int triggerCount;$/;"	m	class:SpriterEngine::TriggerObjectInfo	typeref:typename:int
triggerCount	dependencies/spriter/spriterengine/override/soundobjectinforeference.h	/^		int triggerCount;$/;"	m	class:SpriterEngine::SoundObjectInfoReference	typeref:typename:int
triggerCount	dependencies/spriter/spriterengine/timeline/triggertimelineinstance.h	/^		int triggerCount;$/;"	m	class:SpriterEngine::TriggerTimelineInstance	typeref:typename:int
triggerIdMap	dependencies/spriter/spriterengine/entity/entity.h	/^		ObjectIdMap triggerIdMap;$/;"	m	class:SpriterEngine::Entity	typeref:typename:ObjectIdMap
triggerNameMap	dependencies/spriter/spriterengine/entity/entityinstancedata.h	/^		TriggerNameMap triggerNameMap;$/;"	m	class:SpriterEngine::EntityInstanceData	typeref:typename:TriggerNameMap
triggerTimelines	dependencies/spriter/spriterengine/animation/animation.h	/^		TimelineVector triggerTimelines;$/;"	m	class:SpriterEngine::Animation	typeref:typename:TimelineVector
triggers	dependencies/spriter/spriterengine/entity/entityinstancedata.h	/^		TriggerIdMap triggers;$/;"	m	class:SpriterEngine::EntityInstanceData	typeref:typename:TriggerIdMap
trimmed	dependencies/spriter/spriterengine/global/atlas.h	/^                bool trimmed;$/;"	m	struct:SpriterEngine::atlasframedata	typeref:typename:bool
type	dependencies/nlohmann/json.hpp	/^    constexpr value_t type() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:value_t
type	dependencies/nlohmann/json.hpp	/^    using type = index_sequence;$/;"	t	struct:nlohmann::detail::index_sequence	typeref:typename:index_sequence
type	dependencies/sfml/include/SFML/Window/Event.hpp	/^        Sensor::Type type; \/\/\/< Type of the sensor$/;"	m	struct:sf::Event::SensorEvent	typeref:typename:Sensor::Type
type	dependencies/sfml/include/SFML/Window/Event.hpp	/^    EventType type; \/\/\/< Type of the event$/;"	m	class:sf::Event	typeref:typename:EventType
type	dependencies/spriter/spriterengine/user_override/json.hpp	/^			constexpr value_t type() const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:value_t
type	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using type = index_sequence;$/;"	t	struct:nlohmann::detail::index_sequence	typeref:typename:index_sequence
type_error	dependencies/nlohmann/json.hpp	/^    type_error(int id_, const char* what_arg) : exception(id_, what_arg) {}$/;"	f	class:nlohmann::detail::type_error
type_error	dependencies/nlohmann/json.hpp	/^    using type_error = detail::type_error;$/;"	t	class:nlohmann::basic_json	typeref:typename:detail::type_error
type_error	dependencies/nlohmann/json.hpp	/^class type_error : public exception$/;"	c	namespace:nlohmann::detail
type_error	dependencies/spriter/spriterengine/user_override/json.hpp	/^			type_error(int id_, const char* what_arg) : exception(id_, what_arg) {}$/;"	f	class:nlohmann::detail::type_error
type_error	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using type_error = detail::type_error;$/;"	t	class:nlohmann::basic_json	typeref:typename:detail::type_error
type_error	dependencies/spriter/spriterengine/user_override/json.hpp	/^		class type_error : public exception {$/;"	c	namespace:nlohmann::detail
type_name	dependencies/nlohmann/json.hpp	/^    const char* type_name() const noexcept$/;"	f	class:nlohmann::basic_json	typeref:typename:const char *
type_name	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const char* type_name() const noexcept {$/;"	f	class:nlohmann::basic_json	typeref:typename:const char *
ubjson_prefix	dependencies/nlohmann/json.hpp	/^    CharType ubjson_prefix(const BasicJsonType& j) const noexcept$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:CharType
ubjson_prefix	dependencies/spriter/spriterengine/user_override/json.hpp	/^			CharType ubjson_prefix(const BasicJsonType& j) const noexcept {$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:CharType
uncvref_t	dependencies/nlohmann/json.hpp	/^using uncvref_t = typename std::remove_cv<typename std::remove_reference<T>::type>::type;$/;"	t	namespace:nlohmann::detail	typeref:typename:std::remove_cv<typename std::remove_reference<T>::type>::type
uncvref_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^		using uncvref_t = typename std::remove_cv<typename std::remove_reference<T>::type>::type;$/;"	t	namespace:nlohmann::detail	typeref:typename:std::remove_cv<typename std::remove_reference<T>::type>::type
underlying_type	dependencies/nlohmann/json.hpp	/^    using underlying_type = typename std::underlying_type<EnumType>::type;$/;"	t	function:nlohmann::detail::to_json	typeref:typename:std::underlying_type<EnumType>::type
underlying_type	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using underlying_type = typename std::underlying_type<EnumType>::type;$/;"	t	function:nlohmann::detail::to_json	typeref:typename:std::underlying_type<EnumType>::type
unescape	dependencies/nlohmann/json.hpp	/^    static void unescape(std::string& s)$/;"	f	class:nlohmann::json_pointer	typeref:typename:void
unescape	dependencies/spriter/spriterengine/user_override/json.hpp	/^		static void unescape(std::string& s) {$/;"	f	class:nlohmann::json_pointer	typeref:typename:void
unexpect_eof	dependencies/nlohmann/json.hpp	/^    void unexpect_eof() const$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:void
unexpect_eof	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void unexpect_eof() const {$/;"	f	class:nlohmann::detail::binary_reader	typeref:typename:void
unflatten	dependencies/nlohmann/json.hpp	/^    basic_json unflatten() const$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
unflatten	dependencies/nlohmann/json.hpp	/^    unflatten(const BasicJsonType& value)$/;"	f	class:nlohmann::json_pointer	typeref:typename:BasicJsonType
unflatten	dependencies/spriter/spriterengine/user_override/json.hpp	/^			basic_json unflatten() const {$/;"	f	class:nlohmann::basic_json	typeref:typename:basic_json
unflatten	dependencies/spriter/spriterengine/user_override/json.hpp	/^			unflatten(const BasicJsonType& value) {$/;"	f	class:nlohmann::json_pointer	typeref:typename:BasicJsonType
unget	dependencies/nlohmann/json.hpp	/^    void unget()$/;"	f	class:nlohmann::detail::lexer	typeref:typename:void
unget	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void unget() {$/;"	f	class:nlohmann::detail::lexer	typeref:typename:void
unget_character	dependencies/nlohmann/json.hpp	/^    void unget_character() noexcept override$/;"	f	class:nlohmann::detail::input_buffer_adapter	typeref:typename:void
unget_character	dependencies/nlohmann/json.hpp	/^    void unget_character() override$/;"	f	class:nlohmann::detail::input_stream_adapter	typeref:typename:void
unget_character	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void unget_character() noexcept override {$/;"	f	class:nlohmann::detail::input_buffer_adapter	typeref:typename:void
unget_character	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void unget_character() override {$/;"	f	class:nlohmann::detail::input_stream_adapter	typeref:typename:void
unicode	dependencies/sfml/include/SFML/Window/Event.hpp	/^        Uint32 unicode; \/\/\/< UTF-32 Unicode value of the character$/;"	m	struct:sf::Event::TextEvent	typeref:typename:Uint32
uninitialized	dependencies/nlohmann/json.hpp	/^        uninitialized,    \/\/\/< indicating the scanner is uninitialized$/;"	e	enum:nlohmann::detail::lexer::token_type
uninitialized	dependencies/spriter/spriterengine/user_override/json.hpp	/^				uninitialized,    \/\/\/< indicating the scanner is uninitialized$/;"	e	enum:nlohmann::detail::lexer::token_type
unregisterReader	dependencies/sfml/include/SFML/Audio/SoundFileFactory.inl	/^void SoundFileFactory::unregisterReader()$/;"	f	class:sf::SoundFileFactory	typeref:typename:void
unregisterWriter	dependencies/sfml/include/SFML/Audio/SoundFileFactory.inl	/^void SoundFileFactory::unregisterWriter()$/;"	f	class:sf::SoundFileFactory	typeref:typename:void
update	dependencies/nlohmann/json.hpp	/^    void update(const_iterator first, const_iterator last)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
update	dependencies/nlohmann/json.hpp	/^    void update(const_reference j)$/;"	f	class:nlohmann::basic_json	typeref:typename:void
update	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void update(const_iterator first, const_iterator last) {$/;"	f	class:nlohmann::basic_json	typeref:typename:void
update	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void update(const_reference j) {$/;"	f	class:nlohmann::basic_json	typeref:typename:void
update	src/GameOverScene.cpp	/^void GameOverScene::update(float dt) {$/;"	f	class:GameOverScene	typeref:typename:void
update	src/GameScene.cpp	/^void GameScene::update(float dt) {$/;"	f	class:GameScene	typeref:typename:void
update	src/MenuScene.cpp	/^void MenuScene::update(float dt) {$/;"	f	class:MenuScene	typeref:typename:void
update	src/SceneManager.cpp	/^void SceneManager::update() {$/;"	f	class:SceneManager	typeref:typename:void
updateTransformProcessor	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	void EntityInstanceData::updateTransformProcessor()$/;"	f	class:SpriterEngine::EntityInstanceData	typeref:typename:void
useDefaultPivot	dependencies/spriter/spriterengine/loading/loadinghelpers.h	/^		bool useDefaultPivot;$/;"	m	struct:SpriterEngine::SpriteKeyFileInfo	typeref:typename:bool
useDefaultPivot	dependencies/spriter/spriterengine/objectref/spriteref.h	/^		bool useDefaultPivot;$/;"	m	class:SpriterEngine::SpriteRef	typeref:typename:bool
useDefaultPivot	dependencies/spriter/spriterengine/objectref/spriterefinstance.h	/^		bool useDefaultPivot;$/;"	m	class:SpriterEngine::SpriteRefInstance	typeref:typename:bool
useVertexCache	dependencies/sfml/include/SFML/Graphics/RenderTarget.hpp	/^        bool      useVertexCache; \/\/\/< Did we previously use the vertex cache?$/;"	m	struct:sf::RenderTarget::StatesCache	typeref:typename:bool
v	dependencies/nlohmann/json.hpp	/^    std::vector<CharType>& v;$/;"	m	class:nlohmann::detail::output_vector_adapter	typeref:typename:std::vector<CharType> &
v	dependencies/spriter/spriterengine/user_override/json.hpp	/^			std::vector<CharType>& v;$/;"	m	class:nlohmann::detail::output_vector_adapter	typeref:typename:std::vector<CharType> &
value	dependencies/nlohmann/json.hpp	/^        typename IteratorType::reference value() const$/;"	f	class:nlohmann::detail::iteration_proxy::iteration_proxy_internal	typeref:typename:IteratorType::reference
value	dependencies/nlohmann/json.hpp	/^        value$/;"	e	enum:nlohmann::detail::parser::parse_event_t
value	dependencies/nlohmann/json.hpp	/^    ValueType value(const json_pointer& ptr, const ValueType& default_value) const$/;"	f	class:nlohmann::basic_json	typeref:typename:ValueType
value	dependencies/nlohmann/json.hpp	/^    ValueType value(const typename object_t::key_type& key, const ValueType& default_value) cons/;"	f	class:nlohmann::basic_json	typeref:typename:ValueType
value	dependencies/nlohmann/json.hpp	/^    reference value() const$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:reference
value	dependencies/nlohmann/json.hpp	/^    reference value() const$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:reference
value	dependencies/nlohmann/json.hpp	/^    static auto constexpr value = is_compatible_object_type_impl <$/;"	m	struct:nlohmann::detail::is_compatible_object_type	typeref:typename:auto 
value	dependencies/nlohmann/json.hpp	/^    static auto constexpr value = std::is_same<T, typename BasicJsonType::iterator>::value or$/;"	m	struct:nlohmann::detail::is_basic_json_nested_type	typeref:typename:auto 
value	dependencies/nlohmann/json.hpp	/^    static auto constexpr value =$/;"	m	struct:nlohmann::detail::is_compatible_array_type	typeref:typename:auto 
value	dependencies/nlohmann/json.hpp	/^    static constexpr T value{};$/;"	m	struct:nlohmann::detail::static_const	typeref:typename:T
value	dependencies/nlohmann/json.hpp	/^    static constexpr auto value =$/;"	m	struct:nlohmann::detail::is_compatible_integer_type	typeref:typename:auto
value	dependencies/nlohmann/json.hpp	/^    static constexpr auto value =$/;"	m	struct:nlohmann::detail::is_compatible_integer_type_impl	typeref:typename:auto
value	dependencies/nlohmann/json.hpp	/^    static constexpr auto value =$/;"	m	struct:nlohmann::detail::is_compatible_object_type_impl	typeref:typename:auto
value	dependencies/nlohmann/json.hpp	/^    static constexpr bool value = std::is_integral<decltype($/;"	m	struct:nlohmann::detail::has_from_json	typeref:typename:bool
value	dependencies/nlohmann/json.hpp	/^    static constexpr bool value = std::is_integral<decltype(detect($/;"	m	struct:nlohmann::detail::has_non_default_from_json	typeref:typename:bool
value	dependencies/nlohmann/json.hpp	/^    static constexpr bool value = std::is_integral<decltype(detect($/;"	m	struct:nlohmann::detail::has_to_json	typeref:typename:bool
value	dependencies/nlohmann/json.hpp	/^    static constexpr bool value =$/;"	m	struct:nlohmann::detail::is_compatible_complete_type	typeref:typename:bool
value	dependencies/nlohmann/json.hpp	/^    string_t value(const json_pointer& ptr, const char* default_value) const$/;"	f	class:nlohmann::basic_json	typeref:typename:string_t
value	dependencies/nlohmann/json.hpp	/^    string_t value(const typename object_t::key_type& key, const char* default_value) const$/;"	f	class:nlohmann::basic_json	typeref:typename:string_t
value	dependencies/nlohmann/json.hpp	/^constexpr T static_const<T>::value;$/;"	m	class:nlohmann::detail::static_const<T>	typeref:typename:T
value	dependencies/spriter/spriterengine/objectinfo/intvariableinfo.h	/^		int value;$/;"	m	class:SpriterEngine::IntVariableInfo	typeref:typename:int
value	dependencies/spriter/spriterengine/objectinfo/realvariableinfo.h	/^		real value;$/;"	m	class:SpriterEngine::RealVariableInfo	typeref:typename:real
value	dependencies/spriter/spriterengine/objectinfo/stringvariableinfo.h	/^		std::string value;$/;"	m	class:SpriterEngine::StringVariableInfo	typeref:typename:std::string
value	dependencies/spriter/spriterengine/objectinfo/stringvariableinforeference.h	/^		std::string *value;$/;"	m	class:SpriterEngine::StringVariableInfoReference	typeref:typename:std::string *
value	dependencies/spriter/spriterengine/user_override/json.hpp	/^				ValueType value(const json_pointer& ptr, const ValueType& default_value) const {$/;"	f	class:nlohmann::basic_json	typeref:typename:ValueType
value	dependencies/spriter/spriterengine/user_override/json.hpp	/^				ValueType value(const typename object_t::key_type& key, const ValueType& default_value) cons/;"	f	class:nlohmann::basic_json	typeref:typename:ValueType
value	dependencies/spriter/spriterengine/user_override/json.hpp	/^				typename IteratorType::reference value() const {$/;"	f	class:nlohmann::detail::iteration_proxy::iteration_proxy_internal	typeref:typename:IteratorType::reference
value	dependencies/spriter/spriterengine/user_override/json.hpp	/^				value$/;"	e	enum:nlohmann::detail::parser::parse_event_t
value	dependencies/spriter/spriterengine/user_override/json.hpp	/^			reference value() const {$/;"	f	class:nlohmann::detail::iter_impl	typeref:typename:reference
value	dependencies/spriter/spriterengine/user_override/json.hpp	/^			reference value() const {$/;"	f	class:nlohmann::detail::json_reverse_iterator	typeref:typename:reference
value	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static auto constexpr value = is_compatible_object_type_impl <$/;"	m	struct:nlohmann::detail::is_compatible_object_type	typeref:typename:auto 
value	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static auto constexpr value = std::is_same<T, typename BasicJsonType::iterator>::value or$/;"	m	struct:nlohmann::detail::is_basic_json_nested_type	typeref:typename:auto 
value	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static auto constexpr value =$/;"	m	struct:nlohmann::detail::is_compatible_array_type	typeref:typename:auto 
value	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static constexpr T value{};$/;"	m	struct:nlohmann::detail::static_const	typeref:typename:T
value	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static constexpr auto value =$/;"	m	struct:nlohmann::detail::is_compatible_integer_type	typeref:typename:auto
value	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static constexpr auto value =$/;"	m	struct:nlohmann::detail::is_compatible_integer_type_impl	typeref:typename:auto
value	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static constexpr auto value =$/;"	m	struct:nlohmann::detail::is_compatible_object_type_impl	typeref:typename:auto
value	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static constexpr bool value = std::is_integral<decltype($/;"	m	struct:nlohmann::detail::has_from_json	typeref:typename:bool
value	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static constexpr bool value = std::is_integral<decltype(detect($/;"	m	struct:nlohmann::detail::has_non_default_from_json	typeref:typename:bool
value	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static constexpr bool value = std::is_integral<decltype(detect($/;"	m	struct:nlohmann::detail::has_to_json	typeref:typename:bool
value	dependencies/spriter/spriterengine/user_override/json.hpp	/^			static constexpr bool value =$/;"	m	struct:nlohmann::detail::is_compatible_complete_type	typeref:typename:bool
value	dependencies/spriter/spriterengine/user_override/json.hpp	/^			string_t value(const json_pointer& ptr, const char* default_value) const {$/;"	f	class:nlohmann::basic_json	typeref:typename:string_t
value	dependencies/spriter/spriterengine/user_override/json.hpp	/^			string_t value(const typename object_t::key_type& key, const char* default_value) const {$/;"	f	class:nlohmann::basic_json	typeref:typename:string_t
value	dependencies/spriter/spriterengine/user_override/json.hpp	/^		constexpr T static_const<T>::value;$/;"	m	class:nlohmann::detail::static_const<T>	typeref:typename:T
value_float	dependencies/nlohmann/json.hpp	/^        value_float,      \/\/\/< an floating point number -- use get_number_float() for actual /;"	e	enum:nlohmann::detail::lexer::token_type
value_float	dependencies/nlohmann/json.hpp	/^    number_float_t value_float = 0;$/;"	m	class:nlohmann::detail::lexer	typeref:typename:number_float_t
value_float	dependencies/spriter/spriterengine/user_override/json.hpp	/^				value_float,      \/\/\/< an floating point number -- use get_number_float() for actual valu/;"	e	enum:nlohmann::detail::lexer::token_type
value_float	dependencies/spriter/spriterengine/user_override/json.hpp	/^			number_float_t value_float = 0;$/;"	m	class:nlohmann::detail::lexer	typeref:typename:number_float_t
value_integer	dependencies/nlohmann/json.hpp	/^        value_integer,    \/\/\/< a signed integer -- use get_number_integer() for actual value$/;"	e	enum:nlohmann::detail::lexer::token_type
value_integer	dependencies/nlohmann/json.hpp	/^    number_integer_t value_integer = 0;$/;"	m	class:nlohmann::detail::lexer	typeref:typename:number_integer_t
value_integer	dependencies/spriter/spriterengine/user_override/json.hpp	/^				value_integer,    \/\/\/< a signed integer -- use get_number_integer() for actual value$/;"	e	enum:nlohmann::detail::lexer::token_type
value_integer	dependencies/spriter/spriterengine/user_override/json.hpp	/^			number_integer_t value_integer = 0;$/;"	m	class:nlohmann::detail::lexer	typeref:typename:number_integer_t
value_ref	dependencies/nlohmann/json.hpp	/^    value_type* value_ref = nullptr;$/;"	m	class:nlohmann::detail::json_ref	typeref:typename:value_type *
value_ref	dependencies/spriter/spriterengine/user_override/json.hpp	/^			value_type* value_ref = nullptr;$/;"	m	class:nlohmann::detail::json_ref	typeref:typename:value_type *
value_separator	dependencies/nlohmann/json.hpp	/^        value_separator,  \/\/\/< the value separator `,`$/;"	e	enum:nlohmann::detail::lexer::token_type
value_separator	dependencies/spriter/spriterengine/user_override/json.hpp	/^				value_separator,  \/\/\/< the value separator `,`$/;"	e	enum:nlohmann::detail::lexer::token_type
value_string	dependencies/nlohmann/json.hpp	/^        value_string,     \/\/\/< a string -- use get_string() for actual value$/;"	e	enum:nlohmann::detail::lexer::token_type
value_string	dependencies/spriter/spriterengine/user_override/json.hpp	/^				value_string,     \/\/\/< a string -- use get_string() for actual value$/;"	e	enum:nlohmann::detail::lexer::token_type
value_t	dependencies/nlohmann/json.hpp	/^    using value_t = detail::value_t;$/;"	t	class:nlohmann::basic_json	typeref:typename:detail::value_t
value_t	dependencies/nlohmann/json.hpp	/^enum class value_t : std::uint8_t$/;"	g	namespace:nlohmann::detail	typeref:typename:std::uint8_t
value_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using value_t = detail::value_t;$/;"	t	class:nlohmann::basic_json	typeref:typename:detail::value_t
value_t	dependencies/spriter/spriterengine/user_override/json.hpp	/^		enum class value_t : std::uint8_t {$/;"	g	namespace:nlohmann::detail	typeref:typename:std::uint8_t
value_type	dependencies/nlohmann/json.hpp	/^    using value_type = BasicJsonType;$/;"	t	class:nlohmann::detail::json_ref	typeref:typename:BasicJsonType
value_type	dependencies/nlohmann/json.hpp	/^    using value_type = basic_json;$/;"	t	class:nlohmann::basic_json	typeref:typename:basic_json
value_type	dependencies/nlohmann/json.hpp	/^    using value_type = std::size_t;$/;"	t	struct:nlohmann::detail::index_sequence	typeref:typename:std::size_t
value_type	dependencies/nlohmann/json.hpp	/^    using value_type = typename BasicJsonType::value_type;$/;"	t	class:nlohmann::detail::iter_impl	typeref:typename:BasicJsonType::value_type
value_type	dependencies/nlohmann/json.hpp	/^    using value_type = typename CompatibleObjectType::value_type;$/;"	t	function:nlohmann::detail::from_json	typeref:typename:CompatibleObjectType::value_type
value_type	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using value_type = BasicJsonType;$/;"	t	class:nlohmann::detail::json_ref	typeref:typename:BasicJsonType
value_type	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using value_type = basic_json;$/;"	t	class:nlohmann::basic_json	typeref:typename:basic_json
value_type	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using value_type = std::size_t;$/;"	t	struct:nlohmann::detail::index_sequence	typeref:typename:std::size_t
value_type	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using value_type = typename BasicJsonType::value_type;$/;"	t	class:nlohmann::detail::iter_impl	typeref:typename:BasicJsonType::value_type
value_type	dependencies/spriter/spriterengine/user_override/json.hpp	/^			using value_type = typename CompatibleObjectType::value_type;$/;"	t	function:nlohmann::detail::from_json	typeref:typename:CompatibleObjectType::value_type
value_unsigned	dependencies/nlohmann/json.hpp	/^        value_unsigned,   \/\/\/< an unsigned integer -- use get_number_unsigned() for actual va/;"	e	enum:nlohmann::detail::lexer::token_type
value_unsigned	dependencies/nlohmann/json.hpp	/^    number_unsigned_t value_unsigned = 0;$/;"	m	class:nlohmann::detail::lexer	typeref:typename:number_unsigned_t
value_unsigned	dependencies/spriter/spriterengine/user_override/json.hpp	/^				value_unsigned,   \/\/\/< an unsigned integer -- use get_number_unsigned() for actual value$/;"	e	enum:nlohmann::detail::lexer::token_type
value_unsigned	dependencies/spriter/spriterengine/user_override/json.hpp	/^			number_unsigned_t value_unsigned = 0;$/;"	m	class:nlohmann::detail::lexer	typeref:typename:number_unsigned_t
variableNameMap	dependencies/spriter/spriterengine/variable/variableinstancenameandidmap.h	/^		VariableInstanceNameMap variableNameMap;$/;"	m	class:SpriterEngine::VariableInstanceNameAndIdMap	typeref:typename:VariableInstanceNameMap
variableObjectNameMap	dependencies/spriter/spriterengine/entity/entityinstancedata.h	/^		VariableInstanceObjectNameMap variableObjectNameMap;$/;"	m	class:SpriterEngine::EntityInstanceData	typeref:typename:VariableInstanceObjectNameMap
variableTimelines	dependencies/spriter/spriterengine/animation/animation.h	/^		Timeline2DMap variableTimelines;$/;"	m	class:SpriterEngine::Animation	typeref:typename:Timeline2DMap
variableType	dependencies/spriter/spriterengine/variable/variable.h	/^		VariableType variableType;$/;"	m	class:SpriterEngine::Variable	typeref:typename:VariableType
variables	dependencies/spriter/spriterengine/entity/entityinstancedata.h	/^		VariableInstanceObjectIdMap variables;$/;"	m	class:SpriterEngine::EntityInstanceData	typeref:typename:VariableInstanceObjectIdMap
variables	dependencies/spriter/spriterengine/variable/variablecontainer.h	/^		VariableVector variables;$/;"	m	class:SpriterEngine::VariableContainer	typeref:typename:VariableVector
variables	dependencies/spriter/spriterengine/variable/variableinstancenameandidmap.h	/^		VariableInstanceVector variables;$/;"	m	class:SpriterEngine::VariableInstanceNameAndIdMap	typeref:typename:VariableInstanceVector
vendorId	dependencies/sfml/include/SFML/Window/Joystick.hpp	/^        unsigned int vendorId;  \/\/\/< Manufacturer identifier$/;"	m	struct:sf::Joystick::Identification	typeref:typename:unsigned int
vertexCache	dependencies/sfml/include/SFML/Graphics/RenderTarget.hpp	/^        Vertex    vertexCache[VertexCacheSize]; \/\/\/< Pre-transformed vertices cache$/;"	m	struct:sf::RenderTarget::StatesCache	typeref:typename:Vertex[]
viewChanged	dependencies/sfml/include/SFML/Graphics/RenderTarget.hpp	/^        bool      viewChanged;    \/\/\/< Has the current view changed since last draw?$/;"	m	struct:sf::RenderTarget::StatesCache	typeref:typename:bool
volume	dependencies/spriter/spriterengine/objectinfo/soundobjectinfo.h	/^		real volume;$/;"	m	class:SpriterEngine::SoundObjectInfo	typeref:typename:real
volume	dependencies/spriter/spriterengine/override/soundobjectinforeference.h	/^		real volume;$/;"	m	class:SpriterEngine::SoundObjectInfoReference	typeref:typename:real
w	dependencies/nlohmann/json.hpp	/^    diyfp w;$/;"	m	struct:nlohmann::detail::dtoa_impl::boundaries	typeref:typename:diyfp
w	dependencies/sfml/include/SFML/Graphics/Glsl.inl	/^    T w; \/\/\/< 4th component (W) of the 4D vector$/;"	m	struct:Vector4	typeref:typename:T	file:
w	dependencies/spriter/spriterengine/global/atlas.h	/^                real w;$/;"	m	struct:SpriterEngine::atlasdata	typeref:typename:real
w	dependencies/spriter/spriterengine/user_override/json.hpp	/^				diyfp w;$/;"	m	struct:nlohmann::detail::dtoa_impl::boundaries	typeref:typename:diyfp
what	dependencies/nlohmann/json.hpp	/^    const char* what() const noexcept override$/;"	f	class:nlohmann::detail::exception	typeref:typename:const char *
what	dependencies/spriter/spriterengine/user_override/json.hpp	/^			const char* what() const noexcept override {$/;"	f	class:nlohmann::detail::exception	typeref:typename:const char *
wheel	dependencies/sfml/include/SFML/Window/Event.hpp	/^        Mouse::Wheel wheel; \/\/\/< Which wheel (for mice with multiple ones)$/;"	m	struct:sf::Event::MouseWheelScrollEvent	typeref:typename:Mouse::Wheel
width	dependencies/sfml/include/SFML/Graphics/Font.hpp	/^        unsigned int width;  \/\/\/< Current width of the row$/;"	m	struct:sf::Font::Row	typeref:typename:unsigned int
width	dependencies/sfml/include/SFML/Graphics/Rect.hpp	/^    T width;  \/\/\/< Width of the rectangle$/;"	m	class:sf::Rect	typeref:typename:T
width	dependencies/sfml/include/SFML/Window/Event.hpp	/^        unsigned int width;  \/\/\/< New width, in pixels$/;"	m	struct:sf::Event::SizeEvent	typeref:typename:unsigned int
width	dependencies/sfml/include/SFML/Window/VideoMode.hpp	/^    unsigned int width;        \/\/\/< Video mode width, in pixels$/;"	m	class:sf::VideoMode	typeref:typename:unsigned int
window	include/GameData.h	/^	sf::RenderWindow* window;$/;"	m	class:GameData	typeref:typename:sf::RenderWindow *
window	include/Scene.h	/^	sf::RenderWindow* window;$/;"	m	class:Scene	typeref:typename:sf::RenderWindow *
write_cbor	dependencies/nlohmann/json.hpp	/^    void write_cbor(const BasicJsonType& j)$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:void
write_cbor	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void write_cbor(const BasicJsonType& j) {$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:void
write_character	dependencies/nlohmann/json.hpp	/^    void write_character(CharType c) override$/;"	f	class:nlohmann::detail::output_stream_adapter	typeref:typename:void
write_character	dependencies/nlohmann/json.hpp	/^    void write_character(CharType c) override$/;"	f	class:nlohmann::detail::output_string_adapter	typeref:typename:void
write_character	dependencies/nlohmann/json.hpp	/^    void write_character(CharType c) override$/;"	f	class:nlohmann::detail::output_vector_adapter	typeref:typename:void
write_character	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void write_character(CharType c) override {$/;"	f	class:nlohmann::detail::output_stream_adapter	typeref:typename:void
write_character	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void write_character(CharType c) override {$/;"	f	class:nlohmann::detail::output_string_adapter	typeref:typename:void
write_character	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void write_character(CharType c) override {$/;"	f	class:nlohmann::detail::output_vector_adapter	typeref:typename:void
write_characters	dependencies/nlohmann/json.hpp	/^    void write_characters(const CharType* s, std::size_t length) override$/;"	f	class:nlohmann::detail::output_stream_adapter	typeref:typename:void
write_characters	dependencies/nlohmann/json.hpp	/^    void write_characters(const CharType* s, std::size_t length) override$/;"	f	class:nlohmann::detail::output_string_adapter	typeref:typename:void
write_characters	dependencies/nlohmann/json.hpp	/^    void write_characters(const CharType* s, std::size_t length) override$/;"	f	class:nlohmann::detail::output_vector_adapter	typeref:typename:void
write_characters	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void write_characters(const CharType* s, std::size_t length) override {$/;"	f	class:nlohmann::detail::output_stream_adapter	typeref:typename:void
write_characters	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void write_characters(const CharType* s, std::size_t length) override {$/;"	f	class:nlohmann::detail::output_string_adapter	typeref:typename:void
write_characters	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void write_characters(const CharType* s, std::size_t length) override {$/;"	f	class:nlohmann::detail::output_vector_adapter	typeref:typename:void
write_msgpack	dependencies/nlohmann/json.hpp	/^    void write_msgpack(const BasicJsonType& j)$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:void
write_msgpack	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void write_msgpack(const BasicJsonType& j) {$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:void
write_number	dependencies/nlohmann/json.hpp	/^    void write_number(const NumberType n)$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:void
write_number	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void write_number(const NumberType n) {$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:void
write_number_with_ubjson_prefix	dependencies/nlohmann/json.hpp	/^    void write_number_with_ubjson_prefix(const NumberType n,$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:void
write_number_with_ubjson_prefix	dependencies/spriter/spriterengine/user_override/json.hpp	/^				void write_number_with_ubjson_prefix(const NumberType n,$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:void
write_ubjson	dependencies/nlohmann/json.hpp	/^    void write_ubjson(const BasicJsonType& j, const bool use_count,$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:void
write_ubjson	dependencies/spriter/spriterengine/user_override/json.hpp	/^			void write_ubjson(const BasicJsonType& j, const bool use_count,$/;"	f	class:nlohmann::detail::binary_writer	typeref:typename:void
x	dependencies/sfml/include/SFML/Graphics/Glsl.inl	/^    T x; \/\/\/< 1st component (X) of the 4D vector$/;"	m	struct:Vector4	typeref:typename:T	file:
x	dependencies/sfml/include/SFML/System/Vector2.hpp	/^    T x; \/\/\/< X coordinate of the vector$/;"	m	class:sf::Vector2	typeref:typename:T
x	dependencies/sfml/include/SFML/System/Vector3.hpp	/^    T x; \/\/\/< X coordinate of the vector$/;"	m	class:sf::Vector3	typeref:typename:T
x	dependencies/sfml/include/SFML/Window/Event.hpp	/^        float x;           \/\/\/< Current value of the sensor on X axis$/;"	m	struct:sf::Event::SensorEvent	typeref:typename:float
x	dependencies/sfml/include/SFML/Window/Event.hpp	/^        int           x;      \/\/\/< X position of the mouse pointer, relative to the left of t/;"	m	struct:sf::Event::MouseButtonEvent	typeref:typename:int
x	dependencies/sfml/include/SFML/Window/Event.hpp	/^        int          x;     \/\/\/< X position of the mouse pointer, relative to the left of the/;"	m	struct:sf::Event::MouseWheelScrollEvent	typeref:typename:int
x	dependencies/sfml/include/SFML/Window/Event.hpp	/^        int x;               \/\/\/< X position of the touch, relative to the left of the owner /;"	m	struct:sf::Event::TouchEvent	typeref:typename:int
x	dependencies/sfml/include/SFML/Window/Event.hpp	/^        int x;     \/\/\/< X position of the mouse pointer, relative to the left of the owner wi/;"	m	struct:sf::Event::MouseWheelEvent	typeref:typename:int
x	dependencies/sfml/include/SFML/Window/Event.hpp	/^        int x; \/\/\/< X position of the mouse pointer, relative to the left of the owner window$/;"	m	struct:sf::Event::MouseMoveEvent	typeref:typename:int
x	dependencies/spriter/spriterengine/global/atlas.h	/^                real x;$/;"	m	struct:SpriterEngine::atlasdata	typeref:typename:real
x	dependencies/spriter/spriterengine/global/global.h	/^		real x;$/;"	m	struct:SpriterEngine::point	typeref:typename:real
x1	dependencies/spriter/spriterengine/timeinfo/beziereasingcurve.h	/^		real x1;$/;"	m	class:SpriterEngine::BezierEasingCurve	typeref:typename:real
x2	dependencies/spriter/spriterengine/timeinfo/beziereasingcurve.h	/^		real x2;$/;"	m	class:SpriterEngine::BezierEasingCurve	typeref:typename:real
xoff	dependencies/spriter/spriterengine/global/atlas.h	/^                real xoff;$/;"	m	struct:SpriterEngine::atlasdata	typeref:typename:real
y	dependencies/sfml/include/SFML/Graphics/Glsl.inl	/^    T y; \/\/\/< 2nd component (Y) of the 4D vector$/;"	m	struct:Vector4	typeref:typename:T	file:
y	dependencies/sfml/include/SFML/System/Vector2.hpp	/^    T y; \/\/\/< Y coordinate of the vector$/;"	m	class:sf::Vector2	typeref:typename:T
y	dependencies/sfml/include/SFML/System/Vector3.hpp	/^    T y; \/\/\/< Y coordinate of the vector$/;"	m	class:sf::Vector3	typeref:typename:T
y	dependencies/sfml/include/SFML/Window/Event.hpp	/^        float y;           \/\/\/< Current value of the sensor on Y axis$/;"	m	struct:sf::Event::SensorEvent	typeref:typename:float
y	dependencies/sfml/include/SFML/Window/Event.hpp	/^        int           y;      \/\/\/< Y position of the mouse pointer, relative to the top of th/;"	m	struct:sf::Event::MouseButtonEvent	typeref:typename:int
y	dependencies/sfml/include/SFML/Window/Event.hpp	/^        int          y;     \/\/\/< Y position of the mouse pointer, relative to the top of the /;"	m	struct:sf::Event::MouseWheelScrollEvent	typeref:typename:int
y	dependencies/sfml/include/SFML/Window/Event.hpp	/^        int y;               \/\/\/< Y position of the touch, relative to the top of the owner w/;"	m	struct:sf::Event::TouchEvent	typeref:typename:int
y	dependencies/sfml/include/SFML/Window/Event.hpp	/^        int y;     \/\/\/< Y position of the mouse pointer, relative to the top of the owner win/;"	m	struct:sf::Event::MouseWheelEvent	typeref:typename:int
y	dependencies/sfml/include/SFML/Window/Event.hpp	/^        int y; \/\/\/< Y position of the mouse pointer, relative to the top of the owner window$/;"	m	struct:sf::Event::MouseMoveEvent	typeref:typename:int
y	dependencies/spriter/spriterengine/global/atlas.h	/^                real y;$/;"	m	struct:SpriterEngine::atlasdata	typeref:typename:real
y	dependencies/spriter/spriterengine/global/global.h	/^		real y;$/;"	m	struct:SpriterEngine::point	typeref:typename:real
y1	dependencies/spriter/spriterengine/timeinfo/beziereasingcurve.h	/^		real y1;$/;"	m	class:SpriterEngine::BezierEasingCurve	typeref:typename:real
y2	dependencies/spriter/spriterengine/timeinfo/beziereasingcurve.h	/^		real y2;$/;"	m	class:SpriterEngine::BezierEasingCurve	typeref:typename:real
yoff	dependencies/spriter/spriterengine/global/atlas.h	/^                real yoff;$/;"	m	struct:SpriterEngine::atlasdata	typeref:typename:real
z	dependencies/sfml/include/SFML/Graphics/Glsl.inl	/^    T z; \/\/\/< 3rd component (Z) of the 4D vector$/;"	m	struct:Vector4	typeref:typename:T	file:
z	dependencies/sfml/include/SFML/System/Vector3.hpp	/^    T z; \/\/\/< Z coordinate of the vector$/;"	m	class:sf::Vector3	typeref:typename:T
z	dependencies/sfml/include/SFML/Window/Event.hpp	/^        float z;           \/\/\/< Current value of the sensor on Z axis$/;"	m	struct:sf::Event::SensorEvent	typeref:typename:float
zOrder	dependencies/spriter/spriterengine/animation/mainlinekeyinstance.h	/^		ObjectInterfaceVector zOrder;$/;"	m	class:SpriterEngine::MainlineKeyInstance	typeref:typename:ObjectInterfaceVector
zOrder	dependencies/spriter/spriterengine/entity/entityinstance.h	/^		ObjectInterfaceVector *zOrder;$/;"	m	class:SpriterEngine::EntityInstance	typeref:typename:ObjectInterfaceVector *
zOrderRefs	dependencies/spriter/spriterengine/animation/mainlinekey.h	/^		RefVector zOrderRefs;$/;"	m	class:SpriterEngine::MainlineKey	typeref:typename:RefVector
~Animation	dependencies/spriter/spriterengine/animation/animation.cpp	/^	Animation::~Animation()$/;"	f	class:SpriterEngine::Animation
~AnimationInstance	dependencies/spriter/spriterengine/animation/animationinstance.cpp	/^	AnimationInstance::~AnimationInstance()$/;"	f	class:SpriterEngine::AnimationInstance
~Asset	include/GameData.h	/^		~Asset() {$/;"	f	struct:GameData::Asset
~BaseAsset	include/GameData.h	/^		virtual ~BaseAsset() {}$/;"	f	struct:GameData::BaseAsset
~CharacterMapInterface	dependencies/spriter/spriterengine/charactermap/charactermapinterface.h	/^		virtual ~CharacterMapInterface() {}$/;"	f	class:SpriterEngine::CharacterMapInterface
~Drawable	dependencies/sfml/include/SFML/Graphics/Drawable.hpp	/^    virtual ~Drawable() {}$/;"	f	class:sf::Drawable
~EasingCurveInterface	dependencies/spriter/spriterengine/timeinfo/easingcurveinterface.cpp	/^	EasingCurveInterface::~EasingCurveInterface()$/;"	f	class:SpriterEngine::EasingCurveInterface
~Entity	dependencies/spriter/spriterengine/entity/entity.cpp	/^	Entity::~Entity()$/;"	f	class:SpriterEngine::Entity
~EntityInstance	dependencies/spriter/spriterengine/entity/entityinstance.cpp	/^	EntityInstance::~EntityInstance()$/;"	f	class:SpriterEngine::EntityInstance
~EntityInstanceData	dependencies/spriter/spriterengine/entity/entityinstancedata.cpp	/^	EntityInstanceData::~EntityInstanceData()$/;"	f	class:SpriterEngine::EntityInstanceData
~File	dependencies/spriter/spriterengine/file/file.h	/^		virtual ~File() {}$/;"	f	class:SpriterEngine::File
~FileFactory	dependencies/spriter/spriterengine/override/filefactory.cpp	/^	FileFactory::~FileFactory()$/;"	f	class:SpriterEngine::FileFactory
~GameData	src/GameData.cpp	/^GameData::~GameData() {$/;"	f	class:GameData
~InputStream	dependencies/sfml/include/SFML/System/InputStream.hpp	/^    virtual ~InputStream() {}$/;"	f	class:sf::InputStream
~Loader	dependencies/spriter/spriterengine/loading/loader.cpp	/^	Loader::~Loader()$/;"	f	class:SpriterEngine::Loader
~MainlineKey	dependencies/spriter/spriterengine/animation/mainlinekey.cpp	/^	MainlineKey::~MainlineKey()$/;"	f	class:SpriterEngine::MainlineKey
~MainlineKeyInstance	dependencies/spriter/spriterengine/animation/mainlinekeyinstance.cpp	/^	MainlineKeyInstance::~MainlineKeyInstance()$/;"	f	class:SpriterEngine::MainlineKeyInstance
~ObjectFactory	dependencies/spriter/spriterengine/override/objectfactory.h	/^		virtual ~ObjectFactory() {}$/;"	f	class:SpriterEngine::ObjectFactory
~ObjectRef	dependencies/spriter/spriterengine/objectref/objectref.h	/^		virtual ~ObjectRef() {}$/;"	f	class:SpriterEngine::ObjectRef
~ObjectRefInstance	dependencies/spriter/spriterengine/objectref/objectrefinstance.h	/^		virtual ~ObjectRefInstance() {}$/;"	f	class:SpriterEngine::ObjectRefInstance
~ProxyTimelineKey	dependencies/spriter/spriterengine/timeline/proxytimelinekey.cpp	/^	ProxyTimelineKey::~ProxyTimelineKey()$/;"	f	class:SpriterEngine::ProxyTimelineKey
~Scene	include/Scene.h	/^	virtual ~Scene() {}$/;"	f	class:Scene
~SceneManager	src/SceneManager.cpp	/^SceneManager::~SceneManager() {$/;"	f	class:SceneManager
~SoundFileReader	dependencies/sfml/include/SFML/Audio/SoundFileReader.hpp	/^    virtual ~SoundFileReader() {}$/;"	f	class:sf::SoundFileReader
~SoundFileWriter	dependencies/sfml/include/SFML/Audio/SoundFileWriter.hpp	/^    virtual ~SoundFileWriter() {}$/;"	f	class:sf::SoundFileWriter
~SpriterFileAttributeWrapper	dependencies/spriter/spriterengine/override/spriterfileattributewrapper.cpp	/^	SpriterFileAttributeWrapper::~SpriterFileAttributeWrapper()$/;"	f	class:SpriterEngine::SpriterFileAttributeWrapper
~SpriterFileDocumentWrapper	dependencies/spriter/spriterengine/override/spriterfiledocumentwrapper.cpp	/^	SpriterFileDocumentWrapper::~SpriterFileDocumentWrapper()$/;"	f	class:SpriterEngine::SpriterFileDocumentWrapper
~SpriterFileElementWrapper	dependencies/spriter/spriterengine/override/spriterfileelementwrapper.cpp	/^	SpriterFileElementWrapper::~SpriterFileElementWrapper()$/;"	f	class:SpriterEngine::SpriterFileElementWrapper
~SpriterModel	dependencies/spriter/spriterengine/model/spritermodel.cpp	/^	SpriterModel::~SpriterModel()$/;"	f	class:SpriterEngine::SpriterModel
~ThreadFunc	dependencies/sfml/include/SFML/System/Thread.inl	/^    virtual ~ThreadFunc() {}$/;"	f	struct:priv::ThreadFunc	file:
~TimeInfo	dependencies/spriter/spriterengine/timeinfo/timeinfo.cpp	/^	TimeInfo::~TimeInfo()$/;"	f	class:SpriterEngine::TimeInfo
~Timeline	dependencies/spriter/spriterengine/timeline/timeline.cpp	/^	Timeline::~Timeline()$/;"	f	class:SpriterEngine::Timeline
~TimelineInstance	dependencies/spriter/spriterengine/timeline/timelineinstance.cpp	/^	TimelineInstance::~TimelineInstance()$/;"	f	class:SpriterEngine::TimelineInstance
~TimelineKey	dependencies/spriter/spriterengine/timeline/timelinekey.cpp	/^	TimelineKey::~TimelineKey()$/;"	f	class:SpriterEngine::TimelineKey
~UniversalObjectInterface	dependencies/spriter/spriterengine/objectinfo/universalobjectinterface.cpp	/^	UniversalObjectInterface::~UniversalObjectInterface()$/;"	f	class:SpriterEngine::UniversalObjectInterface
~Variable	dependencies/spriter/spriterengine/variable/variable.cpp	/^	Variable::~Variable()$/;"	f	class:SpriterEngine::Variable
~VariableContainer	dependencies/spriter/spriterengine/variable/variablecontainer.cpp	/^	VariableContainer::~VariableContainer()$/;"	f	class:SpriterEngine::VariableContainer
~VariableInstanceNameAndIdMap	dependencies/spriter/spriterengine/variable/variableinstancenameandidmap.cpp	/^	VariableInstanceNameAndIdMap::~VariableInstanceNameAndIdMap()$/;"	f	class:SpriterEngine::VariableInstanceNameAndIdMap
~basic_json	dependencies/nlohmann/json.hpp	/^    ~basic_json() noexcept$/;"	f	class:nlohmann::basic_json
~basic_json	dependencies/spriter/spriterengine/user_override/json.hpp	/^			~basic_json() noexcept {$/;"	f	class:nlohmann::basic_json
~input_stream_adapter	dependencies/nlohmann/json.hpp	/^    ~input_stream_adapter() override$/;"	f	class:nlohmann::detail::input_stream_adapter
~input_stream_adapter	dependencies/spriter/spriterengine/user_override/json.hpp	/^			~input_stream_adapter() override {$/;"	f	class:nlohmann::detail::input_stream_adapter
